


10 # BinomialCoefficient(0,0) 		<-- 1;
10 # BinomialCoefficient(n_IsPositiveInteger,m_IsNonNegativeInteger)_(2*m <= n) <-- ((n-m+1) *** n) / m!;
15 # BinomialCoefficient(n_IsPositiveInteger,m_IsNonNegativeInteger)_(2*m > n And m <= n) <-- BinomialCoefficient(n, n-m);
20 # BinomialCoefficient(n_IsInteger,m_IsInteger) <-- 0;

Combinations(n,m) := BinomialCoefficient(n,m);


Function("PermutationsList",{result,list})
[
  If(Length(list) = 0,
  [
    result;
  ],
  [
    Local(head);
    Local(newresult);
    Local(i);
    head:=list[1];
    newresult:={};
    ForEach(item,result)
    [
      For(i:=Length(item)+1,i>0,i--)
      [
        DestructiveInsert(newresult,1,Insert(item,i,head));
      ];
    ];
    newresult:=DestructiveReverse(newresult);
    PermutationsList(newresult,Rest(list));
  ]);
];


Function("PermutationsList",{list})
[
  PermutationsList({{}},list);
];

