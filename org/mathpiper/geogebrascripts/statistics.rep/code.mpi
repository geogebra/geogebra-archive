
GeometricMean(list) := 
[
    Check(IsList(list), "Argument", "Argument must be a list.");
    
    Product(list)^(1/Length(list));
];


Mean(list) := 
[
    Check(IsList(list), "Argument", "Argument must be a list.");
    
    Sum(list)/Length(list);
];


Median(list) :=
[
    Check(IsList(list), "Argument", "Argument must be a list.");
    
    Local(sx,n,n2); 
    
    sx := HeapSort(list,"<");
    
    n := Length(list);
    
    n2 := (n>>1);
    
    If(Modulo(n,2) = 1, sx[n2+1], (sx[n2]+sx[n2+1])/2);
];


StandardDeviation(list) := 
[
    Check(IsList(list), "Argument", "Argument must be a list.");

    Sqrt(UnbiasedVariance(list));
];



UnbiasedVariance(list) := 
[
    Check(IsList(list), "Argument", "Argument must be a list.");
    
    Sum((list - Mean(list))^2)/(Length(list)-1);
];


Variance(list) := 
[
    Check(IsList(list), "Argument", "Argument must be a list.");

    Sum((list - Mean(list))^2)/Length(list);
];

