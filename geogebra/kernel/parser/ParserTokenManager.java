/* Generated By:JavaCC: Do not edit this line. ParserTokenManager.java */
package geogebra.kernel.parser;
import geogebra.*;
import geogebra.main.*;
import geogebra.kernel.*;
import geogebra.kernel.arithmetic.*;
import java.util.*;

/** Token Manager. */
public class ParserTokenManager implements ParserConstants
{

  /** Debug output. */
  public  java.io.PrintStream debugStream = System.out;
  /** Set debug output. */
  public  void setDebugStream(java.io.PrintStream ds) { debugStream = ds; }
private final int jjStopStringLiteralDfa_0(int pos, long active0, long active1)
{
   switch (pos)
   {
      case 0:
         if ((active0 & 0x800000000000L) != 0L)
            return 70;
         if ((active0 & 0x40000000000L) != 0L || (active1 & 0x80000L) != 0L)
         {
            jjmatchedKind = 54;
            return 39;
         }
         if ((active0 & 0x400000000000L) != 0L)
            return 77;
         if ((active0 & 0x1000000000000L) != 0L)
            return 304;
         if ((active1 & 0x600L) != 0L)
         {
            jjmatchedKind = 54;
            return 62;
         }
         if ((active0 & 0x80L) != 0L)
            return 0;
         if ((active0 & 0x4000L) != 0L)
            return 15;
         if ((active0 & 0x4000000L) != 0L)
            return 9;
         if ((active0 & 0x2000L) != 0L)
            return 12;
         if ((active0 & 0x80000L) != 0L)
            return 6;
         if ((active1 & 0x1000L) != 0L)
         {
            jjmatchedKind = 54;
            return 145;
         }
         return -1;
      case 1:
         if ((active0 & 0x40000000000L) != 0L || (active1 & 0x81600L) != 0L)
         {
            jjmatchedKind = 54;
            jjmatchedPos = 1;
            return 304;
         }
         return -1;
      case 2:
         if ((active1 & 0x81000L) != 0L)
         {
            jjmatchedKind = 54;
            jjmatchedPos = 2;
            return 304;
         }
         if ((active0 & 0x40000000000L) != 0L)
            return 304;
         return -1;
      case 3:
         if ((active1 & 0x81000L) != 0L)
         {
            jjmatchedKind = 54;
            jjmatchedPos = 3;
            return 304;
         }
         return -1;
      case 4:
         if ((active1 & 0x80000L) != 0L)
         {
            jjmatchedKind = 54;
            jjmatchedPos = 4;
            return 304;
         }
         return -1;
      case 5:
         if ((active1 & 0x80000L) != 0L)
         {
            jjmatchedKind = 54;
            jjmatchedPos = 5;
            return 304;
         }
         return -1;
      case 6:
         if ((active1 & 0x80000L) != 0L)
         {
            jjmatchedKind = 84;
            jjmatchedPos = 6;
            return -1;
         }
         return -1;
      default :
         return -1;
   }
}
private final int jjStartNfa_0(int pos, long active0, long active1)
{
   return jjMoveNfa_0(jjStopStringLiteralDfa_0(pos, active0, active1), pos + 1);
}
private int jjStopAtPos(int pos, int kind)
{
   jjmatchedKind = kind;
   jjmatchedPos = pos;
   return pos + 1;
}
private int jjMoveStringLiteralDfa0_0()
{
   switch(curChar)
   {
      case 33:
         return jjStartNfaWithStates_0(0, 26, 9);
      case 39:
         return jjStopAtPos(0, 43);
      case 40:
         return jjStopAtPos(0, 94);
      case 41:
         return jjStopAtPos(0, 93);
      case 43:
         return jjStopAtPos(0, 20);
      case 44:
         return jjStopAtPos(0, 90);
      case 47:
         return jjStopAtPos(0, 24);
      case 58:
         jjmatchedKind = 87;
         return jjMoveStringLiteralDfa1_0(0x40L, 0x0L);
      case 59:
         return jjStopAtPos(0, 5);
      case 60:
         return jjStartNfaWithStates_0(0, 13, 12);
      case 61:
         return jjStartNfaWithStates_0(0, 19, 6);
      case 62:
         return jjStartNfaWithStates_0(0, 14, 15);
      case 88:
         return jjStartNfaWithStates_0(0, 48, 304);
      case 91:
         return jjStopAtPos(0, 91);
      case 93:
         return jjStopAtPos(0, 92);
      case 94:
         return jjStopAtPos(0, 25);
      case 99:
         return jjMoveStringLiteralDfa1_0(0x0L, 0x1000L);
      case 108:
         return jjMoveStringLiteralDfa1_0(0x0L, 0x600L);
      case 114:
         return jjMoveStringLiteralDfa1_0(0x40000000000L, 0x80000L);
      case 120:
         return jjStartNfaWithStates_0(0, 46, 77);
      case 121:
         return jjStartNfaWithStates_0(0, 47, 70);
      case 123:
         return jjStopAtPos(0, 88);
      case 124:
         return jjStartNfaWithStates_0(0, 7, 0);
      case 125:
         return jjStopAtPos(0, 89);
      case 172:
         return jjStopAtPos(0, 8);
      case 176:
         return jjStopAtPos(0, 40);
      case 178:
         return jjStopAtPos(0, 30);
      case 179:
         return jjStopAtPos(0, 31);
      case 185:
         return jjStopAtPos(0, 29);
      case 8304:
         return jjStopAtPos(0, 28);
      case 8308:
         return jjStopAtPos(0, 32);
      case 8309:
         return jjStopAtPos(0, 33);
      case 8310:
         return jjStopAtPos(0, 34);
      case 8311:
         return jjStopAtPos(0, 35);
      case 8312:
         return jjStopAtPos(0, 36);
      case 8313:
         return jjStopAtPos(0, 37);
      case 8495:
         return jjStopAtPos(0, 39);
      case 8734:
         return jjStopAtPos(0, 41);
      case 8741:
         return jjStopAtPos(0, 17);
      case 8855:
         return jjStopAtPos(0, 23);
      case 8869:
         return jjStopAtPos(0, 18);
      default :
         return jjMoveNfa_0(1, 0);
   }
}
private int jjMoveStringLiteralDfa1_0(long active0, long active1)
{
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(0, active0, active1);
      return 1;
   }
   switch(curChar)
   {
      case 61:
         if ((active0 & 0x40L) != 0L)
            return jjStopAtPos(1, 6);
         break;
      case 97:
         return jjMoveStringLiteralDfa2_0(active0, 0x40000000000L, active1, 0x80000L);
      case 98:
         return jjMoveStringLiteralDfa2_0(active0, 0L, active1, 0x1000L);
      case 100:
         return jjMoveStringLiteralDfa2_0(active0, 0L, active1, 0x200L);
      case 103:
         return jjMoveStringLiteralDfa2_0(active0, 0L, active1, 0x400L);
      default :
         break;
   }
   return jjStartNfa_0(0, active0, active1);
}
private int jjMoveStringLiteralDfa2_0(long old0, long active0, long old1, long active1)
{
   if (((active0 &= old0) | (active1 &= old1)) == 0L)
      return jjStartNfa_0(0, old0, old1); 
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(1, active0, active1);
      return 2;
   }
   switch(curChar)
   {
      case 40:
         if ((active1 & 0x200L) != 0L)
            return jjStopAtPos(2, 73);
         else if ((active1 & 0x400L) != 0L)
            return jjStopAtPos(2, 74);
         break;
      case 100:
         if ((active0 & 0x40000000000L) != 0L)
            return jjStartNfaWithStates_0(2, 42, 304);
         break;
      case 110:
         return jjMoveStringLiteralDfa3_0(active0, 0L, active1, 0x80000L);
      case 114:
         return jjMoveStringLiteralDfa3_0(active0, 0L, active1, 0x1000L);
      default :
         break;
   }
   return jjStartNfa_0(1, active0, active1);
}
private int jjMoveStringLiteralDfa3_0(long old0, long active0, long old1, long active1)
{
   if (((active0 &= old0) | (active1 &= old1)) == 0L)
      return jjStartNfa_0(1, old0, old1); 
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(2, 0L, active1);
      return 3;
   }
   switch(curChar)
   {
      case 100:
         return jjMoveStringLiteralDfa4_0(active1, 0x80000L);
      case 116:
         return jjMoveStringLiteralDfa4_0(active1, 0x1000L);
      default :
         break;
   }
   return jjStartNfa_0(2, 0L, active1);
}
private int jjMoveStringLiteralDfa4_0(long old1, long active1)
{
   if (((active1 &= old1)) == 0L)
      return jjStartNfa_0(2, 0L, old1); 
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(3, 0L, active1);
      return 4;
   }
   switch(curChar)
   {
      case 40:
         if ((active1 & 0x1000L) != 0L)
            return jjStopAtPos(4, 76);
         break;
      case 111:
         return jjMoveStringLiteralDfa5_0(active1, 0x80000L);
      default :
         break;
   }
   return jjStartNfa_0(3, 0L, active1);
}
private int jjMoveStringLiteralDfa5_0(long old1, long active1)
{
   if (((active1 &= old1)) == 0L)
      return jjStartNfa_0(3, 0L, old1); 
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(4, 0L, active1);
      return 5;
   }
   switch(curChar)
   {
      case 109:
         return jjMoveStringLiteralDfa6_0(active1, 0x80000L);
      default :
         break;
   }
   return jjStartNfa_0(4, 0L, active1);
}
private int jjMoveStringLiteralDfa6_0(long old1, long active1)
{
   if (((active1 &= old1)) == 0L)
      return jjStartNfa_0(4, 0L, old1); 
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(5, 0L, active1);
      return 6;
   }
   switch(curChar)
   {
      case 40:
         return jjMoveStringLiteralDfa7_0(active1, 0x80000L);
      default :
         break;
   }
   return jjStartNfa_0(5, 0L, active1);
}
private int jjMoveStringLiteralDfa7_0(long old1, long active1)
{
   if (((active1 &= old1)) == 0L)
      return jjStartNfa_0(5, 0L, old1); 
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(6, 0L, active1);
      return 7;
   }
   switch(curChar)
   {
      case 41:
         if ((active1 & 0x80000L) != 0L)
            return jjStopAtPos(7, 83);
         break;
      default :
         break;
   }
   return jjStartNfa_0(6, 0L, active1);
}
private int jjStartNfaWithStates_0(int pos, int kind, int state)
{
   jjmatchedKind = kind;
   jjmatchedPos = pos;
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) { return pos + 1; }
   return jjMoveNfa_0(state, pos + 1);
}
static final long[] jjbitVec0 = {
   0x10000000000L, 0x0L, 0x0L, 0x0L
};
static final long[] jjbitVec1 = {
   0x8000000000L, 0x0L, 0x0L, 0x0L
};
static final long[] jjbitVec2 = {
   0x0L, 0x80000000L, 0x0L, 0x0L
};
static final long[] jjbitVec3 = {
   0x0L, 0x100000000L, 0x0L, 0x0L
};
static final long[] jjbitVec4 = {
   0x0L, 0x1000000000L, 0x0L, 0x0L
};
static final long[] jjbitVec5 = {
   0x0L, 0x2000000000L, 0x0L, 0x0L
};
static final long[] jjbitVec6 = {
   0x80000L, 0x0L, 0x0L, 0x0L
};
static final long[] jjbitVec7 = {
   0x40000L, 0x0L, 0x0L, 0x0L
};
static final long[] jjbitVec8 = {
   0x0L, 0x0L, 0x0L, 0x20L
};
static final long[] jjbitVec9 = {
   0x0L, 0x0L, 0x0L, 0x2000000000000000L
};
static final long[] jjbitVec10 = {
   0x0L, 0x0L, 0x0L, 0x1L
};
static final long[] jjbitVec11 = {
   0xfffffffffffffffeL, 0xffffffffffffffffL, 0xffffffffffffffffL, 0xffffffffffffffffL
};
static final long[] jjbitVec13 = {
   0x0L, 0x0L, 0xffffffffffffffffL, 0xffffffffffffffffL
};
static final long[] jjbitVec14 = {
   0x1600L, 0x0L, 0x0L, 0x0L
};
static final long[] jjbitVec15 = {
   0x0L, 0xffc000000000L, 0x0L, 0xffc000000000L
};
static final long[] jjbitVec16 = {
   0x0L, 0x3ff00000000L, 0x0L, 0x3ff000000000000L
};
static final long[] jjbitVec17 = {
   0x0L, 0xffc000000000L, 0x0L, 0xff8000000000L
};
static final long[] jjbitVec18 = {
   0x0L, 0xffc000000000L, 0x0L, 0x0L
};
static final long[] jjbitVec19 = {
   0x0L, 0x3ff0000L, 0x0L, 0x3ff0000L
};
static final long[] jjbitVec20 = {
   0x0L, 0x3ffL, 0x0L, 0x0L
};
static final long[] jjbitVec21 = {
   0x600007fffffc0L, 0xffffffffffffc000L, 0xffffffffffffffffL, 0x13000000007fffffL
};
static final long[] jjbitVec22 = {
   0x0L, 0x0L, 0x80000000000000L, 0xffffffffff7fffffL
};
static final long[] jjbitVec23 = {
   0xffffffffffffffffL, 0xffffffffffffffffL, 0xffffffffffffffffL, 0xfffffffffffffff0L
};
static final long[] jjbitVec24 = {
   0xffffffffffffffffL, 0xffffffffffffffffL, 0x1ffffffffffL, 0x0L
};
static final long[] jjbitVec25 = {
   0x0L, 0x0L, 0xfffffffffffe0000L, 0xfffffffffffffL
};
static final long[] jjbitVec26 = {
   0xfffffffffffffffeL, 0xffffffffffffffffL, 0xffffffffffff0003L, 0x3ffffffffffffffL
};
static final long[] jjbitVec27 = {
   0xfffe000000000000L, 0xffffffffffffffffL, 0xffffffffffffffffL, 0xffffffffffffffffL
};
static final long[] jjbitVec28 = {
   0xffffffffffffffffL, 0xffffffffffffffffL, 0xffffffffffffffffL, 0x1fffffffffffffffL
};
static final long[] jjbitVec29 = {
   0x0L, 0xfffffffffffffffeL, 0xffffffffffffffffL, 0xffffffffffffffffL
};
static final long[] jjbitVec30 = {
   0xffffffffffffffffL, 0xffffffL, 0x0L, 0x0L
};
static final long[] jjbitVec31 = {
   0xffffffffffffffffL, 0xffffffffffffffffL, 0xfffffffffL, 0x0L
};
static final long[] jjbitVec32 = {
   0xffffffffe0000000L, 0xffffffffffffffffL, 0xffffffffffffffffL, 0xffffffffffffffffL
};
static final long[] jjbitVec33 = {
   0x3fffffffffffL, 0x0L, 0x0L, 0x0L
};
static final long[] jjbitVec34 = {
   0xfffffffffff80000L, 0xffffffffffffffffL, 0xffffffffffffffffL, 0xffffffffffffffffL
};
static final long[] jjbitVec35 = {
   0xffffffffffffffffL, 0xffffffffffffffffL, 0xffffffffffffffffL, 0xfffffffffffffffL
};
static final long[] jjbitVec36 = {
   0x0L, 0x0L, 0xffffffffffffffffL, 0x1fffffffffffffffL
};
static final long[] jjbitVec37 = {
   0x0L, 0xffffffc000000000L, 0xfffffffe3fffffffL, 0x1fffffffL
};
private int jjMoveNfa_0(int startState, int curPos)
{
   int startsAt = 0;
   jjnewStateCnt = 304;
   int i = 1;
   jjstateSet[0] = startState;
   int kind = 0x7fffffff;
   for (;;)
   {
      if (++jjround == 0x7fffffff)
         ReInitRounds();
      if (curChar < 64)
      {
         long l = 1L << curChar;
         do
         {
            switch(jjstateSet[--i])
            {
               case 145:
                  if ((0x3ff009000000000L & l) != 0L)
                     jjCheckNAddStates(0, 3);
                  else if (curChar == 40)
                  {
                     if (kind > 84)
                        kind = 84;
                  }
                  if ((0x3ff009000000000L & l) != 0L)
                  {
                     if (kind > 54)
                        kind = 54;
                     jjCheckNAddStates(4, 6);
                  }
                  if ((0x3ff001000000000L & l) != 0L)
                     jjCheckNAddTwoStates(138, 126);
                  if ((0x3ff001000000000L & l) != 0L)
                  {
                     if (kind > 54)
                        kind = 54;
                     jjCheckNAdd(131);
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(125, 126);
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 53)
                        kind = 53;
                     jjCheckNAdd(123);
                  }
                  break;
               case 304:
                  if ((0x3ff009000000000L & l) != 0L)
                     jjCheckNAddStates(0, 3);
                  else if (curChar == 40)
                  {
                     if (kind > 84)
                        kind = 84;
                  }
                  if ((0x3ff009000000000L & l) != 0L)
                  {
                     if (kind > 54)
                        kind = 54;
                     jjCheckNAddStates(4, 6);
                  }
                  if ((0x3ff001000000000L & l) != 0L)
                     jjCheckNAddTwoStates(138, 126);
                  if ((0x3ff001000000000L & l) != 0L)
                  {
                     if (kind > 54)
                        kind = 54;
                     jjCheckNAdd(131);
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(125, 126);
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 53)
                        kind = 53;
                     jjCheckNAdd(123);
                  }
                  break;
               case 70:
                  if ((0x3ff009000000000L & l) != 0L)
                     jjCheckNAddStates(0, 3);
                  else if (curChar == 40)
                  {
                     if (kind > 84)
                        kind = 84;
                  }
                  if ((0x3ff009000000000L & l) != 0L)
                  {
                     if (kind > 54)
                        kind = 54;
                     jjCheckNAddStates(4, 6);
                  }
                  else if (curChar == 40)
                  {
                     if (kind > 58)
                        kind = 58;
                  }
                  if ((0x3ff001000000000L & l) != 0L)
                     jjCheckNAddTwoStates(138, 126);
                  if ((0x3ff001000000000L & l) != 0L)
                  {
                     if (kind > 54)
                        kind = 54;
                     jjCheckNAdd(131);
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(125, 126);
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 53)
                        kind = 53;
                     jjCheckNAdd(123);
                  }
                  break;
               case 77:
                  if ((0x3ff009000000000L & l) != 0L)
                     jjCheckNAddStates(0, 3);
                  else if (curChar == 40)
                  {
                     if (kind > 84)
                        kind = 84;
                  }
                  if ((0x3ff009000000000L & l) != 0L)
                  {
                     if (kind > 54)
                        kind = 54;
                     jjCheckNAddStates(4, 6);
                  }
                  else if (curChar == 40)
                  {
                     if (kind > 57)
                        kind = 57;
                  }
                  if ((0x3ff001000000000L & l) != 0L)
                     jjCheckNAddTwoStates(138, 126);
                  if ((0x3ff001000000000L & l) != 0L)
                  {
                     if (kind > 54)
                        kind = 54;
                     jjCheckNAdd(131);
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(125, 126);
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 53)
                        kind = 53;
                     jjCheckNAdd(123);
                  }
                  break;
               case 39:
                  if ((0x3ff009000000000L & l) != 0L)
                     jjCheckNAddStates(0, 3);
                  else if (curChar == 40)
                  {
                     if (kind > 84)
                        kind = 84;
                  }
                  if ((0x3ff009000000000L & l) != 0L)
                  {
                     if (kind > 54)
                        kind = 54;
                     jjCheckNAddStates(4, 6);
                  }
                  if ((0x3ff001000000000L & l) != 0L)
                     jjCheckNAddTwoStates(138, 126);
                  if ((0x3ff001000000000L & l) != 0L)
                  {
                     if (kind > 54)
                        kind = 54;
                     jjCheckNAdd(131);
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(125, 126);
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 53)
                        kind = 53;
                     jjCheckNAdd(123);
                  }
                  break;
               case 1:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 49)
                        kind = 49;
                     jjCheckNAddStates(7, 15);
                  }
                  else if (curChar == 36)
                  {
                     if (kind > 54)
                        kind = 54;
                     jjCheckNAddStates(16, 22);
                  }
                  else if (curChar == 46)
                     jjCheckNAddTwoStates(116, 117);
                  else if (curChar == 34)
                     jjCheckNAddTwoStates(58, 59);
                  else if (curChar == 42)
                  {
                     if (kind > 22)
                        kind = 22;
                  }
                  else if (curChar == 45)
                  {
                     if (kind > 21)
                        kind = 21;
                  }
                  else if (curChar == 62)
                     jjstateSet[jjnewStateCnt++] = 15;
                  else if (curChar == 60)
                     jjstateSet[jjnewStateCnt++] = 12;
                  else if (curChar == 33)
                     jjstateSet[jjnewStateCnt++] = 9;
                  else if (curChar == 61)
                     jjstateSet[jjnewStateCnt++] = 6;
                  else if (curChar == 38)
                     jjstateSet[jjnewStateCnt++] = 3;
                  else if (curChar == 63)
                  {
                     if (kind > 27)
                        kind = 27;
                  }
                  break;
               case 62:
                  if ((0x3ff009000000000L & l) != 0L)
                     jjCheckNAddStates(0, 3);
                  else if (curChar == 40)
                  {
                     if (kind > 84)
                        kind = 84;
                  }
                  if ((0x3ff009000000000L & l) != 0L)
                  {
                     if (kind > 54)
                        kind = 54;
                     jjCheckNAddStates(4, 6);
                  }
                  if ((0x3ff001000000000L & l) != 0L)
                     jjCheckNAddTwoStates(138, 126);
                  if ((0x3ff001000000000L & l) != 0L)
                  {
                     if (kind > 54)
                        kind = 54;
                     jjCheckNAdd(131);
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(125, 126);
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 53)
                        kind = 53;
                     jjCheckNAdd(123);
                  }
                  break;
               case 3:
                  if (curChar == 38 && kind > 10)
                     kind = 10;
                  break;
               case 4:
                  if (curChar == 38)
                     jjstateSet[jjnewStateCnt++] = 3;
                  break;
               case 6:
                  if (curChar == 61 && kind > 11)
                     kind = 11;
                  break;
               case 7:
                  if (curChar == 61)
                     jjstateSet[jjnewStateCnt++] = 6;
                  break;
               case 9:
                  if (curChar == 61 && kind > 12)
                     kind = 12;
                  break;
               case 10:
                  if (curChar == 33)
                     jjstateSet[jjnewStateCnt++] = 9;
                  break;
               case 12:
                  if (curChar == 61 && kind > 15)
                     kind = 15;
                  break;
               case 13:
                  if (curChar == 60)
                     jjstateSet[jjnewStateCnt++] = 12;
                  break;
               case 15:
                  if (curChar == 61 && kind > 16)
                     kind = 16;
                  break;
               case 16:
                  if (curChar == 62)
                     jjstateSet[jjnewStateCnt++] = 15;
                  break;
               case 18:
                  if (curChar == 45 && kind > 21)
                     kind = 21;
                  break;
               case 19:
                  if (curChar == 42 && kind > 22)
                     kind = 22;
                  break;
               case 20:
                  if (curChar == 63 && kind > 27)
                     kind = 27;
                  break;
               case 25:
                  if (curChar == 40 && kind > 71)
                     kind = 71;
                  break;
               case 32:
                  if (curChar == 40 && kind > 72)
                     kind = 72;
                  break;
               case 35:
                  if (curChar == 40 && kind > 81)
                     kind = 81;
                  break;
               case 46:
                  if (curChar == 40 && kind > 82)
                     kind = 82;
                  break;
               case 57:
                  if (curChar == 34)
                     jjCheckNAddTwoStates(58, 59);
                  break;
               case 58:
                  if ((0xfffffffbffffffffL & l) != 0L)
                     jjCheckNAddTwoStates(58, 59);
                  break;
               case 59:
                  if (curChar == 34 && kind > 85)
                     kind = 85;
                  break;
               case 65:
                  if (curChar == 40 && kind > 58)
                     kind = 58;
                  break;
               case 72:
                  if (curChar == 40 && kind > 57)
                     kind = 57;
                  break;
               case 82:
                  if (curChar == 40 && kind > 61)
                     kind = 61;
                  break;
               case 85:
                  if (curChar == 40 && kind > 67)
                     kind = 67;
                  break;
               case 102:
                  if (curChar == 40 && kind > 79)
                     kind = 79;
                  break;
               case 115:
                  if (curChar == 46)
                     jjCheckNAddTwoStates(116, 117);
                  break;
               case 116:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 49)
                     kind = 49;
                  jjCheckNAdd(116);
                  break;
               case 117:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(117, 118);
                  break;
               case 119:
                  if (curChar == 45)
                     jjCheckNAdd(120);
                  break;
               case 120:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 50)
                     kind = 50;
                  jjCheckNAdd(120);
                  break;
               case 123:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 53)
                     kind = 53;
                  jjCheckNAdd(123);
                  break;
               case 125:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(125, 126);
                  break;
               case 126:
                  if (curChar == 40 && kind > 84)
                     kind = 84;
                  break;
               case 127:
                  if (curChar != 36)
                     break;
                  if (kind > 54)
                     kind = 54;
                  jjCheckNAddStates(16, 22);
                  break;
               case 128:
                  if ((0x3ff009000000000L & l) == 0L)
                     break;
                  if (kind > 54)
                     kind = 54;
                  jjCheckNAddStates(4, 6);
                  break;
               case 130:
                  if ((0xfffffffbffffffffL & l) == 0L)
                     break;
                  if (kind > 54)
                     kind = 54;
                  jjCheckNAdd(131);
                  break;
               case 131:
                  if ((0x3ff001000000000L & l) == 0L)
                     break;
                  if (kind > 54)
                     kind = 54;
                  jjCheckNAdd(131);
                  break;
               case 133:
                  jjAddStates(23, 24);
                  break;
               case 135:
                  if ((0x3ff009000000000L & l) != 0L)
                     jjCheckNAddStates(0, 3);
                  break;
               case 137:
                  if ((0xfffffffbffffffffL & l) != 0L)
                     jjCheckNAddTwoStates(138, 126);
                  break;
               case 138:
                  if ((0x3ff001000000000L & l) != 0L)
                     jjCheckNAddTwoStates(138, 126);
                  break;
               case 140:
                  jjAddStates(25, 26);
                  break;
               case 143:
                  if (curChar == 40 && kind > 59)
                     kind = 59;
                  break;
               case 146:
                  if (curChar == 40 && kind > 65)
                     kind = 65;
                  break;
               case 150:
                  if (curChar == 40 && kind > 80)
                     kind = 80;
                  break;
               case 164:
                  if (curChar == 40 && kind > 60)
                     kind = 60;
                  break;
               case 167:
                  if (curChar == 40 && kind > 66)
                     kind = 66;
                  break;
               case 171:
                  if (curChar == 40 && kind > 75)
                     kind = 75;
                  break;
               case 175:
                  if (curChar == 40 && kind > 78)
                     kind = 78;
                  break;
               case 194:
                  if (curChar == 40 && kind > 62)
                     kind = 62;
                  break;
               case 200:
                  if (curChar == 40 && kind > 63)
                     kind = 63;
                  break;
               case 206:
                  if (curChar == 40 && kind > 64)
                     kind = 64;
                  break;
               case 212:
                  if (curChar == 40 && kind > 68)
                     kind = 68;
                  break;
               case 219:
                  if (curChar == 40 && kind > 69)
                     kind = 69;
                  break;
               case 226:
                  if (curChar == 40 && kind > 70)
                     kind = 70;
                  break;
               case 233:
                  if (curChar == 40 && kind > 77)
                     kind = 77;
                  break;
               case 293:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 49)
                     kind = 49;
                  jjCheckNAddStates(7, 15);
                  break;
               case 294:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 49)
                     kind = 49;
                  jjCheckNAddTwoStates(294, 295);
                  break;
               case 295:
                  if (curChar == 46)
                     jjCheckNAdd(296);
                  break;
               case 296:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 49)
                     kind = 49;
                  jjCheckNAdd(296);
                  break;
               case 297:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(297, 298);
                  break;
               case 298:
                  if (curChar == 46 && kind > 49)
                     kind = 49;
                  break;
               case 299:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(27, 29);
                  break;
               case 300:
                  if (curChar == 46)
                     jjCheckNAdd(301);
                  break;
               case 301:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(301, 118);
                  break;
               case 302:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(302, 303);
                  break;
               case 303:
                  if (curChar == 46)
                     jjCheckNAdd(118);
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else if (curChar < 128)
      {
         long l = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 145:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     jjCheckNAddTwoStates(138, 126);
                  else if (curChar == 95)
                     jjAddStates(30, 31);
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     jjCheckNAddStates(0, 3);
                  else if (curChar == 95)
                     jjAddStates(32, 33);
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     jjCheckNAddTwoStates(124, 125);
                  if ((0x7fffffe07fffffeL & l) != 0L)
                  {
                     if (kind > 54)
                        kind = 54;
                     jjCheckNAdd(131);
                  }
                  if ((0x7fffffe07fffffeL & l) != 0L)
                  {
                     if (kind > 54)
                        kind = 54;
                     jjCheckNAddStates(4, 6);
                  }
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     jjCheckNAddTwoStates(122, 123);
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 152;
                  else if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 148;
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 144;
                  break;
               case 304:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     jjCheckNAddTwoStates(138, 126);
                  else if (curChar == 95)
                     jjAddStates(30, 31);
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     jjCheckNAddStates(0, 3);
                  else if (curChar == 95)
                     jjAddStates(32, 33);
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     jjCheckNAddTwoStates(124, 125);
                  if ((0x7fffffe07fffffeL & l) != 0L)
                  {
                     if (kind > 54)
                        kind = 54;
                     jjCheckNAdd(131);
                  }
                  if ((0x7fffffe07fffffeL & l) != 0L)
                  {
                     if (kind > 54)
                        kind = 54;
                     jjCheckNAddStates(4, 6);
                  }
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     jjCheckNAddTwoStates(122, 123);
                  break;
               case 70:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     jjCheckNAddTwoStates(138, 126);
                  else if (curChar == 95)
                     jjAddStates(30, 31);
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     jjCheckNAddStates(0, 3);
                  else if (curChar == 95)
                     jjAddStates(32, 33);
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     jjCheckNAddTwoStates(124, 125);
                  if ((0x7fffffe07fffffeL & l) != 0L)
                  {
                     if (kind > 54)
                        kind = 54;
                     jjCheckNAdd(131);
                  }
                  if ((0x7fffffe07fffffeL & l) != 0L)
                  {
                     if (kind > 54)
                        kind = 54;
                     jjCheckNAddStates(4, 6);
                  }
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     jjCheckNAddTwoStates(122, 123);
                  if (curChar == 99)
                     jjstateSet[jjnewStateCnt++] = 69;
                  break;
               case 77:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     jjCheckNAddTwoStates(138, 126);
                  else if (curChar == 95)
                     jjAddStates(30, 31);
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     jjCheckNAddStates(0, 3);
                  else if (curChar == 95)
                     jjAddStates(32, 33);
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     jjCheckNAddTwoStates(124, 125);
                  if ((0x7fffffe07fffffeL & l) != 0L)
                  {
                     if (kind > 54)
                        kind = 54;
                     jjCheckNAdd(131);
                  }
                  if ((0x7fffffe07fffffeL & l) != 0L)
                  {
                     if (kind > 54)
                        kind = 54;
                     jjCheckNAddStates(4, 6);
                  }
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     jjCheckNAddTwoStates(122, 123);
                  if (curChar == 99)
                     jjstateSet[jjnewStateCnt++] = 76;
                  break;
               case 39:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     jjCheckNAddTwoStates(138, 126);
                  else if (curChar == 95)
                     jjAddStates(30, 31);
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     jjCheckNAddStates(0, 3);
                  else if (curChar == 95)
                     jjAddStates(32, 33);
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     jjCheckNAddTwoStates(124, 125);
                  if ((0x7fffffe07fffffeL & l) != 0L)
                  {
                     if (kind > 54)
                        kind = 54;
                     jjCheckNAdd(131);
                  }
                  if ((0x7fffffe07fffffeL & l) != 0L)
                  {
                     if (kind > 54)
                        kind = 54;
                     jjCheckNAddStates(4, 6);
                  }
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     jjCheckNAddTwoStates(122, 123);
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 38;
                  break;
               case 1:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                  {
                     if (kind > 54)
                        kind = 54;
                     jjCheckNAddStates(16, 22);
                  }
                  else if (curChar == 124)
                     jjstateSet[jjnewStateCnt++] = 0;
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     jjCheckNAddStates(34, 37);
                  if (curChar == 97)
                     jjAddStates(38, 50);
                  else if (curChar == 65)
                     jjAddStates(51, 57);
                  else if (curChar == 83)
                     jjAddStates(58, 61);
                  else if (curChar == 115)
                     jjAddStates(62, 66);
                  else if (curChar == 67)
                     jjAddStates(67, 69);
                  else if (curChar == 99)
                     jjAddStates(70, 72);
                  else if (curChar == 70)
                     jjAddStates(73, 74);
                  else if (curChar == 102)
                     jjAddStates(75, 76);
                  else if (curChar == 84)
                     jjAddStates(77, 79);
                  else if (curChar == 116)
                     jjAddStates(80, 82);
                  else if (curChar == 120)
                     jjCheckNAddTwoStates(72, 77);
                  else if (curChar == 121)
                     jjCheckNAddTwoStates(65, 70);
                  else if (curChar == 108)
                     jjAddStates(83, 84);
                  else if (curChar == 71)
                     jjstateSet[jjnewStateCnt++] = 55;
                  else if (curChar == 103)
                     jjstateSet[jjnewStateCnt++] = 50;
                  else if (curChar == 82)
                     jjstateSet[jjnewStateCnt++] = 44;
                  else if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 39;
                  else if (curChar == 76)
                     jjstateSet[jjnewStateCnt++] = 33;
                  else if (curChar == 69)
                     jjstateSet[jjnewStateCnt++] = 30;
                  else if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 27;
                  else if (curChar == 80)
                     jjCheckNAdd(21);
                  else if (curChar == 112)
                     jjCheckNAdd(21);
                  break;
               case 62:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     jjCheckNAddTwoStates(138, 126);
                  else if (curChar == 95)
                     jjAddStates(30, 31);
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     jjCheckNAddStates(0, 3);
                  else if (curChar == 95)
                     jjAddStates(32, 33);
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     jjCheckNAddTwoStates(124, 125);
                  if ((0x7fffffe07fffffeL & l) != 0L)
                  {
                     if (kind > 54)
                        kind = 54;
                     jjCheckNAdd(131);
                  }
                  if ((0x7fffffe07fffffeL & l) != 0L)
                  {
                     if (kind > 54)
                        kind = 54;
                     jjCheckNAddStates(4, 6);
                  }
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     jjCheckNAddTwoStates(122, 123);
                  if (curChar == 110)
                     jjCheckNAdd(32);
                  else if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 61;
                  break;
               case 0:
                  if (curChar == 124 && kind > 9)
                     kind = 9;
                  break;
               case 21:
                  if (curChar == 105 && kind > 38)
                     kind = 38;
                  break;
               case 22:
                  if (curChar == 112)
                     jjCheckNAdd(21);
                  break;
               case 23:
                  if (curChar == 80)
                     jjCheckNAdd(21);
                  break;
               case 26:
               case 29:
                  if (curChar == 112)
                     jjCheckNAdd(25);
                  break;
               case 27:
                  if (curChar == 120)
                     jjstateSet[jjnewStateCnt++] = 26;
                  break;
               case 28:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 27;
                  break;
               case 30:
                  if (curChar == 120)
                     jjstateSet[jjnewStateCnt++] = 29;
                  break;
               case 31:
                  if (curChar == 69)
                     jjstateSet[jjnewStateCnt++] = 30;
                  break;
               case 33:
                  if (curChar == 110)
                     jjCheckNAdd(32);
                  break;
               case 34:
                  if (curChar == 76)
                     jjstateSet[jjnewStateCnt++] = 33;
                  break;
               case 36:
               case 41:
                  if (curChar == 100)
                     jjCheckNAdd(35);
                  break;
               case 37:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 36;
                  break;
               case 38:
                  if (curChar == 117)
                     jjstateSet[jjnewStateCnt++] = 37;
                  break;
               case 40:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 39;
                  break;
               case 42:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 41;
                  break;
               case 43:
                  if (curChar == 117)
                     jjstateSet[jjnewStateCnt++] = 42;
                  break;
               case 44:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 43;
                  break;
               case 45:
                  if (curChar == 82)
                     jjstateSet[jjnewStateCnt++] = 44;
                  break;
               case 47:
               case 52:
                  if (curChar == 97)
                     jjCheckNAdd(46);
                  break;
               case 48:
                  if (curChar == 109)
                     jjstateSet[jjnewStateCnt++] = 47;
                  break;
               case 49:
                  if (curChar == 109)
                     jjstateSet[jjnewStateCnt++] = 48;
                  break;
               case 50:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 49;
                  break;
               case 51:
                  if (curChar == 103)
                     jjstateSet[jjnewStateCnt++] = 50;
                  break;
               case 53:
                  if (curChar == 109)
                     jjstateSet[jjnewStateCnt++] = 52;
                  break;
               case 54:
                  if (curChar == 109)
                     jjstateSet[jjnewStateCnt++] = 53;
                  break;
               case 55:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 54;
                  break;
               case 56:
                  if (curChar == 71)
                     jjstateSet[jjnewStateCnt++] = 55;
                  break;
               case 58:
                  jjAddStates(85, 86);
                  break;
               case 60:
                  if (curChar == 108)
                     jjAddStates(83, 84);
                  break;
               case 61:
                  if (curChar == 103)
                     jjCheckNAdd(32);
                  break;
               case 63:
                  if (curChar == 110)
                     jjCheckNAdd(32);
                  break;
               case 64:
                  if (curChar == 121)
                     jjCheckNAddTwoStates(65, 70);
                  break;
               case 66:
                  if (curChar == 100)
                     jjCheckNAdd(65);
                  break;
               case 67:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 66;
                  break;
               case 68:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 67;
                  break;
               case 69:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 68;
                  break;
               case 71:
                  if (curChar == 120)
                     jjCheckNAddTwoStates(72, 77);
                  break;
               case 73:
                  if (curChar == 100)
                     jjCheckNAdd(72);
                  break;
               case 74:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 73;
                  break;
               case 75:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 74;
                  break;
               case 76:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 75;
                  break;
               case 78:
                  if (curChar == 116)
                     jjAddStates(80, 82);
                  break;
               case 79:
                  if (curChar == 101 && kind > 44)
                     kind = 44;
                  break;
               case 80:
               case 90:
                  if (curChar == 117)
                     jjCheckNAdd(79);
                  break;
               case 81:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 80;
                  break;
               case 83:
               case 92:
                  if (curChar == 110)
                     jjCheckNAdd(82);
                  break;
               case 84:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 83;
                  break;
               case 86:
               case 94:
                  if (curChar == 104)
                     jjCheckNAdd(85);
                  break;
               case 87:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 86;
                  break;
               case 88:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 87;
                  break;
               case 89:
                  if (curChar == 84)
                     jjAddStates(77, 79);
                  break;
               case 91:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 90;
                  break;
               case 93:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 92;
                  break;
               case 95:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 94;
                  break;
               case 96:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 95;
                  break;
               case 97:
                  if (curChar == 102)
                     jjAddStates(75, 76);
                  break;
               case 98:
                  if (curChar == 101 && kind > 45)
                     kind = 45;
                  break;
               case 99:
               case 108:
                  if (curChar == 115)
                     jjCheckNAdd(98);
                  break;
               case 100:
                  if (curChar == 108)
                     jjstateSet[jjnewStateCnt++] = 99;
                  break;
               case 101:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 100;
                  break;
               case 103:
               case 111:
                  if (curChar == 114)
                     jjCheckNAdd(102);
                  break;
               case 104:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 103;
                  break;
               case 105:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 104;
                  break;
               case 106:
                  if (curChar == 108)
                     jjstateSet[jjnewStateCnt++] = 105;
                  break;
               case 107:
                  if (curChar == 70)
                     jjAddStates(73, 74);
                  break;
               case 109:
                  if (curChar == 108)
                     jjstateSet[jjnewStateCnt++] = 108;
                  break;
               case 110:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 109;
                  break;
               case 112:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 111;
                  break;
               case 113:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 112;
                  break;
               case 114:
                  if (curChar == 108)
                     jjstateSet[jjnewStateCnt++] = 113;
                  break;
               case 118:
                  if (curChar == 69)
                     jjAddStates(87, 88);
                  break;
               case 121:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     jjCheckNAddStates(34, 37);
                  break;
               case 122:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     jjCheckNAddTwoStates(122, 123);
                  break;
               case 124:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     jjCheckNAddTwoStates(124, 125);
                  break;
               case 127:
                  if ((0x7fffffe07fffffeL & l) == 0L)
                     break;
                  if (kind > 54)
                     kind = 54;
                  jjCheckNAddStates(16, 22);
                  break;
               case 128:
                  if ((0x7fffffe07fffffeL & l) == 0L)
                     break;
                  if (kind > 54)
                     kind = 54;
                  jjCheckNAddStates(4, 6);
                  break;
               case 129:
                  if (curChar == 95)
                     jjAddStates(32, 33);
                  break;
               case 130:
                  if (kind > 54)
                     kind = 54;
                  jjCheckNAdd(131);
                  break;
               case 131:
                  if ((0x7fffffe07fffffeL & l) == 0L)
                     break;
                  if (kind > 54)
                     kind = 54;
                  jjCheckNAdd(131);
                  break;
               case 132:
                  if (curChar == 123)
                     jjCheckNAdd(133);
                  break;
               case 133:
                  if ((0xdfffffffffffffffL & l) != 0L)
                     jjCheckNAddTwoStates(133, 134);
                  break;
               case 134:
                  if (curChar != 125)
                     break;
                  if (kind > 54)
                     kind = 54;
                  jjCheckNAdd(131);
                  break;
               case 135:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     jjCheckNAddStates(0, 3);
                  break;
               case 136:
                  if (curChar == 95)
                     jjAddStates(30, 31);
                  break;
               case 137:
                  jjCheckNAddTwoStates(138, 126);
                  break;
               case 138:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     jjCheckNAddTwoStates(138, 126);
                  break;
               case 139:
                  if (curChar == 123)
                     jjCheckNAdd(140);
                  break;
               case 140:
                  if ((0xdfffffffffffffffL & l) != 0L)
                     jjCheckNAddTwoStates(140, 141);
                  break;
               case 141:
                  if (curChar == 125)
                     jjCheckNAddTwoStates(138, 126);
                  break;
               case 142:
                  if (curChar == 99)
                     jjAddStates(70, 72);
                  break;
               case 144:
               case 155:
                  if (curChar == 115)
                     jjCheckNAdd(143);
                  break;
               case 147:
               case 157:
                  if (curChar == 104)
                     jjCheckNAdd(146);
                  break;
               case 148:
                  if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 147;
                  break;
               case 149:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 148;
                  break;
               case 151:
               case 160:
                  if (curChar == 108)
                     jjCheckNAdd(150);
                  break;
               case 152:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 151;
                  break;
               case 153:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 152;
                  break;
               case 154:
                  if (curChar == 67)
                     jjAddStates(67, 69);
                  break;
               case 156:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 155;
                  break;
               case 158:
                  if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 157;
                  break;
               case 159:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 158;
                  break;
               case 161:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 160;
                  break;
               case 162:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 161;
                  break;
               case 163:
                  if (curChar == 115)
                     jjAddStates(62, 66);
                  break;
               case 165:
               case 182:
                  if (curChar == 110)
                     jjCheckNAdd(164);
                  break;
               case 166:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 165;
                  break;
               case 168:
               case 184:
                  if (curChar == 104)
                     jjCheckNAdd(167);
                  break;
               case 169:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 168;
                  break;
               case 170:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 169;
                  break;
               case 172:
               case 187:
                  if (curChar == 116)
                     jjCheckNAdd(171);
                  break;
               case 173:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 172;
                  break;
               case 174:
                  if (curChar == 113)
                     jjstateSet[jjnewStateCnt++] = 173;
                  break;
               case 176:
               case 178:
               case 190:
                  if (curChar == 110)
                     jjCheckNAdd(175);
                  break;
               case 177:
                  if (curChar == 103)
                     jjstateSet[jjnewStateCnt++] = 176;
                  break;
               case 179:
                  if (curChar == 103)
                     jjstateSet[jjnewStateCnt++] = 178;
                  break;
               case 180:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 179;
                  break;
               case 181:
                  if (curChar == 83)
                     jjAddStates(58, 61);
                  break;
               case 183:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 182;
                  break;
               case 185:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 184;
                  break;
               case 186:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 185;
                  break;
               case 188:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 187;
                  break;
               case 189:
                  if (curChar == 113)
                     jjstateSet[jjnewStateCnt++] = 188;
                  break;
               case 191:
                  if (curChar == 103)
                     jjstateSet[jjnewStateCnt++] = 190;
                  break;
               case 192:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 191;
                  break;
               case 193:
                  if (curChar == 65)
                     jjAddStates(51, 57);
                  break;
               case 195:
               case 237:
               case 240:
                  if (curChar == 115)
                     jjCheckNAdd(194);
                  break;
               case 196:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 195;
                  break;
               case 197:
                  if (curChar == 67)
                     jjstateSet[jjnewStateCnt++] = 196;
                  break;
               case 198:
                  if (curChar == 99)
                     jjstateSet[jjnewStateCnt++] = 197;
                  break;
               case 199:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 198;
                  break;
               case 201:
               case 245:
               case 248:
                  if (curChar == 110)
                     jjCheckNAdd(200);
                  break;
               case 202:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 201;
                  break;
               case 203:
                  if (curChar == 83)
                     jjstateSet[jjnewStateCnt++] = 202;
                  break;
               case 204:
                  if (curChar == 99)
                     jjstateSet[jjnewStateCnt++] = 203;
                  break;
               case 205:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 204;
                  break;
               case 207:
               case 253:
               case 256:
                  if (curChar == 110)
                     jjCheckNAdd(206);
                  break;
               case 208:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 207;
                  break;
               case 209:
                  if (curChar == 84)
                     jjstateSet[jjnewStateCnt++] = 208;
                  break;
               case 210:
                  if (curChar == 99)
                     jjstateSet[jjnewStateCnt++] = 209;
                  break;
               case 211:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 210;
                  break;
               case 213:
               case 261:
               case 265:
                  if (curChar == 104)
                     jjCheckNAdd(212);
                  break;
               case 214:
                  if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 213;
                  break;
               case 215:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 214;
                  break;
               case 216:
                  if (curChar == 67)
                     jjstateSet[jjnewStateCnt++] = 215;
                  break;
               case 217:
                  if (curChar == 99)
                     jjstateSet[jjnewStateCnt++] = 216;
                  break;
               case 218:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 217;
                  break;
               case 220:
               case 271:
               case 275:
                  if (curChar == 104)
                     jjCheckNAdd(219);
                  break;
               case 221:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 220;
                  break;
               case 222:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 221;
                  break;
               case 223:
                  if (curChar == 83)
                     jjstateSet[jjnewStateCnt++] = 222;
                  break;
               case 224:
                  if (curChar == 99)
                     jjstateSet[jjnewStateCnt++] = 223;
                  break;
               case 225:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 224;
                  break;
               case 227:
               case 281:
               case 285:
                  if (curChar == 104)
                     jjCheckNAdd(226);
                  break;
               case 228:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 227;
                  break;
               case 229:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 228;
                  break;
               case 230:
                  if (curChar == 84)
                     jjstateSet[jjnewStateCnt++] = 229;
                  break;
               case 231:
                  if (curChar == 99)
                     jjstateSet[jjnewStateCnt++] = 230;
                  break;
               case 232:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 231;
                  break;
               case 234:
               case 291:
                  if (curChar == 115)
                     jjCheckNAdd(233);
                  break;
               case 235:
                  if (curChar == 98)
                     jjstateSet[jjnewStateCnt++] = 234;
                  break;
               case 236:
                  if (curChar == 97)
                     jjAddStates(38, 50);
                  break;
               case 238:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 237;
                  break;
               case 239:
                  if (curChar == 99)
                     jjstateSet[jjnewStateCnt++] = 238;
                  break;
               case 241:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 240;
                  break;
               case 242:
                  if (curChar == 99)
                     jjstateSet[jjnewStateCnt++] = 241;
                  break;
               case 243:
                  if (curChar == 99)
                     jjstateSet[jjnewStateCnt++] = 242;
                  break;
               case 244:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 243;
                  break;
               case 246:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 245;
                  break;
               case 247:
                  if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 246;
                  break;
               case 249:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 248;
                  break;
               case 250:
                  if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 249;
                  break;
               case 251:
                  if (curChar == 99)
                     jjstateSet[jjnewStateCnt++] = 250;
                  break;
               case 252:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 251;
                  break;
               case 254:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 253;
                  break;
               case 255:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 254;
                  break;
               case 257:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 256;
                  break;
               case 258:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 257;
                  break;
               case 259:
                  if (curChar == 99)
                     jjstateSet[jjnewStateCnt++] = 258;
                  break;
               case 260:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 259;
                  break;
               case 262:
                  if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 261;
                  break;
               case 263:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 262;
                  break;
               case 264:
                  if (curChar == 99)
                     jjstateSet[jjnewStateCnt++] = 263;
                  break;
               case 266:
                  if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 265;
                  break;
               case 267:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 266;
                  break;
               case 268:
                  if (curChar == 99)
                     jjstateSet[jjnewStateCnt++] = 267;
                  break;
               case 269:
                  if (curChar == 99)
                     jjstateSet[jjnewStateCnt++] = 268;
                  break;
               case 270:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 269;
                  break;
               case 272:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 271;
                  break;
               case 273:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 272;
                  break;
               case 274:
                  if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 273;
                  break;
               case 276:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 275;
                  break;
               case 277:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 276;
                  break;
               case 278:
                  if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 277;
                  break;
               case 279:
                  if (curChar == 99)
                     jjstateSet[jjnewStateCnt++] = 278;
                  break;
               case 280:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 279;
                  break;
               case 282:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 281;
                  break;
               case 283:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 282;
                  break;
               case 284:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 283;
                  break;
               case 286:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 285;
                  break;
               case 287:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 286;
                  break;
               case 288:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 287;
                  break;
               case 289:
                  if (curChar == 99)
                     jjstateSet[jjnewStateCnt++] = 288;
                  break;
               case 290:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 289;
                  break;
               case 292:
                  if (curChar == 98)
                     jjstateSet[jjnewStateCnt++] = 291;
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else
      {
         int hiByte = (int)(curChar >> 8);
         int i1 = hiByte >> 6;
         long l1 = 1L << (hiByte & 077);
         int i2 = (curChar & 0xff) >> 6;
         long l2 = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 145:
                  if (jjCanMove_12(hiByte, i1, i2, l1, l2))
                  {
                     if (kind > 54)
                        kind = 54;
                     jjCheckNAddStates(4, 6);
                  }
                  if (jjCanMove_12(hiByte, i1, i2, l1, l2))
                  {
                     if (kind > 54)
                        kind = 54;
                     jjCheckNAdd(131);
                  }
                  if (jjCanMove_12(hiByte, i1, i2, l1, l2))
                     jjCheckNAddStates(0, 3);
                  if (jjCanMove_12(hiByte, i1, i2, l1, l2))
                     jjCheckNAddTwoStates(138, 126);
                  break;
               case 304:
                  if (jjCanMove_12(hiByte, i1, i2, l1, l2))
                  {
                     if (kind > 54)
                        kind = 54;
                     jjCheckNAddStates(4, 6);
                  }
                  if (jjCanMove_12(hiByte, i1, i2, l1, l2))
                  {
                     if (kind > 54)
                        kind = 54;
                     jjCheckNAdd(131);
                  }
                  if (jjCanMove_12(hiByte, i1, i2, l1, l2))
                     jjCheckNAddStates(0, 3);
                  if (jjCanMove_12(hiByte, i1, i2, l1, l2))
                     jjCheckNAddTwoStates(138, 126);
                  break;
               case 70:
                  if (jjCanMove_12(hiByte, i1, i2, l1, l2))
                  {
                     if (kind > 54)
                        kind = 54;
                     jjCheckNAddStates(4, 6);
                  }
                  if (jjCanMove_12(hiByte, i1, i2, l1, l2))
                  {
                     if (kind > 54)
                        kind = 54;
                     jjCheckNAdd(131);
                  }
                  if (jjCanMove_12(hiByte, i1, i2, l1, l2))
                     jjCheckNAddStates(0, 3);
                  if (jjCanMove_12(hiByte, i1, i2, l1, l2))
                     jjCheckNAddTwoStates(138, 126);
                  break;
               case 77:
                  if (jjCanMove_12(hiByte, i1, i2, l1, l2))
                  {
                     if (kind > 54)
                        kind = 54;
                     jjCheckNAddStates(4, 6);
                  }
                  if (jjCanMove_12(hiByte, i1, i2, l1, l2))
                  {
                     if (kind > 54)
                        kind = 54;
                     jjCheckNAdd(131);
                  }
                  if (jjCanMove_12(hiByte, i1, i2, l1, l2))
                     jjCheckNAddStates(0, 3);
                  if (jjCanMove_12(hiByte, i1, i2, l1, l2))
                     jjCheckNAddTwoStates(138, 126);
                  break;
               case 39:
                  if (jjCanMove_12(hiByte, i1, i2, l1, l2))
                  {
                     if (kind > 54)
                        kind = 54;
                     jjCheckNAddStates(4, 6);
                  }
                  if (jjCanMove_12(hiByte, i1, i2, l1, l2))
                  {
                     if (kind > 54)
                        kind = 54;
                     jjCheckNAdd(131);
                  }
                  if (jjCanMove_12(hiByte, i1, i2, l1, l2))
                     jjCheckNAddStates(0, 3);
                  if (jjCanMove_12(hiByte, i1, i2, l1, l2))
                     jjCheckNAddTwoStates(138, 126);
                  break;
               case 1:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                  {
                     if (kind > 9)
                        kind = 9;
                  }
                  if (jjCanMove_1(hiByte, i1, i2, l1, l2))
                  {
                     if (kind > 10)
                        kind = 10;
                  }
                  if (jjCanMove_2(hiByte, i1, i2, l1, l2))
                  {
                     if (kind > 11)
                        kind = 11;
                  }
                  if (jjCanMove_3(hiByte, i1, i2, l1, l2))
                  {
                     if (kind > 12)
                        kind = 12;
                  }
                  if (jjCanMove_4(hiByte, i1, i2, l1, l2))
                  {
                     if (kind > 15)
                        kind = 15;
                  }
                  if (jjCanMove_5(hiByte, i1, i2, l1, l2))
                  {
                     if (kind > 16)
                        kind = 16;
                  }
                  if (jjCanMove_6(hiByte, i1, i2, l1, l2))
                  {
                     if (kind > 21)
                        kind = 21;
                  }
                  if (jjCanMove_7(hiByte, i1, i2, l1, l2))
                  {
                     if (kind > 22)
                        kind = 22;
                  }
                  if (jjCanMove_8(hiByte, i1, i2, l1, l2))
                  {
                     if (kind > 27)
                        kind = 27;
                  }
                  if (jjCanMove_9(hiByte, i1, i2, l1, l2))
                  {
                     if (kind > 38)
                        kind = 38;
                  }
                  if (jjCanMove_12(hiByte, i1, i2, l1, l2))
                  {
                     if (kind > 54)
                        kind = 54;
                     jjCheckNAddStates(16, 22);
                  }
                  if (jjCanMove_11(hiByte, i1, i2, l1, l2))
                  {
                     if (kind > 49)
                        kind = 49;
                     jjCheckNAddStates(7, 15);
                  }
                  break;
               case 62:
                  if (jjCanMove_12(hiByte, i1, i2, l1, l2))
                  {
                     if (kind > 54)
                        kind = 54;
                     jjCheckNAddStates(4, 6);
                  }
                  if (jjCanMove_12(hiByte, i1, i2, l1, l2))
                  {
                     if (kind > 54)
                        kind = 54;
                     jjCheckNAdd(131);
                  }
                  if (jjCanMove_12(hiByte, i1, i2, l1, l2))
                     jjCheckNAddStates(0, 3);
                  if (jjCanMove_12(hiByte, i1, i2, l1, l2))
                     jjCheckNAddTwoStates(138, 126);
                  break;
               case 2:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2) && kind > 9)
                     kind = 9;
                  break;
               case 5:
                  if (jjCanMove_1(hiByte, i1, i2, l1, l2) && kind > 10)
                     kind = 10;
                  break;
               case 8:
                  if (jjCanMove_2(hiByte, i1, i2, l1, l2) && kind > 11)
                     kind = 11;
                  break;
               case 11:
                  if (jjCanMove_3(hiByte, i1, i2, l1, l2) && kind > 12)
                     kind = 12;
                  break;
               case 14:
                  if (jjCanMove_4(hiByte, i1, i2, l1, l2) && kind > 15)
                     kind = 15;
                  break;
               case 17:
                  if (jjCanMove_5(hiByte, i1, i2, l1, l2) && kind > 16)
                     kind = 16;
                  break;
               case 18:
                  if (jjCanMove_6(hiByte, i1, i2, l1, l2) && kind > 21)
                     kind = 21;
                  break;
               case 19:
                  if (jjCanMove_7(hiByte, i1, i2, l1, l2) && kind > 22)
                     kind = 22;
                  break;
               case 20:
                  if (jjCanMove_8(hiByte, i1, i2, l1, l2) && kind > 27)
                     kind = 27;
                  break;
               case 24:
                  if (jjCanMove_9(hiByte, i1, i2, l1, l2) && kind > 38)
                     kind = 38;
                  break;
               case 58:
                  if (jjCanMove_10(hiByte, i1, i2, l1, l2))
                     jjAddStates(85, 86);
                  break;
               case 116:
                  if (!jjCanMove_11(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 49)
                     kind = 49;
                  jjstateSet[jjnewStateCnt++] = 116;
                  break;
               case 117:
                  if (jjCanMove_11(hiByte, i1, i2, l1, l2))
                     jjCheckNAddTwoStates(117, 118);
                  break;
               case 119:
                  if (jjCanMove_6(hiByte, i1, i2, l1, l2))
                     jjCheckNAdd(120);
                  break;
               case 120:
                  if (!jjCanMove_11(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 50)
                     kind = 50;
                  jjCheckNAdd(120);
                  break;
               case 127:
                  if (!jjCanMove_12(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 54)
                     kind = 54;
                  jjCheckNAddStates(16, 22);
                  break;
               case 128:
                  if (!jjCanMove_12(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 54)
                     kind = 54;
                  jjCheckNAddStates(4, 6);
                  break;
               case 130:
                  if (!jjCanMove_10(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 54)
                     kind = 54;
                  jjCheckNAdd(131);
                  break;
               case 131:
                  if (!jjCanMove_12(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 54)
                     kind = 54;
                  jjCheckNAdd(131);
                  break;
               case 133:
                  if (jjCanMove_10(hiByte, i1, i2, l1, l2))
                     jjAddStates(23, 24);
                  break;
               case 135:
                  if (jjCanMove_12(hiByte, i1, i2, l1, l2))
                     jjCheckNAddStates(0, 3);
                  break;
               case 137:
                  if (jjCanMove_10(hiByte, i1, i2, l1, l2))
                     jjCheckNAddTwoStates(138, 126);
                  break;
               case 138:
                  if (jjCanMove_12(hiByte, i1, i2, l1, l2))
                     jjCheckNAddTwoStates(138, 126);
                  break;
               case 140:
                  if (jjCanMove_10(hiByte, i1, i2, l1, l2))
                     jjAddStates(25, 26);
                  break;
               case 293:
                  if (!jjCanMove_11(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 49)
                     kind = 49;
                  jjCheckNAddStates(7, 15);
                  break;
               case 294:
                  if (!jjCanMove_11(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 49)
                     kind = 49;
                  jjCheckNAddTwoStates(294, 295);
                  break;
               case 296:
                  if (!jjCanMove_11(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 49)
                     kind = 49;
                  jjstateSet[jjnewStateCnt++] = 296;
                  break;
               case 297:
                  if (jjCanMove_11(hiByte, i1, i2, l1, l2))
                     jjCheckNAddTwoStates(297, 298);
                  break;
               case 299:
                  if (jjCanMove_11(hiByte, i1, i2, l1, l2))
                     jjCheckNAddStates(27, 29);
                  break;
               case 301:
                  if (jjCanMove_11(hiByte, i1, i2, l1, l2))
                     jjCheckNAddTwoStates(301, 118);
                  break;
               case 302:
                  if (jjCanMove_11(hiByte, i1, i2, l1, l2))
                     jjCheckNAddTwoStates(302, 303);
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      if (kind != 0x7fffffff)
      {
         jjmatchedKind = kind;
         jjmatchedPos = curPos;
         kind = 0x7fffffff;
      }
      ++curPos;
      if ((i = jjnewStateCnt) == (startsAt = 304 - (jjnewStateCnt = startsAt)))
         return curPos;
      try { curChar = input_stream.readChar(); }
      catch(java.io.IOException e) { return curPos; }
   }
}
static final int[] jjnextStates = {
   135, 136, 138, 126, 128, 129, 131, 294, 295, 297, 298, 299, 300, 302, 303, 118, 
   128, 129, 131, 135, 136, 138, 126, 133, 134, 140, 141, 299, 300, 118, 137, 139, 
   130, 132, 122, 123, 124, 125, 239, 244, 247, 252, 255, 260, 264, 270, 274, 280, 
   284, 290, 292, 199, 205, 211, 218, 225, 232, 235, 183, 186, 189, 192, 166, 170, 
   174, 177, 180, 156, 159, 162, 145, 149, 153, 110, 114, 101, 106, 91, 93, 96, 
   81, 84, 88, 62, 63, 58, 59, 119, 120, 
};
private static final boolean jjCanMove_0(int hiByte, int i1, int i2, long l1, long l2)
{
   switch(hiByte)
   {
      case 34:
         return ((jjbitVec0[i2] & l2) != 0L);
      default : 
         return false;
   }
}
private static final boolean jjCanMove_1(int hiByte, int i1, int i2, long l1, long l2)
{
   switch(hiByte)
   {
      case 34:
         return ((jjbitVec1[i2] & l2) != 0L);
      default : 
         return false;
   }
}
private static final boolean jjCanMove_2(int hiByte, int i1, int i2, long l1, long l2)
{
   switch(hiByte)
   {
      case 34:
         return ((jjbitVec2[i2] & l2) != 0L);
      default : 
         return false;
   }
}
private static final boolean jjCanMove_3(int hiByte, int i1, int i2, long l1, long l2)
{
   switch(hiByte)
   {
      case 34:
         return ((jjbitVec3[i2] & l2) != 0L);
      default : 
         return false;
   }
}
private static final boolean jjCanMove_4(int hiByte, int i1, int i2, long l1, long l2)
{
   switch(hiByte)
   {
      case 34:
         return ((jjbitVec4[i2] & l2) != 0L);
      default : 
         return false;
   }
}
private static final boolean jjCanMove_5(int hiByte, int i1, int i2, long l1, long l2)
{
   switch(hiByte)
   {
      case 34:
         return ((jjbitVec5[i2] & l2) != 0L);
      default : 
         return false;
   }
}
private static final boolean jjCanMove_6(int hiByte, int i1, int i2, long l1, long l2)
{
   switch(hiByte)
   {
      case 32:
         return ((jjbitVec6[i2] & l2) != 0L);
      case 34:
         return ((jjbitVec7[i2] & l2) != 0L);
      default : 
         return false;
   }
}
private static final boolean jjCanMove_7(int hiByte, int i1, int i2, long l1, long l2)
{
   switch(hiByte)
   {
      case 34:
         return ((jjbitVec8[i2] & l2) != 0L);
      default : 
         return false;
   }
}
private static final boolean jjCanMove_8(int hiByte, int i1, int i2, long l1, long l2)
{
   switch(hiByte)
   {
      case 255:
         return ((jjbitVec9[i2] & l2) != 0L);
      default : 
         return false;
   }
}
private static final boolean jjCanMove_9(int hiByte, int i1, int i2, long l1, long l2)
{
   switch(hiByte)
   {
      case 3:
         return ((jjbitVec10[i2] & l2) != 0L);
      default : 
         return false;
   }
}
private static final boolean jjCanMove_10(int hiByte, int i1, int i2, long l1, long l2)
{
   switch(hiByte)
   {
      case 0:
         return ((jjbitVec13[i2] & l2) != 0L);
      default : 
         if ((jjbitVec11[i1] & l1) != 0L)
            return true;
         return false;
   }
}
private static final boolean jjCanMove_11(int hiByte, int i1, int i2, long l1, long l2)
{
   switch(hiByte)
   {
      case 6:
         return ((jjbitVec16[i2] & l2) != 0L);
      case 11:
         return ((jjbitVec17[i2] & l2) != 0L);
      case 13:
         return ((jjbitVec18[i2] & l2) != 0L);
      case 14:
         return ((jjbitVec19[i2] & l2) != 0L);
      case 16:
         return ((jjbitVec20[i2] & l2) != 0L);
      default : 
         if ((jjbitVec14[i1] & l1) != 0L)
            if ((jjbitVec15[i2] & l2) == 0L)
               return false;
            else
            return true;
         return false;
   }
}
private static final boolean jjCanMove_12(int hiByte, int i1, int i2, long l1, long l2)
{
   switch(hiByte)
   {
      case 0:
         return ((jjbitVec22[i2] & l2) != 0L);
      case 1:
         return ((jjbitVec23[i2] & l2) != 0L);
      case 2:
         return ((jjbitVec24[i2] & l2) != 0L);
      case 3:
         return ((jjbitVec25[i2] & l2) != 0L);
      case 4:
         return ((jjbitVec26[i2] & l2) != 0L);
      case 5:
         return ((jjbitVec27[i2] & l2) != 0L);
      case 31:
         return ((jjbitVec28[i2] & l2) != 0L);
      case 48:
         return ((jjbitVec29[i2] & l2) != 0L);
      case 51:
         return ((jjbitVec30[i2] & l2) != 0L);
      case 215:
         return ((jjbitVec31[i2] & l2) != 0L);
      case 247:
         return ((jjbitVec32[i2] & l2) != 0L);
      case 250:
         return ((jjbitVec33[i2] & l2) != 0L);
      case 251:
         return ((jjbitVec34[i2] & l2) != 0L);
      case 253:
         return ((jjbitVec35[i2] & l2) != 0L);
      case 254:
         return ((jjbitVec36[i2] & l2) != 0L);
      case 255:
         return ((jjbitVec37[i2] & l2) != 0L);
      default : 
         if ((jjbitVec21[i1] & l1) != 0L)
            return true;
         return false;
   }
}

/** Token literal values. */
public static final String[] jjstrLiteralImages = {
"", null, null, null, null, "\73", "\72\75", "\174", "\254", null, null, null, 
null, "\74", "\76", null, null, "\u2225", "\u22a5", "\75", "\53", null, null, 
"\u2297", "\57", "\136", "\41", null, "\u2070", "\271", "\262", "\263", "\u2074", 
"\u2075", "\u2076", "\u2077", "\u2078", "\u2079", null, "\u212f", "\260", "\u221e", 
"\162\141\144", "\47", null, null, "\170", "\171", "\130", null, null, null, null, null, null, 
null, null, null, null, null, null, null, null, null, null, null, null, null, null, 
null, null, null, null, "\154\144\50", "\154\147\50", null, "\143\142\162\164\50", 
null, null, null, null, null, null, "\162\141\156\144\157\155\50\51", null, null, 
null, "\72", "\173", "\175", "\54", "\133", "\135", "\51", "\50", };

/** Lexer state names. */
public static final String[] lexStateNames = {
   "DEFAULT", 
};
static final long[] jjtoToken = {
   0xfe67ffffffffffe1L, 0x7fbfffffL, 
};
static final long[] jjtoSkip = {
   0x1eL, 0x0L, 
};
protected SimpleCharStream input_stream;
private final int[] jjrounds = new int[304];
private final int[] jjstateSet = new int[608];
protected char curChar;
/** Constructor. */
public ParserTokenManager(SimpleCharStream stream){
   if (SimpleCharStream.staticFlag)
      throw new Error("ERROR: Cannot use a static CharStream class with a non-static lexical analyzer.");
   input_stream = stream;
}

/** Constructor. */
public ParserTokenManager(SimpleCharStream stream, int lexState){
   this(stream);
   SwitchTo(lexState);
}

/** Reinitialise parser. */
public void ReInit(SimpleCharStream stream)
{
   jjmatchedPos = jjnewStateCnt = 0;
   curLexState = defaultLexState;
   input_stream = stream;
   ReInitRounds();
}
private void ReInitRounds()
{
   int i;
   jjround = 0x80000001;
   for (i = 304; i-- > 0;)
      jjrounds[i] = 0x80000000;
}

/** Reinitialise parser. */
public void ReInit(SimpleCharStream stream, int lexState)
{
   ReInit(stream);
   SwitchTo(lexState);
}

/** Switch to specified lex state. */
public void SwitchTo(int lexState)
{
   if (lexState >= 1 || lexState < 0)
      throw new TokenMgrError("Error: Ignoring invalid lexical state : " + lexState + ". State unchanged.", TokenMgrError.INVALID_LEXICAL_STATE);
   else
      curLexState = lexState;
}

protected Token jjFillToken()
{
   final Token t;
   final String curTokenImage;
   final int beginLine;
   final int endLine;
   final int beginColumn;
   final int endColumn;
   String im = jjstrLiteralImages[jjmatchedKind];
   curTokenImage = (im == null) ? input_stream.GetImage() : im;
   beginLine = input_stream.getBeginLine();
   beginColumn = input_stream.getBeginColumn();
   endLine = input_stream.getEndLine();
   endColumn = input_stream.getEndColumn();
   t = Token.newToken(jjmatchedKind);
   t.kind = jjmatchedKind;
   t.image = curTokenImage;

   t.beginLine = beginLine;
   t.endLine = endLine;
   t.beginColumn = beginColumn;
   t.endColumn = endColumn;

   return t;
}

int curLexState = 0;
int defaultLexState = 0;
int jjnewStateCnt;
int jjround;
int jjmatchedPos;
int jjmatchedKind;

/** Get the next Token. */
public Token getNextToken() 
{
  Token matchedToken;
  int curPos = 0;

  EOFLoop :
  for (;;)
  {   
   try   
   {     
      curChar = input_stream.BeginToken();
   }     
   catch(java.io.IOException e)
   {        
      jjmatchedKind = 0;
      matchedToken = jjFillToken();
      return matchedToken;
   }

   try { input_stream.backup(0);
      while (curChar <= 32 && (0x100002600L & (1L << curChar)) != 0L)
         curChar = input_stream.BeginToken();
   }
   catch (java.io.IOException e1) { continue EOFLoop; }
   jjmatchedKind = 0x7fffffff;
   jjmatchedPos = 0;
   curPos = jjMoveStringLiteralDfa0_0();
   if (jjmatchedKind != 0x7fffffff)
   {
      if (jjmatchedPos + 1 < curPos)
         input_stream.backup(curPos - jjmatchedPos - 1);
      if ((jjtoToken[jjmatchedKind >> 6] & (1L << (jjmatchedKind & 077))) != 0L)
      {
         matchedToken = jjFillToken();
         return matchedToken;
      }
      else
      {
         continue EOFLoop;
      }
   }
   int error_line = input_stream.getEndLine();
   int error_column = input_stream.getEndColumn();
   String error_after = null;
   boolean EOFSeen = false;
   try { input_stream.readChar(); input_stream.backup(1); }
   catch (java.io.IOException e1) {
      EOFSeen = true;
      error_after = curPos <= 1 ? "" : input_stream.GetImage();
      if (curChar == '\n' || curChar == '\r') {
         error_line++;
         error_column = 0;
      }
      else
         error_column++;
   }
   if (!EOFSeen) {
      input_stream.backup(1);
      error_after = curPos <= 1 ? "" : input_stream.GetImage();
   }
   throw new TokenMgrError(EOFSeen, curLexState, error_line, error_column, error_after, curChar, TokenMgrError.LEXICAL_ERROR);
  }
}

private void jjCheckNAdd(int state)
{
   if (jjrounds[state] != jjround)
   {
      jjstateSet[jjnewStateCnt++] = state;
      jjrounds[state] = jjround;
   }
}
private void jjAddStates(int start, int end)
{
   do {
      jjstateSet[jjnewStateCnt++] = jjnextStates[start];
   } while (start++ != end);
}
private void jjCheckNAddTwoStates(int state1, int state2)
{
   jjCheckNAdd(state1);
   jjCheckNAdd(state2);
}

private void jjCheckNAddStates(int start, int end)
{
   do {
      jjCheckNAdd(jjnextStates[start]);
   } while (start++ != end);
}

}
