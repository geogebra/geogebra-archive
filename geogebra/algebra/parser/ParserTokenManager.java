/* Generated By:JavaCC: Do not edit this line. ParserTokenManager.java */
package geogebra.algebra.parser;
import geogebra.*;
import geogebra.kernel.*;
import geogebra.kernel.arithmetic.*;
import java.util.*;

public class ParserTokenManager implements ParserConstants
{
  public  java.io.PrintStream debugStream = System.out;
  public  void setDebugStream(java.io.PrintStream ds) { debugStream = ds; }
private final int jjStopStringLiteralDfa_0(int pos, long active0, long active1)
{
   switch (pos)
   {
      case 0:
         if ((active0 & 0x40L) != 0L)
            return 0;
         if ((active1 & 0x3L) != 0L)
         {
            jjmatchedKind = 41;
            return 64;
         }
         if ((active0 & 0x800L) != 0L)
            return 6;
         if ((active0 & 0x3001c10000000L) != 0L)
            return 262;
         if ((active0 & 0x100000000L) != 0L)
         {
            jjmatchedKind = 41;
            return 140;
         }
         if ((active0 & 0x200000000L) != 0L)
         {
            jjmatchedKind = 41;
            return 33;
         }
         if ((active0 & 0x40000000L) != 0L)
         {
            jjmatchedKind = 41;
            return 44;
         }
         if ((active0 & 0x1000L) != 0L)
            return 9;
         return -1;
      case 1:
         if ((active0 & 0x340000000L) != 0L || (active1 & 0x3L) != 0L)
         {
            jjmatchedKind = 41;
            jjmatchedPos = 1;
            return 262;
         }
         return -1;
      case 2:
         if ((active0 & 0x300000000L) != 0L)
         {
            jjmatchedKind = 41;
            jjmatchedPos = 2;
            return 262;
         }
         if ((active0 & 0x40000000L) != 0L)
            return 262;
         return -1;
      case 3:
         if ((active0 & 0x100000000L) != 0L)
            return 262;
         if ((active0 & 0x200000000L) != 0L)
         {
            jjmatchedKind = 41;
            jjmatchedPos = 3;
            return 262;
         }
         return -1;
      default :
         return -1;
   }
}
private final int jjStartNfa_0(int pos, long active0, long active1)
{
   return jjMoveNfa_0(jjStopStringLiteralDfa_0(pos, active0, active1), pos + 1);
}
private final int jjStopAtPos(int pos, int kind)
{
   jjmatchedKind = kind;
   jjmatchedPos = pos;
   return pos + 1;
}
private final int jjStartNfaWithStates_0(int pos, int kind, int state)
{
   jjmatchedKind = kind;
   jjmatchedPos = pos;
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) { return pos + 1; }
   return jjMoveNfa_0(state, pos + 1);
}
private final int jjMoveStringLiteralDfa0_0()
{
   switch(curChar)
   {
      case 33:
         return jjStopAtPos(0, 21);
      case 39:
         return jjStopAtPos(0, 31);
      case 40:
         return jjStopAtPos(0, 81);
      case 41:
         return jjStopAtPos(0, 80);
      case 42:
         return jjStopAtPos(0, 18);
      case 43:
         return jjStopAtPos(0, 16);
      case 44:
         return jjStopAtPos(0, 76);
      case 45:
         return jjStopAtPos(0, 17);
      case 47:
         return jjStopAtPos(0, 19);
      case 58:
         return jjStopAtPos(0, 74);
      case 59:
         return jjStopAtPos(0, 5);
      case 60:
         return jjStartNfaWithStates_0(0, 11, 6);
      case 61:
         jjmatchedKind = 15;
         return jjMoveStringLiteralDfa1_0(0x400L, 0x0L);
      case 62:
         return jjStartNfaWithStates_0(0, 12, 9);
      case 88:
         return jjStartNfaWithStates_0(0, 36, 262);
      case 91:
         return jjStopAtPos(0, 75);
      case 93:
         return jjStopAtPos(0, 77);
      case 94:
         return jjStopAtPos(0, 20);
      case 102:
         return jjMoveStringLiteralDfa1_0(0x200000000L, 0x0L);
      case 108:
         return jjMoveStringLiteralDfa1_0(0x0L, 0x3L);
      case 114:
         return jjMoveStringLiteralDfa1_0(0x40000000L, 0x0L);
      case 116:
         return jjMoveStringLiteralDfa1_0(0x100000000L, 0x0L);
      case 120:
         jjmatchedKind = 34;
         return jjMoveStringLiteralDfa1_0(0x1000000000000L, 0x0L);
      case 121:
         jjmatchedKind = 35;
         return jjMoveStringLiteralDfa1_0(0x2000000000000L, 0x0L);
      case 123:
         return jjStopAtPos(0, 78);
      case 124:
         return jjStartNfaWithStates_0(0, 6, 0);
      case 125:
         return jjStopAtPos(0, 79);
      case 172:
         return jjStopAtPos(0, 7);
      case 176:
         return jjStopAtPos(0, 29);
      case 178:
         return jjStopAtPos(0, 22);
      case 179:
         return jjStopAtPos(0, 23);
      case 1077:
         return jjStartNfaWithStates_0(0, 28, 262);
      case 8308:
         return jjStopAtPos(0, 24);
      case 8309:
         return jjStopAtPos(0, 25);
      case 8310:
         return jjStopAtPos(0, 26);
      default :
         return jjMoveNfa_0(1, 0);
   }
}
private final int jjMoveStringLiteralDfa1_0(long active0, long active1)
{
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(0, active0, active1);
      return 1;
   }
   switch(curChar)
   {
      case 40:
         if ((active0 & 0x1000000000000L) != 0L)
            return jjStopAtPos(1, 48);
         else if ((active0 & 0x2000000000000L) != 0L)
            return jjStopAtPos(1, 49);
         break;
      case 61:
         if ((active0 & 0x400L) != 0L)
            return jjStopAtPos(1, 10);
         break;
      case 97:
         return jjMoveStringLiteralDfa2_0(active0, 0x240000000L, active1, 0L);
      case 100:
         return jjMoveStringLiteralDfa2_0(active0, 0L, active1, 0x1L);
      case 103:
         return jjMoveStringLiteralDfa2_0(active0, 0L, active1, 0x2L);
      case 114:
         return jjMoveStringLiteralDfa2_0(active0, 0x100000000L, active1, 0L);
      default :
         break;
   }
   return jjStartNfa_0(0, active0, active1);
}
private final int jjMoveStringLiteralDfa2_0(long old0, long active0, long old1, long active1)
{
   if (((active0 &= old0) | (active1 &= old1)) == 0L)
      return jjStartNfa_0(0, old0, old1); 
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(1, active0, active1);
      return 2;
   }
   switch(curChar)
   {
      case 40:
         if ((active1 & 0x1L) != 0L)
            return jjStopAtPos(2, 64);
         else if ((active1 & 0x2L) != 0L)
            return jjStopAtPos(2, 65);
         break;
      case 100:
         if ((active0 & 0x40000000L) != 0L)
            return jjStartNfaWithStates_0(2, 30, 262);
         break;
      case 108:
         return jjMoveStringLiteralDfa3_0(active0, 0x200000000L, active1, 0L);
      case 117:
         return jjMoveStringLiteralDfa3_0(active0, 0x100000000L, active1, 0L);
      default :
         break;
   }
   return jjStartNfa_0(1, active0, active1);
}
private final int jjMoveStringLiteralDfa3_0(long old0, long active0, long old1, long active1)
{
   if (((active0 &= old0) | (active1 &= old1)) == 0L)
      return jjStartNfa_0(1, old0, old1); 
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(2, active0, 0L);
      return 3;
   }
   switch(curChar)
   {
      case 101:
         if ((active0 & 0x100000000L) != 0L)
            return jjStartNfaWithStates_0(3, 32, 262);
         break;
      case 115:
         return jjMoveStringLiteralDfa4_0(active0, 0x200000000L);
      default :
         break;
   }
   return jjStartNfa_0(2, active0, 0L);
}
private final int jjMoveStringLiteralDfa4_0(long old0, long active0)
{
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(2, old0, 0L);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(3, active0, 0L);
      return 4;
   }
   switch(curChar)
   {
      case 101:
         if ((active0 & 0x200000000L) != 0L)
            return jjStartNfaWithStates_0(4, 33, 262);
         break;
      default :
         break;
   }
   return jjStartNfa_0(3, active0, 0L);
}
private final void jjCheckNAdd(int state)
{
   if (jjrounds[state] != jjround)
   {
      jjstateSet[jjnewStateCnt++] = state;
      jjrounds[state] = jjround;
   }
}
private final void jjAddStates(int start, int end)
{
   do {
      jjstateSet[jjnewStateCnt++] = jjnextStates[start];
   } while (start++ != end);
}
private final void jjCheckNAddTwoStates(int state1, int state2)
{
   jjCheckNAdd(state1);
   jjCheckNAdd(state2);
}
private final void jjCheckNAddStates(int start, int end)
{
   do {
      jjCheckNAdd(jjnextStates[start]);
   } while (start++ != end);
}
private final void jjCheckNAddStates(int start)
{
   jjCheckNAdd(jjnextStates[start]);
   jjCheckNAdd(jjnextStates[start + 1]);
}
static final long[] jjbitVec0 = {
   0x10000000000L, 0x0L, 0x0L, 0x0L
};
static final long[] jjbitVec1 = {
   0x8000000000L, 0x0L, 0x0L, 0x0L
};
static final long[] jjbitVec2 = {
   0x0L, 0x1000000000L, 0x0L, 0x0L
};
static final long[] jjbitVec3 = {
   0x0L, 0x2000000000L, 0x0L, 0x0L
};
static final long[] jjbitVec4 = {
   0x0L, 0x0L, 0x0L, 0x1L
};
static final long[] jjbitVec5 = {
   0xfffffffffffffffeL, 0xffffffffffffffffL, 0xffffffffffffffffL, 0xffffffffffffffffL
};
static final long[] jjbitVec7 = {
   0x0L, 0x0L, 0xffffffffffffffffL, 0xffffffffffffffffL
};
static final long[] jjbitVec8 = {
   0x1600L, 0x0L, 0x0L, 0x0L
};
static final long[] jjbitVec9 = {
   0x0L, 0xffc000000000L, 0x0L, 0xffc000000000L
};
static final long[] jjbitVec10 = {
   0x0L, 0x3ff00000000L, 0x0L, 0x3ff000000000000L
};
static final long[] jjbitVec11 = {
   0x0L, 0xffc000000000L, 0x0L, 0xff8000000000L
};
static final long[] jjbitVec12 = {
   0x0L, 0xffc000000000L, 0x0L, 0x0L
};
static final long[] jjbitVec13 = {
   0x0L, 0x3ff0000L, 0x0L, 0x3ff0000L
};
static final long[] jjbitVec14 = {
   0x0L, 0x3ffL, 0x0L, 0x0L
};
static final long[] jjbitVec15 = {
   0x1ff00000fffffffeL, 0xffffffffffffc000L, 0xffffffffL, 0x600000000000000L
};
static final long[] jjbitVec16 = {
   0x0L, 0x0L, 0x0L, 0xfe7effff3e7effffL
};
static final long[] jjbitVec17 = {
   0x0L, 0xffffffffffffffffL, 0xffffffffffffffffL, 0xffffffffffffffffL
};
static final long[] jjbitVec18 = {
   0xffffffffffffffffL, 0xffffffffffffffffL, 0xffffL, 0x0L
};
static final long[] jjbitVec19 = {
   0xffffffffffffffffL, 0xffffffffffffffffL, 0x0L, 0x0L
};
static final long[] jjbitVec20 = {
   0x3fffffffffffL, 0x0L, 0x0L, 0x0L
};
private final int jjMoveNfa_0(int startState, int curPos)
{
   int[] nextStates;
   int startsAt = 0;
   jjnewStateCnt = 262;
   int i = 1;
   jjstateSet[0] = startState;
   int j, kind = 0x7fffffff;
   for (;;)
   {
      if (++jjround == 0x7fffffff)
         ReInitRounds();
      if (curChar < 64)
      {
         long l = 1L << curChar;
         MatchLoop: do
         {
            switch(jjstateSet[--i])
            {
               case 1:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 37)
                        kind = 37;
                     jjCheckNAddStates(0, 8);
                  }
                  else if (curChar == 46)
                     jjCheckNAddTwoStates(67, 68);
                  else if (curChar == 34)
                     jjCheckNAddTwoStates(17, 18);
                  else if (curChar == 62)
                     jjstateSet[jjnewStateCnt++] = 9;
                  else if (curChar == 60)
                     jjstateSet[jjnewStateCnt++] = 6;
                  else if (curChar == 38)
                     jjstateSet[jjnewStateCnt++] = 3;
                  break;
               case 140:
                  if ((0x3ff008000000000L & l) != 0L)
                     jjCheckNAddStates(9, 11);
                  else if (curChar == 40)
                  {
                     if (kind > 73)
                        kind = 73;
                  }
                  if ((0x3ff008000000000L & l) != 0L)
                  {
                     if (kind > 41)
                        kind = 41;
                     jjCheckNAddTwoStates(73, 74);
                  }
                  break;
               case 262:
                  if ((0x3ff008000000000L & l) != 0L)
                     jjCheckNAddStates(9, 11);
                  else if (curChar == 40)
                  {
                     if (kind > 73)
                        kind = 73;
                  }
                  if ((0x3ff008000000000L & l) != 0L)
                  {
                     if (kind > 41)
                        kind = 41;
                     jjCheckNAddTwoStates(73, 74);
                  }
                  break;
               case 64:
                  if ((0x3ff008000000000L & l) != 0L)
                     jjCheckNAddStates(9, 11);
                  else if (curChar == 40)
                  {
                     if (kind > 73)
                        kind = 73;
                  }
                  if ((0x3ff008000000000L & l) != 0L)
                  {
                     if (kind > 41)
                        kind = 41;
                     jjCheckNAddTwoStates(73, 74);
                  }
                  break;
               case 44:
                  if ((0x3ff008000000000L & l) != 0L)
                     jjCheckNAddStates(9, 11);
                  else if (curChar == 40)
                  {
                     if (kind > 73)
                        kind = 73;
                  }
                  if ((0x3ff008000000000L & l) != 0L)
                  {
                     if (kind > 41)
                        kind = 41;
                     jjCheckNAddTwoStates(73, 74);
                  }
                  break;
               case 33:
                  if ((0x3ff008000000000L & l) != 0L)
                     jjCheckNAddStates(9, 11);
                  else if (curChar == 40)
                  {
                     if (kind > 73)
                        kind = 73;
                  }
                  if ((0x3ff008000000000L & l) != 0L)
                  {
                     if (kind > 41)
                        kind = 41;
                     jjCheckNAddTwoStates(73, 74);
                  }
                  break;
               case 3:
                  if (curChar == 38 && kind > 9)
                     kind = 9;
                  break;
               case 4:
                  if (curChar == 38)
                     jjstateSet[jjnewStateCnt++] = 3;
                  break;
               case 6:
                  if (curChar == 61 && kind > 13)
                     kind = 13;
                  break;
               case 7:
                  if (curChar == 60)
                     jjstateSet[jjnewStateCnt++] = 6;
                  break;
               case 9:
                  if (curChar == 61 && kind > 14)
                     kind = 14;
                  break;
               case 10:
                  if (curChar == 62)
                     jjstateSet[jjnewStateCnt++] = 9;
                  break;
               case 16:
                  if (curChar == 34)
                     jjCheckNAddTwoStates(17, 18);
                  break;
               case 17:
                  if ((0xfffffffbffffffffL & l) != 0L)
                     jjCheckNAddTwoStates(17, 18);
                  break;
               case 18:
                  if (curChar == 34 && kind > 46)
                     kind = 46;
                  break;
               case 19:
                  if (curChar == 40 && kind > 62)
                     kind = 62;
                  break;
               case 26:
                  if (curChar == 40 && kind > 63)
                     kind = 63;
                  break;
               case 29:
                  if (curChar == 40 && kind > 69)
                     kind = 69;
                  break;
               case 40:
                  if (curChar == 40 && kind > 71)
                     kind = 71;
                  break;
               case 51:
                  if (curChar == 40 && kind > 72)
                     kind = 72;
                  break;
               case 66:
                  if (curChar == 46)
                     jjCheckNAddTwoStates(67, 68);
                  break;
               case 67:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 37)
                     kind = 37;
                  jjCheckNAdd(67);
                  break;
               case 68:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(68, 69);
                  break;
               case 70:
                  if (curChar == 45)
                     jjCheckNAdd(71);
                  break;
               case 71:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 38)
                     kind = 38;
                  jjCheckNAdd(71);
                  break;
               case 73:
                  if ((0x3ff008000000000L & l) == 0L)
                     break;
                  if (kind > 41)
                     kind = 41;
                  jjCheckNAddTwoStates(73, 74);
                  break;
               case 75:
                  if ((0xfffffffbffffffffL & l) != 0L && kind > 41)
                     kind = 41;
                  break;
               case 77:
                  jjAddStates(12, 13);
                  break;
               case 79:
                  if ((0x3ff008000000000L & l) != 0L)
                     jjCheckNAddStates(9, 11);
                  break;
               case 81:
                  if ((0xfffffffbffffffffL & l) != 0L)
                     jjCheckNAdd(82);
                  break;
               case 82:
                  if (curChar == 40 && kind > 73)
                     kind = 73;
                  break;
               case 84:
                  jjAddStates(14, 15);
                  break;
               case 87:
                  if (curChar == 40 && kind > 50)
                     kind = 50;
                  break;
               case 90:
                  if (curChar == 40 && kind > 56)
                     kind = 56;
                  break;
               case 94:
                  if (curChar == 40 && kind > 70)
                     kind = 70;
                  break;
               case 108:
                  if (curChar == 40 && kind > 51)
                     kind = 51;
                  break;
               case 111:
                  if (curChar == 40 && kind > 57)
                     kind = 57;
                  break;
               case 115:
                  if (curChar == 40 && kind > 66)
                     kind = 66;
                  break;
               case 119:
                  if (curChar == 40 && kind > 68)
                     kind = 68;
                  break;
               case 138:
                  if (curChar == 40 && kind > 52)
                     kind = 52;
                  break;
               case 141:
                  if (curChar == 40 && kind > 58)
                     kind = 58;
                  break;
               case 152:
                  if (curChar == 40 && kind > 53)
                     kind = 53;
                  break;
               case 158:
                  if (curChar == 40 && kind > 54)
                     kind = 54;
                  break;
               case 164:
                  if (curChar == 40 && kind > 55)
                     kind = 55;
                  break;
               case 170:
                  if (curChar == 40 && kind > 59)
                     kind = 59;
                  break;
               case 177:
                  if (curChar == 40 && kind > 60)
                     kind = 60;
                  break;
               case 184:
                  if (curChar == 40 && kind > 61)
                     kind = 61;
                  break;
               case 191:
                  if (curChar == 40 && kind > 67)
                     kind = 67;
                  break;
               case 251:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 37)
                     kind = 37;
                  jjCheckNAddStates(0, 8);
                  break;
               case 252:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 37)
                     kind = 37;
                  jjCheckNAddTwoStates(252, 253);
                  break;
               case 253:
                  if (curChar == 46)
                     jjCheckNAdd(254);
                  break;
               case 254:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 37)
                     kind = 37;
                  jjCheckNAdd(254);
                  break;
               case 255:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(255, 256);
                  break;
               case 256:
                  if (curChar == 46 && kind > 37)
                     kind = 37;
                  break;
               case 257:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(16, 18);
                  break;
               case 258:
                  if (curChar == 46)
                     jjCheckNAdd(259);
                  break;
               case 259:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(259, 69);
                  break;
               case 260:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(260, 261);
                  break;
               case 261:
                  if (curChar == 46)
                     jjCheckNAdd(69);
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else if (curChar < 128)
      {
         long l = 1L << (curChar & 077);
         MatchLoop: do
         {
            switch(jjstateSet[--i])
            {
               case 1:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                  {
                     if (kind > 41)
                        kind = 41;
                     jjCheckNAddStates(19, 23);
                  }
                  else if (curChar == 124)
                     jjstateSet[jjnewStateCnt++] = 0;
                  if (curChar == 97)
                     jjAddStates(24, 36);
                  else if (curChar == 65)
                     jjAddStates(37, 43);
                  else if (curChar == 84)
                     jjAddStates(44, 45);
                  else if (curChar == 116)
                     jjAddStates(46, 47);
                  else if (curChar == 83)
                     jjAddStates(48, 51);
                  else if (curChar == 115)
                     jjAddStates(52, 56);
                  else if (curChar == 67)
                     jjAddStates(57, 59);
                  else if (curChar == 99)
                     jjAddStates(60, 62);
                  else if (curChar == 108)
                     jjAddStates(63, 64);
                  else if (curChar == 71)
                     jjstateSet[jjnewStateCnt++] = 60;
                  else if (curChar == 103)
                     jjstateSet[jjnewStateCnt++] = 55;
                  else if (curChar == 82)
                     jjstateSet[jjnewStateCnt++] = 49;
                  else if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 44;
                  else if (curChar == 70)
                     jjstateSet[jjnewStateCnt++] = 38;
                  else if (curChar == 102)
                     jjstateSet[jjnewStateCnt++] = 33;
                  else if (curChar == 76)
                     jjstateSet[jjnewStateCnt++] = 27;
                  else if (curChar == 69)
                     jjstateSet[jjnewStateCnt++] = 24;
                  else if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 21;
                  else if (curChar == 80)
                     jjCheckNAdd(12);
                  else if (curChar == 112)
                     jjCheckNAdd(12);
                  break;
               case 140:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     jjCheckNAddStates(9, 11);
                  else if (curChar == 95)
                     jjAddStates(65, 66);
                  if ((0x7fffffe07fffffeL & l) != 0L)
                  {
                     if (kind > 41)
                        kind = 41;
                     jjCheckNAddTwoStates(73, 74);
                  }
                  else if (curChar == 95)
                     jjAddStates(67, 68);
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 143;
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 139;
                  break;
               case 262:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     jjCheckNAddStates(9, 11);
                  else if (curChar == 95)
                     jjAddStates(65, 66);
                  if ((0x7fffffe07fffffeL & l) != 0L)
                  {
                     if (kind > 41)
                        kind = 41;
                     jjCheckNAddTwoStates(73, 74);
                  }
                  else if (curChar == 95)
                     jjAddStates(67, 68);
                  break;
               case 64:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     jjCheckNAddStates(9, 11);
                  else if (curChar == 95)
                     jjAddStates(65, 66);
                  if ((0x7fffffe07fffffeL & l) != 0L)
                  {
                     if (kind > 41)
                        kind = 41;
                     jjCheckNAddTwoStates(73, 74);
                  }
                  else if (curChar == 95)
                     jjAddStates(67, 68);
                  if (curChar == 110)
                     jjCheckNAdd(26);
                  else if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 63;
                  break;
               case 44:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     jjCheckNAddStates(9, 11);
                  else if (curChar == 95)
                     jjAddStates(65, 66);
                  if ((0x7fffffe07fffffeL & l) != 0L)
                  {
                     if (kind > 41)
                        kind = 41;
                     jjCheckNAddTwoStates(73, 74);
                  }
                  else if (curChar == 95)
                     jjAddStates(67, 68);
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 43;
                  break;
               case 33:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     jjCheckNAddStates(9, 11);
                  else if (curChar == 95)
                     jjAddStates(65, 66);
                  if ((0x7fffffe07fffffeL & l) != 0L)
                  {
                     if (kind > 41)
                        kind = 41;
                     jjCheckNAddTwoStates(73, 74);
                  }
                  else if (curChar == 95)
                     jjAddStates(67, 68);
                  if (curChar == 108)
                     jjstateSet[jjnewStateCnt++] = 32;
                  break;
               case 0:
                  if (curChar == 124 && kind > 8)
                     kind = 8;
                  break;
               case 12:
                  if (curChar == 105 && kind > 27)
                     kind = 27;
                  break;
               case 13:
                  if (curChar == 112)
                     jjCheckNAdd(12);
                  break;
               case 14:
                  if (curChar == 80)
                     jjCheckNAdd(12);
                  break;
               case 17:
                  jjAddStates(69, 70);
                  break;
               case 20:
               case 23:
                  if (curChar == 112)
                     jjCheckNAdd(19);
                  break;
               case 21:
                  if (curChar == 120)
                     jjstateSet[jjnewStateCnt++] = 20;
                  break;
               case 22:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 21;
                  break;
               case 24:
                  if (curChar == 120)
                     jjstateSet[jjnewStateCnt++] = 23;
                  break;
               case 25:
                  if (curChar == 69)
                     jjstateSet[jjnewStateCnt++] = 24;
                  break;
               case 27:
                  if (curChar == 110)
                     jjCheckNAdd(26);
                  break;
               case 28:
                  if (curChar == 76)
                     jjstateSet[jjnewStateCnt++] = 27;
                  break;
               case 30:
               case 35:
                  if (curChar == 114)
                     jjCheckNAdd(29);
                  break;
               case 31:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 30;
                  break;
               case 32:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 31;
                  break;
               case 34:
                  if (curChar == 102)
                     jjstateSet[jjnewStateCnt++] = 33;
                  break;
               case 36:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 35;
                  break;
               case 37:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 36;
                  break;
               case 38:
                  if (curChar == 108)
                     jjstateSet[jjnewStateCnt++] = 37;
                  break;
               case 39:
                  if (curChar == 70)
                     jjstateSet[jjnewStateCnt++] = 38;
                  break;
               case 41:
               case 46:
                  if (curChar == 100)
                     jjCheckNAdd(40);
                  break;
               case 42:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 41;
                  break;
               case 43:
                  if (curChar == 117)
                     jjstateSet[jjnewStateCnt++] = 42;
                  break;
               case 45:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 44;
                  break;
               case 47:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 46;
                  break;
               case 48:
                  if (curChar == 117)
                     jjstateSet[jjnewStateCnt++] = 47;
                  break;
               case 49:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 48;
                  break;
               case 50:
                  if (curChar == 82)
                     jjstateSet[jjnewStateCnt++] = 49;
                  break;
               case 52:
               case 57:
                  if (curChar == 97)
                     jjCheckNAdd(51);
                  break;
               case 53:
                  if (curChar == 109)
                     jjstateSet[jjnewStateCnt++] = 52;
                  break;
               case 54:
                  if (curChar == 109)
                     jjstateSet[jjnewStateCnt++] = 53;
                  break;
               case 55:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 54;
                  break;
               case 56:
                  if (curChar == 103)
                     jjstateSet[jjnewStateCnt++] = 55;
                  break;
               case 58:
                  if (curChar == 109)
                     jjstateSet[jjnewStateCnt++] = 57;
                  break;
               case 59:
                  if (curChar == 109)
                     jjstateSet[jjnewStateCnt++] = 58;
                  break;
               case 60:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 59;
                  break;
               case 61:
                  if (curChar == 71)
                     jjstateSet[jjnewStateCnt++] = 60;
                  break;
               case 62:
                  if (curChar == 108)
                     jjAddStates(63, 64);
                  break;
               case 63:
                  if (curChar == 103)
                     jjCheckNAdd(26);
                  break;
               case 65:
                  if (curChar == 110)
                     jjCheckNAdd(26);
                  break;
               case 69:
                  if (curChar == 69)
                     jjAddStates(71, 72);
                  break;
               case 72:
                  if ((0x7fffffe07fffffeL & l) == 0L)
                     break;
                  if (kind > 41)
                     kind = 41;
                  jjCheckNAddStates(19, 23);
                  break;
               case 73:
                  if ((0x7fffffe07fffffeL & l) == 0L)
                     break;
                  if (kind > 41)
                     kind = 41;
                  jjCheckNAddTwoStates(73, 74);
                  break;
               case 74:
                  if (curChar == 95)
                     jjAddStates(67, 68);
                  break;
               case 75:
                  if (kind > 41)
                     kind = 41;
                  break;
               case 76:
                  if (curChar == 123)
                     jjCheckNAdd(77);
                  break;
               case 77:
                  if ((0xdfffffffffffffffL & l) != 0L)
                     jjCheckNAddTwoStates(77, 78);
                  break;
               case 78:
                  if (curChar == 125 && kind > 41)
                     kind = 41;
                  break;
               case 79:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     jjCheckNAddStates(9, 11);
                  break;
               case 80:
                  if (curChar == 95)
                     jjAddStates(65, 66);
                  break;
               case 81:
                  jjCheckNAdd(82);
                  break;
               case 83:
                  if (curChar == 123)
                     jjCheckNAdd(84);
                  break;
               case 84:
                  if ((0xdfffffffffffffffL & l) != 0L)
                     jjCheckNAddTwoStates(84, 85);
                  break;
               case 85:
                  if (curChar == 125)
                     jjCheckNAdd(82);
                  break;
               case 86:
                  if (curChar == 99)
                     jjAddStates(60, 62);
                  break;
               case 88:
               case 99:
                  if (curChar == 115)
                     jjCheckNAdd(87);
                  break;
               case 89:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 88;
                  break;
               case 91:
               case 101:
                  if (curChar == 104)
                     jjCheckNAdd(90);
                  break;
               case 92:
                  if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 91;
                  break;
               case 93:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 92;
                  break;
               case 95:
               case 104:
                  if (curChar == 108)
                     jjCheckNAdd(94);
                  break;
               case 96:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 95;
                  break;
               case 97:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 96;
                  break;
               case 98:
                  if (curChar == 67)
                     jjAddStates(57, 59);
                  break;
               case 100:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 99;
                  break;
               case 102:
                  if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 101;
                  break;
               case 103:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 102;
                  break;
               case 105:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 104;
                  break;
               case 106:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 105;
                  break;
               case 107:
                  if (curChar == 115)
                     jjAddStates(52, 56);
                  break;
               case 109:
               case 126:
                  if (curChar == 110)
                     jjCheckNAdd(108);
                  break;
               case 110:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 109;
                  break;
               case 112:
               case 128:
                  if (curChar == 104)
                     jjCheckNAdd(111);
                  break;
               case 113:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 112;
                  break;
               case 114:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 113;
                  break;
               case 116:
               case 131:
                  if (curChar == 116)
                     jjCheckNAdd(115);
                  break;
               case 117:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 116;
                  break;
               case 118:
                  if (curChar == 113)
                     jjstateSet[jjnewStateCnt++] = 117;
                  break;
               case 120:
               case 122:
               case 134:
                  if (curChar == 110)
                     jjCheckNAdd(119);
                  break;
               case 121:
                  if (curChar == 103)
                     jjstateSet[jjnewStateCnt++] = 120;
                  break;
               case 123:
                  if (curChar == 103)
                     jjstateSet[jjnewStateCnt++] = 122;
                  break;
               case 124:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 123;
                  break;
               case 125:
                  if (curChar == 83)
                     jjAddStates(48, 51);
                  break;
               case 127:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 126;
                  break;
               case 129:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 128;
                  break;
               case 130:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 129;
                  break;
               case 132:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 131;
                  break;
               case 133:
                  if (curChar == 113)
                     jjstateSet[jjnewStateCnt++] = 132;
                  break;
               case 135:
                  if (curChar == 103)
                     jjstateSet[jjnewStateCnt++] = 134;
                  break;
               case 136:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 135;
                  break;
               case 137:
                  if (curChar == 116)
                     jjAddStates(46, 47);
                  break;
               case 139:
               case 146:
                  if (curChar == 110)
                     jjCheckNAdd(138);
                  break;
               case 142:
               case 148:
                  if (curChar == 104)
                     jjCheckNAdd(141);
                  break;
               case 143:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 142;
                  break;
               case 144:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 143;
                  break;
               case 145:
                  if (curChar == 84)
                     jjAddStates(44, 45);
                  break;
               case 147:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 146;
                  break;
               case 149:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 148;
                  break;
               case 150:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 149;
                  break;
               case 151:
                  if (curChar == 65)
                     jjAddStates(37, 43);
                  break;
               case 153:
               case 195:
               case 198:
                  if (curChar == 115)
                     jjCheckNAdd(152);
                  break;
               case 154:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 153;
                  break;
               case 155:
                  if (curChar == 67)
                     jjstateSet[jjnewStateCnt++] = 154;
                  break;
               case 156:
                  if (curChar == 99)
                     jjstateSet[jjnewStateCnt++] = 155;
                  break;
               case 157:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 156;
                  break;
               case 159:
               case 203:
               case 206:
                  if (curChar == 110)
                     jjCheckNAdd(158);
                  break;
               case 160:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 159;
                  break;
               case 161:
                  if (curChar == 83)
                     jjstateSet[jjnewStateCnt++] = 160;
                  break;
               case 162:
                  if (curChar == 99)
                     jjstateSet[jjnewStateCnt++] = 161;
                  break;
               case 163:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 162;
                  break;
               case 165:
               case 211:
               case 214:
                  if (curChar == 110)
                     jjCheckNAdd(164);
                  break;
               case 166:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 165;
                  break;
               case 167:
                  if (curChar == 84)
                     jjstateSet[jjnewStateCnt++] = 166;
                  break;
               case 168:
                  if (curChar == 99)
                     jjstateSet[jjnewStateCnt++] = 167;
                  break;
               case 169:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 168;
                  break;
               case 171:
               case 219:
               case 223:
                  if (curChar == 104)
                     jjCheckNAdd(170);
                  break;
               case 172:
                  if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 171;
                  break;
               case 173:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 172;
                  break;
               case 174:
                  if (curChar == 67)
                     jjstateSet[jjnewStateCnt++] = 173;
                  break;
               case 175:
                  if (curChar == 99)
                     jjstateSet[jjnewStateCnt++] = 174;
                  break;
               case 176:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 175;
                  break;
               case 178:
               case 229:
               case 233:
                  if (curChar == 104)
                     jjCheckNAdd(177);
                  break;
               case 179:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 178;
                  break;
               case 180:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 179;
                  break;
               case 181:
                  if (curChar == 83)
                     jjstateSet[jjnewStateCnt++] = 180;
                  break;
               case 182:
                  if (curChar == 99)
                     jjstateSet[jjnewStateCnt++] = 181;
                  break;
               case 183:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 182;
                  break;
               case 185:
               case 239:
               case 243:
                  if (curChar == 104)
                     jjCheckNAdd(184);
                  break;
               case 186:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 185;
                  break;
               case 187:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 186;
                  break;
               case 188:
                  if (curChar == 84)
                     jjstateSet[jjnewStateCnt++] = 187;
                  break;
               case 189:
                  if (curChar == 99)
                     jjstateSet[jjnewStateCnt++] = 188;
                  break;
               case 190:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 189;
                  break;
               case 192:
               case 249:
                  if (curChar == 115)
                     jjCheckNAdd(191);
                  break;
               case 193:
                  if (curChar == 98)
                     jjstateSet[jjnewStateCnt++] = 192;
                  break;
               case 194:
                  if (curChar == 97)
                     jjAddStates(24, 36);
                  break;
               case 196:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 195;
                  break;
               case 197:
                  if (curChar == 99)
                     jjstateSet[jjnewStateCnt++] = 196;
                  break;
               case 199:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 198;
                  break;
               case 200:
                  if (curChar == 99)
                     jjstateSet[jjnewStateCnt++] = 199;
                  break;
               case 201:
                  if (curChar == 99)
                     jjstateSet[jjnewStateCnt++] = 200;
                  break;
               case 202:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 201;
                  break;
               case 204:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 203;
                  break;
               case 205:
                  if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 204;
                  break;
               case 207:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 206;
                  break;
               case 208:
                  if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 207;
                  break;
               case 209:
                  if (curChar == 99)
                     jjstateSet[jjnewStateCnt++] = 208;
                  break;
               case 210:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 209;
                  break;
               case 212:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 211;
                  break;
               case 213:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 212;
                  break;
               case 215:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 214;
                  break;
               case 216:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 215;
                  break;
               case 217:
                  if (curChar == 99)
                     jjstateSet[jjnewStateCnt++] = 216;
                  break;
               case 218:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 217;
                  break;
               case 220:
                  if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 219;
                  break;
               case 221:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 220;
                  break;
               case 222:
                  if (curChar == 99)
                     jjstateSet[jjnewStateCnt++] = 221;
                  break;
               case 224:
                  if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 223;
                  break;
               case 225:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 224;
                  break;
               case 226:
                  if (curChar == 99)
                     jjstateSet[jjnewStateCnt++] = 225;
                  break;
               case 227:
                  if (curChar == 99)
                     jjstateSet[jjnewStateCnt++] = 226;
                  break;
               case 228:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 227;
                  break;
               case 230:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 229;
                  break;
               case 231:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 230;
                  break;
               case 232:
                  if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 231;
                  break;
               case 234:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 233;
                  break;
               case 235:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 234;
                  break;
               case 236:
                  if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 235;
                  break;
               case 237:
                  if (curChar == 99)
                     jjstateSet[jjnewStateCnt++] = 236;
                  break;
               case 238:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 237;
                  break;
               case 240:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 239;
                  break;
               case 241:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 240;
                  break;
               case 242:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 241;
                  break;
               case 244:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 243;
                  break;
               case 245:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 244;
                  break;
               case 246:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 245;
                  break;
               case 247:
                  if (curChar == 99)
                     jjstateSet[jjnewStateCnt++] = 246;
                  break;
               case 248:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 247;
                  break;
               case 250:
                  if (curChar == 98)
                     jjstateSet[jjnewStateCnt++] = 249;
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else
      {
         int hiByte = (int)(curChar >> 8);
         int i1 = hiByte >> 6;
         long l1 = 1L << (hiByte & 077);
         int i2 = (curChar & 0xff) >> 6;
         long l2 = 1L << (curChar & 077);
         MatchLoop: do
         {
            switch(jjstateSet[--i])
            {
               case 1:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                  {
                     if (kind > 8)
                        kind = 8;
                  }
                  if (jjCanMove_1(hiByte, i1, i2, l1, l2))
                  {
                     if (kind > 9)
                        kind = 9;
                  }
                  if (jjCanMove_2(hiByte, i1, i2, l1, l2))
                  {
                     if (kind > 13)
                        kind = 13;
                  }
                  if (jjCanMove_3(hiByte, i1, i2, l1, l2))
                  {
                     if (kind > 14)
                        kind = 14;
                  }
                  if (jjCanMove_4(hiByte, i1, i2, l1, l2))
                  {
                     if (kind > 27)
                        kind = 27;
                  }
                  if (jjCanMove_7(hiByte, i1, i2, l1, l2))
                  {
                     if (kind > 41)
                        kind = 41;
                     jjCheckNAddStates(19, 23);
                  }
                  if (jjCanMove_6(hiByte, i1, i2, l1, l2))
                  {
                     if (kind > 37)
                        kind = 37;
                     jjCheckNAddStates(0, 8);
                  }
                  break;
               case 140:
                  if (jjCanMove_7(hiByte, i1, i2, l1, l2))
                  {
                     if (kind > 41)
                        kind = 41;
                     jjCheckNAddTwoStates(73, 74);
                  }
                  if (jjCanMove_7(hiByte, i1, i2, l1, l2))
                     jjCheckNAddStates(9, 11);
                  break;
               case 262:
                  if (jjCanMove_7(hiByte, i1, i2, l1, l2))
                  {
                     if (kind > 41)
                        kind = 41;
                     jjCheckNAddTwoStates(73, 74);
                  }
                  if (jjCanMove_7(hiByte, i1, i2, l1, l2))
                     jjCheckNAddStates(9, 11);
                  break;
               case 64:
                  if (jjCanMove_7(hiByte, i1, i2, l1, l2))
                  {
                     if (kind > 41)
                        kind = 41;
                     jjCheckNAddTwoStates(73, 74);
                  }
                  if (jjCanMove_7(hiByte, i1, i2, l1, l2))
                     jjCheckNAddStates(9, 11);
                  break;
               case 44:
                  if (jjCanMove_7(hiByte, i1, i2, l1, l2))
                  {
                     if (kind > 41)
                        kind = 41;
                     jjCheckNAddTwoStates(73, 74);
                  }
                  if (jjCanMove_7(hiByte, i1, i2, l1, l2))
                     jjCheckNAddStates(9, 11);
                  break;
               case 33:
                  if (jjCanMove_7(hiByte, i1, i2, l1, l2))
                  {
                     if (kind > 41)
                        kind = 41;
                     jjCheckNAddTwoStates(73, 74);
                  }
                  if (jjCanMove_7(hiByte, i1, i2, l1, l2))
                     jjCheckNAddStates(9, 11);
                  break;
               case 2:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2) && kind > 8)
                     kind = 8;
                  break;
               case 5:
                  if (jjCanMove_1(hiByte, i1, i2, l1, l2) && kind > 9)
                     kind = 9;
                  break;
               case 8:
                  if (jjCanMove_2(hiByte, i1, i2, l1, l2) && kind > 13)
                     kind = 13;
                  break;
               case 11:
                  if (jjCanMove_3(hiByte, i1, i2, l1, l2) && kind > 14)
                     kind = 14;
                  break;
               case 15:
                  if (jjCanMove_4(hiByte, i1, i2, l1, l2) && kind > 27)
                     kind = 27;
                  break;
               case 17:
                  if (jjCanMove_5(hiByte, i1, i2, l1, l2))
                     jjAddStates(69, 70);
                  break;
               case 67:
                  if (!jjCanMove_6(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 37)
                     kind = 37;
                  jjstateSet[jjnewStateCnt++] = 67;
                  break;
               case 68:
                  if (jjCanMove_6(hiByte, i1, i2, l1, l2))
                     jjCheckNAddTwoStates(68, 69);
                  break;
               case 71:
                  if (!jjCanMove_6(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 38)
                     kind = 38;
                  jjstateSet[jjnewStateCnt++] = 71;
                  break;
               case 72:
                  if (!jjCanMove_7(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 41)
                     kind = 41;
                  jjCheckNAddStates(19, 23);
                  break;
               case 73:
                  if (!jjCanMove_7(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 41)
                     kind = 41;
                  jjCheckNAddTwoStates(73, 74);
                  break;
               case 75:
                  if (jjCanMove_5(hiByte, i1, i2, l1, l2) && kind > 41)
                     kind = 41;
                  break;
               case 77:
                  if (jjCanMove_5(hiByte, i1, i2, l1, l2))
                     jjAddStates(12, 13);
                  break;
               case 79:
                  if (jjCanMove_7(hiByte, i1, i2, l1, l2))
                     jjCheckNAddStates(9, 11);
                  break;
               case 81:
                  if (jjCanMove_5(hiByte, i1, i2, l1, l2))
                     jjCheckNAdd(82);
                  break;
               case 84:
                  if (jjCanMove_5(hiByte, i1, i2, l1, l2))
                     jjAddStates(14, 15);
                  break;
               case 251:
                  if (!jjCanMove_6(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 37)
                     kind = 37;
                  jjCheckNAddStates(0, 8);
                  break;
               case 252:
                  if (!jjCanMove_6(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 37)
                     kind = 37;
                  jjCheckNAddTwoStates(252, 253);
                  break;
               case 254:
                  if (!jjCanMove_6(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 37)
                     kind = 37;
                  jjstateSet[jjnewStateCnt++] = 254;
                  break;
               case 255:
                  if (jjCanMove_6(hiByte, i1, i2, l1, l2))
                     jjCheckNAddTwoStates(255, 256);
                  break;
               case 257:
                  if (jjCanMove_6(hiByte, i1, i2, l1, l2))
                     jjCheckNAddStates(16, 18);
                  break;
               case 259:
                  if (jjCanMove_6(hiByte, i1, i2, l1, l2))
                     jjCheckNAddTwoStates(259, 69);
                  break;
               case 260:
                  if (jjCanMove_6(hiByte, i1, i2, l1, l2))
                     jjCheckNAddTwoStates(260, 261);
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      if (kind != 0x7fffffff)
      {
         jjmatchedKind = kind;
         jjmatchedPos = curPos;
         kind = 0x7fffffff;
      }
      ++curPos;
      if ((i = jjnewStateCnt) == (startsAt = 262 - (jjnewStateCnt = startsAt)))
         return curPos;
      try { curChar = input_stream.readChar(); }
      catch(java.io.IOException e) { return curPos; }
   }
}
static final int[] jjnextStates = {
   252, 253, 255, 256, 257, 258, 260, 261, 69, 79, 80, 82, 77, 78, 84, 85, 
   257, 258, 69, 73, 74, 79, 80, 82, 197, 202, 205, 210, 213, 218, 222, 228, 
   232, 238, 242, 248, 250, 157, 163, 169, 176, 183, 190, 193, 147, 150, 140, 144, 
   127, 130, 133, 136, 110, 114, 118, 121, 124, 100, 103, 106, 89, 93, 97, 64, 
   65, 81, 83, 75, 76, 17, 18, 70, 71, 
};
private static final boolean jjCanMove_0(int hiByte, int i1, int i2, long l1, long l2)
{
   switch(hiByte)
   {
      case 34:
         return ((jjbitVec0[i2] & l2) != 0L);
      default : 
         return false;
   }
}
private static final boolean jjCanMove_1(int hiByte, int i1, int i2, long l1, long l2)
{
   switch(hiByte)
   {
      case 34:
         return ((jjbitVec1[i2] & l2) != 0L);
      default : 
         return false;
   }
}
private static final boolean jjCanMove_2(int hiByte, int i1, int i2, long l1, long l2)
{
   switch(hiByte)
   {
      case 34:
         return ((jjbitVec2[i2] & l2) != 0L);
      default : 
         return false;
   }
}
private static final boolean jjCanMove_3(int hiByte, int i1, int i2, long l1, long l2)
{
   switch(hiByte)
   {
      case 34:
         return ((jjbitVec3[i2] & l2) != 0L);
      default : 
         return false;
   }
}
private static final boolean jjCanMove_4(int hiByte, int i1, int i2, long l1, long l2)
{
   switch(hiByte)
   {
      case 3:
         return ((jjbitVec4[i2] & l2) != 0L);
      default : 
         return false;
   }
}
private static final boolean jjCanMove_5(int hiByte, int i1, int i2, long l1, long l2)
{
   switch(hiByte)
   {
      case 0:
         return ((jjbitVec7[i2] & l2) != 0L);
      default : 
         if ((jjbitVec5[i1] & l1) != 0L)
            return true;
         return false;
   }
}
private static final boolean jjCanMove_6(int hiByte, int i1, int i2, long l1, long l2)
{
   switch(hiByte)
   {
      case 6:
         return ((jjbitVec10[i2] & l2) != 0L);
      case 11:
         return ((jjbitVec11[i2] & l2) != 0L);
      case 13:
         return ((jjbitVec12[i2] & l2) != 0L);
      case 14:
         return ((jjbitVec13[i2] & l2) != 0L);
      case 16:
         return ((jjbitVec14[i2] & l2) != 0L);
      default : 
         if ((jjbitVec8[i1] & l1) != 0L)
            if ((jjbitVec9[i2] & l2) == 0L)
               return false;
            else
            return true;
         return false;
   }
}
private static final boolean jjCanMove_7(int hiByte, int i1, int i2, long l1, long l2)
{
   switch(hiByte)
   {
      case 0:
         return ((jjbitVec16[i2] & l2) != 0L);
      case 48:
         return ((jjbitVec17[i2] & l2) != 0L);
      case 49:
         return ((jjbitVec18[i2] & l2) != 0L);
      case 51:
         return ((jjbitVec19[i2] & l2) != 0L);
      case 61:
         return ((jjbitVec20[i2] & l2) != 0L);
      default : 
         if ((jjbitVec15[i1] & l1) != 0L)
            return true;
         return false;
   }
}
public static final String[] jjstrLiteralImages = {
"", null, null, null, null, "\73", "\174", "\254", null, null, "\75\75", 
"\74", "\76", null, null, "\75", "\53", "\55", "\52", "\57", "\136", "\41", "\262", 
"\263", "\u2074", "\u2075", "\u2076", null, "\u0435", "\260", "\162\141\144", "\47", 
"\164\162\165\145", "\146\141\154\163\145", "\170", "\171", "\130", null, null, null, null, null, 
null, null, null, null, null, null, "\170\50", "\171\50", null, null, null, null, 
null, null, null, null, null, null, null, null, null, null, "\154\144\50", 
"\154\147\50", null, null, null, null, null, null, null, null, "\72", "\133", "\54", "\135", 
"\173", "\175", "\51", "\50", };
public static final String[] lexStateNames = {
   "DEFAULT", 
};
static final long[] jjtoToken = {
   0xffff427fffffffe1L, 0x3ffffL, 
};
static final long[] jjtoSkip = {
   0x1eL, 0x0L, 
};
protected SimpleCharStream input_stream;
private final int[] jjrounds = new int[262];
private final int[] jjstateSet = new int[524];
protected char curChar;
public ParserTokenManager(SimpleCharStream stream){
   if (SimpleCharStream.staticFlag)
      throw new Error("ERROR: Cannot use a static CharStream class with a non-static lexical analyzer.");
   input_stream = stream;
}
public ParserTokenManager(SimpleCharStream stream, int lexState){
   this(stream);
   SwitchTo(lexState);
}
public void ReInit(SimpleCharStream stream)
{
   jjmatchedPos = jjnewStateCnt = 0;
   curLexState = defaultLexState;
   input_stream = stream;
   ReInitRounds();
}
private final void ReInitRounds()
{
   int i;
   jjround = 0x80000001;
   for (i = 262; i-- > 0;)
      jjrounds[i] = 0x80000000;
}
public void ReInit(SimpleCharStream stream, int lexState)
{
   ReInit(stream);
   SwitchTo(lexState);
}
public void SwitchTo(int lexState)
{
   if (lexState >= 1 || lexState < 0)
      throw new TokenMgrError("Error: Ignoring invalid lexical state : " + lexState + ". State unchanged.", TokenMgrError.INVALID_LEXICAL_STATE);
   else
      curLexState = lexState;
}

protected Token jjFillToken()
{
   Token t = Token.newToken(jjmatchedKind);
   t.kind = jjmatchedKind;
   String im = jjstrLiteralImages[jjmatchedKind];
   t.image = (im == null) ? input_stream.GetImage() : im;
   t.beginLine = input_stream.getBeginLine();
   t.beginColumn = input_stream.getBeginColumn();
   t.endLine = input_stream.getEndLine();
   t.endColumn = input_stream.getEndColumn();
   return t;
}

int curLexState = 0;
int defaultLexState = 0;
int jjnewStateCnt;
int jjround;
int jjmatchedPos;
int jjmatchedKind;

public Token getNextToken() 
{
  int kind;
  Token specialToken = null;
  Token matchedToken;
  int curPos = 0;

  EOFLoop :
  for (;;)
  {   
   try   
   {     
      curChar = input_stream.BeginToken();
   }     
   catch(java.io.IOException e)
   {        
      jjmatchedKind = 0;
      matchedToken = jjFillToken();
      return matchedToken;
   }

   try { input_stream.backup(0);
      while (curChar <= 32 && (0x100002600L & (1L << curChar)) != 0L)
         curChar = input_stream.BeginToken();
   }
   catch (java.io.IOException e1) { continue EOFLoop; }
   jjmatchedKind = 0x7fffffff;
   jjmatchedPos = 0;
   curPos = jjMoveStringLiteralDfa0_0();
   if (jjmatchedKind != 0x7fffffff)
   {
      if (jjmatchedPos + 1 < curPos)
         input_stream.backup(curPos - jjmatchedPos - 1);
      if ((jjtoToken[jjmatchedKind >> 6] & (1L << (jjmatchedKind & 077))) != 0L)
      {
         matchedToken = jjFillToken();
         return matchedToken;
      }
      else
      {
         continue EOFLoop;
      }
   }
   int error_line = input_stream.getEndLine();
   int error_column = input_stream.getEndColumn();
   String error_after = null;
   boolean EOFSeen = false;
   try { input_stream.readChar(); input_stream.backup(1); }
   catch (java.io.IOException e1) {
      EOFSeen = true;
      error_after = curPos <= 1 ? "" : input_stream.GetImage();
      if (curChar == '\n' || curChar == '\r') {
         error_line++;
         error_column = 0;
      }
      else
         error_column++;
   }
   if (!EOFSeen) {
      input_stream.backup(1);
      error_after = curPos <= 1 ? "" : input_stream.GetImage();
   }
   throw new TokenMgrError(EOFSeen, curLexState, error_line, error_column, error_after, curChar, TokenMgrError.LEXICAL_ERROR);
  }
}

}
