Angle=Angle
#V2.5 changed
AngleSyntax=Angle[ <Object> ]\nAngle[ <Vector>, <Vector> ]\nAngle[ <Line>, <Line> ]\nAngle[ <Point>, <Apex>, <Point> ]\nAngle[ <Point>, <Apex>, <Angle> ]
AngularBisector=AngleBisector
AngularBisectorSyntax=AngleBisector[ <Line>, <Line> ]\nAngleBisector[ <Point>, <Point>, <Point> ]

Area=Area
AreaSyntax=Area[ <Point>, ..., <Point> ]\nArea[ <Conic> ]

Axes=Axes
AxesSyntax=Axes[ <Conic> ]

Center=Center
CenterSyntax=Center[ <Conic> ]

Centroid=Centroid
CentroidSyntax=Centroid[ <Polygon> ]

Circle=Circle
CircleSyntax=Circle[ <Point>, <Radius Number> ]\nCircle[ <Point>, <Segment> ]\nCircle[ <Point>, <Point> ]\nCircle[ <Point>, <Point>, <Point> ]

Command=Command

Conic=Conic
ConicSyntax=Conic[ <Point>, <Point>, <Point>, <Point>, <Point> ]

Delete=Delete
DeleteSyntax=Delete[ <Object> ]

Derivative=Derivative
DerivativeSyntax=Derivative[ <Function> ]\nDerivative[ <Function>, <Number> ]\nDerivative[ <Curve> ]\nDerivative[ <Curve>, <Number> ]

Diameter=ConjugateDiameter
DiameterSyntax=ConjugateDiameter[ <Vector>, <Conic> ]\nConjugateDiameter[ <Line>, <Conic> ]

Direction=Direction
DirectionSyntax=Direction[ <Line> ]

Directrix=Directrix
DirectrixSyntax=Directrix[ <Conic> ]

Distance=Distance
DistanceSyntax=Distance[ <Point>, <Point> ]\nDistance[ <Point>, <Line> ]

Ellipse=Ellipse
EllipseSyntax=Ellipse[ <Focal Point>, <Focal Point>, <Semimajor Axis Length> ]\nEllipse[ <Focal Point>, <Focal Point>, <Segment> ]\nEllipse[ <Point>, <Point>, <Point> ]

Excentricity=LinearEccentricity
ExcentricitySyntax=LinearEccentricity[ <Conic> ]

Extremum=Extremum
ExtremumSyntax=Extremum[ <Polynomial> ]

FirstAxis=MajorAxis
FirstAxisSyntax=MajorAxis[ <Conic> ]

FirstAxisLength=SemiMajorAxisLength
FirstAxisLengthSyntax=SemiMajorAxisLength[ <Conic> ]

Focus=Focus
FocusSyntax=Focus[ <Conic> ]

Function=Function
FunctionSyntax=Function[ <Function>, <Start x-Value>, <End x-Value> ]

Hyperbola=Hyperbola
HyperbolaSyntax=Hyperbola[ <Focal Point>, <Focal Point>, <Semimajor Axis Length> ]\nHyperbola[ <Focal Point>, <Focal Point>, <Segment> ]\nHyperbola[ <Point>, <Point>, <Point> ]

Integral=Integral
#V2.5 changed
IntegralSyntax=Integral[ <Function> ]\nIntegral[ <Function>, <Start x-Value>, <End x-Value> ]\nIntegral[ <Function>, <Function>, <Start x-Value>, <End x-Value> ]

Intersect=Intersect
IntersectSyntax=Intersect[ <Object>, <Object> ]\nIntersect[ <Object>, <Object>, <Number of Intersection Point> ]\nIntersect[ <Object>, <Object>, <Initial Point> ]


Line=Line
LineSyntax=Line[ <Point>, <Point> ]\nLine[ <Point>, <Parallel Line> ]\nLine[ <Point>, <Direction Vector> ]

LineBisector=PerpendicularBisector
LineBisectorSyntax=PerpendicularBisector[ <Point>, <Point> ]\nPerpendicularBisector[ <Segment> ]

LowerSum=LowerSum
LowerSumSyntax=LowerSum[ <Function>, <Start x-Value>, <End x-Value>, <Number of Rectangles> ]

Midpoint=Midpoint
MidpointSyntax=Midpoint[ <Point>, <Point> ]\nMidpoint[ <Segment> ]\nMidpoint[ <Conic> ]

OrthogonalLine=PerpendicularLine
OrthogonalLineSyntax=PerpendicularLine[ <Point>, <Line> ]\nPerpendicularLine[ <Point>, <Segment> ]\nPerpendicularLine[ <Point>, <Vector> ]

OrthogonalVector=PerpendicularVector
OrthogonalVectorSyntax=PerpendicularVector[ <Line> ]\nPerpendicularVector[ <Segment> ]\nPerpendicularVector[ <Vector> ]

Parabola=Parabola
ParabolaSyntax=Parabola[ <Point>, <Line> ]

Parameter=Parameter
ParameterSyntax=Parameter[ <Parabola> ]

Point=Point
PointSyntax=Point[ <Object> ]\nPoint[ <Point>, <Vector> ]

Polar=Polar
PolarSyntax=Polar[ <Point>, <Conic> ]

Radius=Radius
RadiusSyntax=Radius[ <Conic> ]

Ray=Ray
RaySyntax=Ray[ <Start Point>, <Point> ]\nRay[ <Start Point>, <Direction Vector> ]

Relation=Relation
RelationSyntax=Relation[ <Object>, <Object> ]

Root=Root
RootSyntax=Root[ <Polynomial> ]\nRoot[ <Function>, <Initial x-Value> ]\nRoot[ <Function>, <Start x-Value>, <End x-Value>]

Rotate=Rotate
#V2.5 changed
RotateSyntax=Rotate[ <Object>, <Angle> ]\nRotate[ <Object>, <Angle>, <Point> ]

SecondAxis=MinorAxis
SecondAxisSyntax=MinorAxis[ <Conic> ]

SecondAxisLength=SemiMinorAxisLength
SecondAxisLengthSyntax=SemiMinorAxisLength[ <Conic> ]


Segment=Segment
#V2.5 changed
SegmentSyntax=Segment[ <Point>, <Point> ]\nSegment[ <Point>, <Length> ]

Slope=Slope
SlopeSyntax=Slope[ <Line> ]

#Tangent=Tangent
#TangentSyntax=Tangent[ <Point>, <Conic> ]\nTangent[ <Line>, <Conic> ]\nTangent[ <Number>, <Function> ]\nTangent[ <Point>, <Function> ]
#Victor Franco 11-02-2007: add syntax for curve's, Tangent[ <Point>, <Curve> ]

Tangent=Tangent
TangentSyntax=Tangent[ <Point>, <Conic> ]\nTangent[ <Point>, <Function> ]\nTangent[ <Point>, <Curve> ]\nTangent[ <x-Value>, <Function> ]\nTangent[ <Parallel Line>, <Conic> ]\nTangent[ <Parallel Segment>, <Conic> ]

TaylorSeries=TaylorPolynomial
TaylorSeriesSyntax=TaylorPolynomial[ <Function>, <x-Value>, <Order Number> ]

Translate=Translate
#V2.5 changed
TranslateSyntax=Translate[ <Object>, <Vector> ]\nTranslate[ <Vector>, <Start Point> ]

TurningPoint=InflectionPoint
TurningPointSyntax=InflectionPoint[ <Polynomial> ]

UnitOrthogonalVector=UnitPerpendicularVector
UnitOrthogonalVectorSyntax=UnitPerpendicularVector[ <Line> ]\nUnitPerpendicularVector[ <Segment> ]\nUnitPerpendicularVector[ <Vector> ]

UnitVector=UnitVector
UnitVectorSyntax=UnitVector[ <Vector> ]\nUnitVector[ <Line> ]\nUnitVector[ <Segment> ]

UpperSum=UpperSum
UpperSumSyntax=UpperSum[ <Function>, <Start x-Value>, <End x-Value>, <Number of Rectangles> ]

Vector=Vector
VectorSyntax=Vector[ <Point> ]\nVector[ <Start Point>, <End Point> ]

Vertex=Vertex
VertexSyntax=Vertex[ <Conic> ]\nVertex[ <Polygon> ]

#V2.5 begin
CircleArc=CircularArc
CircleArcSyntax=CircularArc[ <Midpoint>, <Point>, <Point> ]

CircleSector=CircularSector
CircleSectorSyntax=CircularSector[ <Midpoint>, <Point>, <Point> ]

CircumcircleArc=CircumcircularArc
CircumcircleArcSyntax=CircumcircularArc[ <Point>, <Point>, <Point> ]

CircumcircleSector=CircumcircularSector
CircumcircleSectorSyntax=CircumcircularSector[ <Point>, <Point>, <Point> ]

Semicircle=Semicircle
SemicircleSyntax=Semicircle[ <Point>, <Point> ]

Arc=Arc
ArcSyntax=Arc[ <Circle>, <Point>, <Point> ]\nArc[ <Ellipse>, <Point>, <Point> ]\nArc[ <Circle>, <Parameter Value>, <Parameter Value> ]\nArc[ <Ellipse>, <Parameter Value>, <Parameter Value> ]

Sector=Sector
SectorSyntax=Sector[ <Conic>, <Point>, <Point> ]\nSector[ <Conic>, <Parameter Value>, <Parameter Value> ]

Polynomial=Polynomial
PolynomialSyntax=Polynomial[ <Function> ]\nPolynomial[ <List of Points> ]

Dilate=Dilate
DilateSyntax=Dilate[ <Object>, <Dilation Factor>, <Dilation Center Point> ]

Locus=Locus
LocusSyntax=Locus[ <Point Creating Locus Line>, <Point> ]
#V2.5 end

#V3.0 begin
If=If
IfSyntax=If[ <Condition>, <Then> ]\nIf[ <Condition>, <Then>, <Else> ]

Sequence=Sequence
SequenceSyntax=Sequence[ <Expression>, <Variable>, <Start Value>, <End Value> ]\nSequence[ <Expression>, <Variable>, <Start Value>, <End Value>, <Increment> ]

CurveCartesian=Curve
CurveCartesianSyntax=Curve[ <Expression>, <Expression>, <Parameter Variable>, <Start Value>, <End Value> ]

#New commands of Victor Franco 18-04-2007
AffineRatio=AffineRatio
AffineRatioSyntax=AffineRatio[ <Point>, <Point>, <Point> ]

CrossRatio=CrossRatio
CrossRatioSyntax=CrossRatio[ <Point>, <Point>, <Point>, <Point> ]

CurvatureVector=CurvatureVector
CurvatureVectorSyntax=CurvatureVector[ <Point>, <Function> ]\nCurvatureVector[ <Point>, <Curve> ]

Curvature=Curvature
CurvatureSyntax=Curvature[ <Point>, <Function> ]\nCurvature[ <Point>, <Curve> ]

OsculatingCircle=OsculatingCircle
OsculatingCircleSyntax=OsculatingCircle[ <Point>, <Function> ]\nOsculatingCircle[ <Point>, <Curve> ]
#End new commands of Victor Franco 18-04-2007

#New commands of Philipp Weissenbacher
Circumference=Circumference
CircumferenceSyntax=Circumference[ <Conic> ]

Perimeter=Perimeter
PerimeterSyntax=Perimeter[ <Polygon> ]\nPerimeter[ <Conic> ]
#End of new commands of Philipp Weissenbacher

Iteration=Iteration
IterationSyntax=Iteration[ <Function>, <Start Value>, <Number of Iterations> ]

IterationList=IterationList 
IterationListSyntax=IterationList[ <Function>, <Start Value>, <Number of Iterations> ]

Min=Min
MinSyntax=Min[ <Number>, <Number> ]\nMin[ <List> ]

Max=Max
MaxSyntax=Max[ <Number>, <Number> ]\nMax[ <List> ]


#V3.0 end

#V3.1 begin
Name=Name
NameSyntax=Name[ <Object> ]

LCM=LCM
LCMSyntax=LCM[ <Number>, <Number> ]\nLCM[ <List of Numbers> ]

GCD=GCD
GCDSyntax=GCD[ <Number>, <Number> ]\nGCD[ <List of Numbers> ]

Sort=Sort
SortSyntax=Sort[ <List> ]


Reverse=Reverse
ReverseSyntax=Reverse[ <List> ]

Defined=IsDefined
DefinedSyntax=IsDefined[ <Object> ]

Mean=Mean
MeanSyntax=Mean[ <List of Numbers> ]

Variance=Variance
VarianceSyntax=Variance[ <List of Numbers> ]

SD=SD
SDSyntax=SD[ <List of Numbers> ]

Median=Median
MedianSyntax=Median[ <List of Numbers> ]

Q1=Q1
Q1Syntax=Q1[ <List of Numbers> ]

Q3=Q3
Q3Syntax=Q3[ <List of Numbers> ]

Mode=Mode
ModeSyntax=Mode[ <List of Numbers> ]

SigmaXY=SigmaXY
SigmaXYSyntax=SigmaXY[ <List of x-Coordinates>, <List of y-Coordinates> ]\nSigmaXY[ <List of Points> ]

SigmaXX=SigmaXX
SigmaXXSyntax=SigmaXX[ <List of Numbers> ]\nSigmaXX[ <List of Points> ]

SigmaYY=SigmaYY
SigmaYYSyntax=SigmaYY[ <List of Numbers> ]\nSigmaYY[ <List of Points> ]

Covariance=Covariance
CovarianceSyntax=Covariance[ <List of Numbers>, <List of Numbers> ]\nCovariance[ <List of Points> ]

SXX=Sxx
SXXSyntax=Sxx[ <List of Numbers> ]\nSxx[ <List of Points> ]

SYY=Syy
SYYSyntax=Syy[ <List of Numbers> ]\nSyy[ <List of Points> ]

SXY=Sxy
SXYSyntax=Sxy[ <List of Numbers>, <List of Numbers> ]\nSxy[ <List of Points> ]

PMCC=CorrelationCoefficient
PMCCSyntax=CorrelationCoefficient[ <List of x-Coordinates>, <List of y-Coordinates> ]\nCorrelationCoefficient[ <List of Points> ]

FitLineY=FitLine
FitLineYSyntax=FitLine[ <List of Points> ]

FitLineX=FitLineX
FitLineXSyntax=FitLineX[ <List of Points> ]

FitPoly=FitPoly
FitPolySyntax=FitPoly[ <List of Points>, <Degree of Polynomial> ]

FitExp=FitExp
FitExpSyntax=FitExp[ <List of Points> ]

FitLog=FitLog
FitLogSyntax=FitLog[ <List of Points> ]

FitPow=FitPow
FitPowSyntax=FitPow[ <List of Points> ]

RandomNormal=RandomNormal
RandomNormalSyntax=RandomNormal[ <Mean>, <Standard Deviation> ]

InverseNormal=InverseNormal
InverseNormalSyntax=InverseNormal[ <Mean>, <Standard Deviation>, <Probability> ]

Normal=Normal
NormalSyntax=Normal[ <Mean>, <Standard Deviation>, <Variable Value> ]

Binomial=BinomialCoefficient
BinomialSyntax=BinomialCoefficient[ <Number>, <Number> ]

Expand=Expand
ExpandSyntax=Expand[ <Function> ]

Factor=Factor
FactorSyntax=Factor[ <Polynomial> ]

MeanX=MeanX
MeanXSyntax=MeanX[ <List of Points> ]

MeanY=MeanY
MeanYSyntax=MeanY[ <List of Points> ]

Corner=Corner
CornerSyntax=Corner[ <Image>, <Number of Corner> ]\nCorner[ <Text>, <Number of Corner> ]\nCorner[ <Number of Corner> ]

ConstructionStep=ConstructionStep
ConstructionStepSyntax=ConstructionStep[]\nConstructionStep[ <Object> ]

Product=Product
ProductSyntax=Product[ <List of Numbers> ]

Sum=Sum
SumSyntax=Sum[ <List> ]\nSum[ <List> , <Number of Elements> ]
SumSyntaxCAS=Sum[ <expression>, <variable>, <start value>, <end value> ]

Row=Row
RowSyntax=Row[ <Spreadsheet Cell> ]

Column=Column
ColumnSyntax=Column[ <Spreadsheet Cell> ]

BarChart=BarChart
BarChartSyntax=BarChart[ <List of Data>, <List of Frequencies> ]\nBarChart[ <List of Data>, <List of Frequencies>, <Width of Bars> ]\nBarChart[ <List of Raw Data>, <Width of Bars> ]\nBarChart[ <Start Value>, <End Value>, <List of Heights> ]\nBarChart[ <Start Value>, <End Value>, <Expression>, <Variable>, <From Number>, <To Number> ]\nBarChart[ <Start Value>, <End Value>, <Expression>, <Variable>, <From Number>, <To Number>, <Step Width> ]

BoxPlot=BoxPlot
BoxPlotSyntax=BoxPlot[ <yOffset>, <yScale>, <List of Raw Data> ]\nBoxPlot[ <yOffset>, <yScale>, <Start Value>, <Q1>, <Median>, <Q3>, <End Value> ]

Histogram=Histogram
HistogramSyntax=Histogram[ <List of Class Boundaries>, <List of Heights> ]\nHistogram[ <List of Class Boundaries>, <List of Raw Data> ]

DotPlot=DotPlot
DotPlotSyntax=DotPlot[ <List of Raw Data> ]


TrapezoidalSum=TrapezoidalSum
TrapezoidalSumSyntax=TrapezoidalSum[ <Function>, <Start x-Value>, <End x-Value>, <Number of Trapezoids> ]

CountIf=CountIf
CountIfSyntax=CountIf[ <Condition>, <List> ]

Object=Object
ObjectSyntax=Object[ <Name of Object as Text> ]

ColumnName=ColumnName
ColumnNameSyntax=ColumnName[ <Spreadsheet Cell> ]

Append=Append
AppendSyntax=Append[ <List>, <Object> ]\nAppend[ <Object>, <List> ]

Union=Union
UnionSyntax=Union[ <List>, <List> ]

Insert=Insert
InsertSyntax=Insert[ <List>, <List>, <Position> ]\nInsert[ <Object>, <List>, <Position> ]

Intersection=Intersection
IntersectionSyntax=Intersection[ <List>, <List> ]

IsInteger=IsInteger
IsIntegerSyntax=IsInteger[ <Number> ]

Random=RandomBetween
RandomSyntax=RandomBetween[ <Minimum Integer>, <Maximum Integer> ]

RandomBinomial=RandomBinomial
RandomBinomialSyntax=RandomBinomial[ <Number of Trials>, <Probability> ]

RandomPoisson=RandomPoisson
RandomPoissonSyntax=RandomPoisson[ <Mean> ]

CellRange=CellRange
CellRangeSyntax=CellRange[ <Start Cell>, <End Cell> ]
KeepIf=KeepIf
KeepIfSyntax=KeepIf[ <Condition>, <List> ]

Invert=Invert
InvertSyntax=Invert[ <Matrix> ]

Transpose=Transpose
TransposeSyntax=Transpose[ <Matrix> ]

Determinant=Determinant
DeterminantSyntax=Determinant[ <Matrix> ]

AxisStepX=AxisStepX
AxisStepXSyntax=AxisStepX[]

AxisStepY=AxisStepY
AxisStepYSyntax=AxisStepY[]
FractionText=FractionText
FractionTextSyntax=FractionText[ <Number> ]
TableText=TableText
TableTextSyntax=TableText[ <List>, <List>, ... ]\nTableText[ <List>, <List>, ..., <Alignment of Text> ]
RemoveUndefined=RemoveUndefined
RemoveUndefinedSyntax=RemoveUndefined[ <List> ]
LaTeX=FormulaText
LaTeXSyntax=FormulaText[ <Object> ]\nFormulaText[ <Object>, <Boolean for Substitution of Variables> ]
TextToUnicode=TextToUnicode
TextToUnicodeSyntax=TextToUnicode[ <"Text"> ]
LetterToUnicode=LetterToUnicode
LetterToUnicodeSyntax=LetterToUnicode[ <"Letter"> ]
UnicodeToLetter=UnicodeToLetter
UnicodeToLetterSyntax=UnicodeToLetter[ <Integer> ]
UnicodeToText=UnicodeToText
UnicodeToTextSyntax=UnicodeToText[ <List of Integers> ]
Join=Join
JoinSyntax=Join[ <List>, <List>, ... ]\nJoin[ <List of Lists> ]


FitSin=FitSin
FitSinSyntax=FitSin[ <List of Points> ]

FitLogistic=FitLogistic
FitLogisticSyntax=FitLogistic[ <List of Points> ]

#V3.1 end


EvalYacas=EvalMathPiper
EvalYacasSyntax=EvalMathPiper[ <String> ]
ToYacasString=ToMathPiperString
ToYacasStringSyntax=ToMathPiperString[ <Object> ]

#v3.4 start
# new keys below
DynamicCoordinates=DynamicCoordinates
DynamicCoordinatesSyntax=DynamicCoordinates[ <Point>, <Number>, <Number> ]
TDistribution=TDistribution
TDistributionSyntax=TDistribution[ <Degrees of Freedom>, <Variable Value> ]
InverseTDistribution=InverseTDistribution
InverseTDistributionSyntax=InverseTDistribution[ <Degrees of Freedom>, <Probability> ]
FDistribution=FDistribution
FDistributionSyntax=FDistribution[ <Numerator Degrees of Freedom>, <Denominator Degrees of Freedom>, <Variable Value> ]
InverseFDistribution=InverseFDistribution
InverseFDistributionSyntax=InverseFDistribution[ <Numerator Degrees of Freedom>, <Denominator Degrees of Freedom>, <Probability> ]
Gamma=Gamma
GammaSyntax=Gamma[ <Alpha>, <Beta>, <Variable Value> ]
InverseGamma=InverseGamma
InverseGammaSyntax=InverseGamma[ <Alpha>, <Beta>, <Probability> ]
Cauchy=Cauchy
CauchySyntax=Cauchy[ <Median>, <Scale>, <Variable Value> ]
InverseCauchy=InverseCauchy
InverseCauchySyntax=InverseCauchy[ <Median>, <Scale>, <Probability> ]
ChiSquared=ChiSquared
ChiSquaredSyntax=ChiSquared[ <Degrees of Freedom>, <Variable Value> ]
InverseChiSquared=InverseChiSquared
InverseChiSquaredSyntax=InverseChiSquared[ <Degrees of Freedom>, <Probability> ]
Exponential=Exponential
ExponentialSyntax=Exponential[ <Mean>, <Variable Value>]
InverseExponential=InverseExponential
InverseExponentialSyntax=InverseExponential[ <Mean>, <Probability> ]
HyperGeometric=HyperGeometric
HyperGeometricSyntax=HyperGeometric[ <Population Size>, <Number of Successes>, <Sample Size>, <Variable Value> ]
InverseHyperGeometric=InverseHyperGeometric
InverseHyperGeometricSyntax=InverseHyperGeometric[ <Population Size>, <Number of Successes>, <Sample Size>, <Probability> ]
Pascal=Pascal
PascalSyntax=Pascal[ <Number of Successes>, <Probability of Success>, <Variable Value> ]
InversePascal=InversePascal
InversePascalSyntax=InversePascal[ <Number of Successes>, <Probability of Success>, <Probability> ]
Weibull=Weibull
WeibullSyntax=Weibull[ <Shape>, <Scale>, <Variable Value> ]
InverseWeibull=InverseWeibull
InverseWeibullSyntax=InverseWeibull[ <Shape>, <Scale>, <Probability> ]
Zipf=Zipf
ZipfSyntax=Zipf[ <Number of Elements>, <Exponent>, <Variable Value> ]
InverseZipf=InverseZipf
InverseZipfSyntax=InverseZipf[ <Number of Elements>, <Exponent>, <Probability> ]
CopyFreeObject=CopyFreeObject
CopyFreeObjectSyntax=CopyFreeObject[ <Object> ]
SetColor=SetColor
SetColorSyntax=SetColor[ <Object>, "color" ]\nSetColor[ <Object>, <Red>, <Green>, <Blue> ]
SetDynamicColor=SetDynamicColor
SetDynamicColorSyntax=SetDynamicColor[ <Object>, <Red>, <Green>, <Blue> ]
SetConditionToShowObject=SetConditionToShowObject
SetConditionToShowObjectSyntax=SetConditionToShowObject[ <Object>, <Condition> ]
SetCoords=SetCoords
SetCoordsSyntax=SetCoords[ <Point>, <x>, <y> ]
SetFilling=SetFilling
SetFillingSyntax=SetFilling[ <Object>, <Number> ]
ShowLayer=ShowLayer
ShowLayerSyntax=ShowLayer[ <Number> ]
HideLayer=HideLayer
HideLayerSyntax=HideLayer[ <Number> ]
SetFixed=SetFixed
SetFixedSyntax=SetFixed[ <Object>, <true | false> ]
SetPointSize=SetPointSize
SetPointSizeSyntax=SetPointSize[ <Point>, <Number> ]
SetPointStyle=SetPointStyle
SetPointStyleSyntax=SetPointStyle[ <Point>, <Number> ]
SetLineStyle=SetLineStyle
SetLineStyleSyntax=SetLineStyle[ <Line>, <Number> ]
SetLineThickness=SetLineThickness
SetLineThicknessSyntax=SetLineThickness[ <Line>, <Number> ]
Rename=Rename
RenameSyntax=Rename[ <Object>, <Name> ]
FillRow=FillRow
FillRowSyntax=FillRow[ <Row>, <List> ]
FillColumn=FillColumn
FillColumnSyntax=FillColumn[ <Column>, <List> ]
FillCells=FillCells
FillCellsSyntax=FillCells[ <CellRange>, <Object> ]\nFillCells[ <Cell>, <List> ]\nFillCells[ <Cell>, <Matrix> ]
ZoomIn=ZoomIn
ZoomInSyntax=ZoomIn[ <Scale Factor> ]\nZoomIn[ <Scale Factor>, <Center Point> ]
ZoomOut=ZoomOut
ZoomOutSyntax=ZoomOut[ <Scale Factor> ]\nZoomOut[ <Scale Factor>, <Center Point> ]
Pan=Pan
PanSyntax=Pan[ <x>, <y> ]
SelectObjects=SelectObjects
SelectObjectsSyntax=SelectObjects[ ]\nSelectObjects[ <Object>, <Object>, ... ]
SetLayer=SetLayer
SetLayerSyntax=SetLayer[ <Object>, <Layer> ]
Element=Element
ElementSyntax=Element[ <List>, <Position of Element> ]\nElement[ <Matrix>, <Column>, <Row> ]
Cell=Cell
CellSyntax=Cell[ <Column>, <Row> ]
SetCaption=SetCaption
SetCaptionSyntax=SetCaption[ <Object>, <Text> ]
SetLabelMode=SetLabelMode
SetLabelModeSyntax=SetLabelMode[ <Object>, <Number> ]
SetTooltipMode=SetTooltipMode
SetTooltipModeSyntax=SetTooltipMode[ <Object>, <Number> ]
Mirror=Reflect
MirrorSyntax=Reflect[ <Object>, <Point> ]\nReflect[ <Object>, <Line> ]\nReflect[ <Point>, <Circle> ]\nReflect[ <Circle>, <Circle> ]
Length=Length
LengthSyntax=Length[ <Vector> ]\nLength[ <Point> ]\nLength[<Function>, <Start x-Value>, <End x-Value> ]\nLength[<Function>, <Start Point>, <End Point> ]\nLength[<Curve>, <Start x-Value>, <End x-Value> ]\nLength[<Curve>, <Start Point>, <End Point> ]\nLength[ <List> ]\nLength[ <Text> ]
Text=Text
TextSyntax=Text[ <Object> ]\nText[ <Object>, <Boolean for Substitution of Variables> ]\nText[ <Object>, <Point> ]\nText[ <Object>, <Point>, <Boolean for Substitution of Variables> ]\nText[ <Object>, <Point>, <Boolean for Substitution of Variables>, <Boolean for LaTeX formula> ] 
Eccentricity=Eccentricity
EccentricitySyntax=Eccentricity[ <Conic> ]
Factors=Factors
FactorsSyntax=Factors[ <Polynomial> ]
RandomUniform=RandomUniform
RandomUniformSyntax=RandomUniform[ <Mean>, <Standard Deviation> ]
Mod=Mod
ModSyntax=Mod[ <Dividend Number>, <Divisor Number> ]\nMod[ <Dividend Polynomial>, <Dividend Polynomial> ] 
Div=Div
DivSyntax=Div[ <Dividend Number>, <Divisor Number> ]\nDiv[ <Dividend Polynomial>, <Dividend Polynomial> ] 
Degree=Degree
DegreeSyntax=Degree[ <Polynomial> ]
Coefficients=Coefficients
CoefficientsSyntax=Coefficients[ <Polynomial> ]\nCoefficients[ <Conic> ]
Limit=Limit
LimitSyntax=Limit[ <Function>, <Value> ]
LimitSyntaxCAS=Limit[ <expression>, <variable>, <value or Infinity> ]\nLimit[ <expression>, <variable>, <value or Infinity>, <direction Left or Right> ]

LimitBelow=LimitBelow
LimitBelowSyntax=LimitBelow[ <Function>, <Value> ]
LimitAboveSyntaxCAS=LimitBelow[ <expression>, <variable>, <value> ]

LimitAbove=LimitAbove
LimitAboveSyntax=LimitAbove[ <Function>, <Value> ]
LimitAboveSyntaxCAS=LimitAbove[ <expression>, <variable>, <value> ]

Asymptote=Asymptote
AsymptoteSyntax=Asymptote[ <Conic> ]\nAsymptote[ <Function> ]
PartialFractions=PartialFractions
PartialFractionsSyntax=PartialFractions[ <Function> ]
Numerator=Numerator
NumeratorSyntax=Numerator[ <Function> ]
Denominator=Denominator
DenominatorSyntax=Denominator[ <Function> ]
SumSquaredErrors=SumSquaredErrors
SumSquaredErrorsSyntax=SumSquaredErrors[<List of Points>,<Function>]
RSquare=RSquare
RSquareSyntax=RSquare[<List of Points>,<Function>]
Fit=Fit
FitSyntax=Fit[<List of Points>,<List of Functions>]
FitGrowth=FitGrowth
FitGrowthSyntax=FitGrowth[<List of Points>]
ParseToNumber=ParseToNumber
ParseToNumberSyntax=ParseToNumber[ <Number>, <String> ]
ParseToFunction=ParseToFunction
ParseToFunctionSyntax=ParseToFunction[ <Function>, <String> ]
PointList=PointList
PointListSyntax=PointList[ <List> ]
RootList=RootList
RootListSyntax=RootList[ <List> ]
SampleVariance=SampleVariance
SampleVarianceSyntax=SampleVariance[ <List of Numbers> ]
SD=SD
SDSyntax=SD[ <List of Numbers> ]
rref=ReducedRowEchelonForm
rrefSyntax=ReducedRowEchelonForm[ <Matrix> ]
Rank=Rank
RankSyntax=Rank[ <List> ]
Shuffle=Shuffle
ShuffleSyntax=Shuffle[ <List> ]
RandomElement=RandomElement
RandomElementSyntax=RandomElement[ <List> ]
ApplyMatrix=ApplyMatrix
ApplyMatrixSyntax=ApplyMatrix[ <Matrix>, <Object> ]
Shear=Shear
ShearSyntax=Shear[ <Line>, <Ratio>, <Object>]\nShear[ <Vector>, <Ratio>, <Object>]
Stretch=Stretch
StretchSyntax=Shear[ <Line>, <Ratio>, <Object>]\nShear[ <Vector>, <Ratio>, <Object>]
ComplexRoot=ComplexRoot
ComplexRootSyntax=ComplexRoot[ <Polynomial> ]
Simplify=Simplify
SimplifySyntax=Simplify[ <Function> ]\nSimplify[ <Text> ]
Polygon=Polygon
PolygonSyntax=Polygon[ <Point>, ..., <Point> ]\nPolygon[ <Point>, <Point>, <Number of Vertices> ]\nPolygon[<List of Points>]
RigidPolygon=RigidPolygon
RigidPolygonSyntax=RigidPolygon[ <Free Point>, ..., <Free Point> ]
SolveODE=SolveODE
SolveODESyntax=SolveODE[ <f'(x,y)>, <Start x>, <Start y>, <End x>, <Step> ]\nSolveODE[ <y'>, <x'>, <Start x>, <Start y>, <End t>, <Step> ]\nSolveODE[ <b(x)>, <c(x)>, <f(x)>, <Start x>, <Start y>, <Start y'>, <End x>, <Step> ]
PolyLine=PolyLine
PolyLineSyntax=PolyLine[ <Point>, ..., <Point> ]\nPolyLine[<List of Points>]
First=First
FirstSyntax=First[ <List> ]\nFirst[ <List> , <Number of Elements> ]\nFirst[ <Text> ]\nFirst[ <Text> , <Number of Elements> ]
Last=Last
LastSyntax=Last[ <List> ]\nLast[ <List> , <Number of Elements> ]\nLast[ <Text> ]\nLast[ <Text> , <Number of Elements> ]
Take=Take
TakeSyntax=Take[ <List> , <Start Position>, <End Position> ]\nTake[ <Text> , <Start Position>, <End Position> ]
VerticalText=VerticalText
VerticalTextSyntax=VerticalText[ <Text> ]
RotateText=RotateText
RotateTextSyntax=RotateText[ <Text>, <Angle> ]
Sample=Sample
SampleSyntax=Sample[ <List>, <Size> ]\nSample[ <List>, <Size>, <With Replacement> ]
SlowPlot=SlowPlot
SlowPlotSyntax=SlowPlot[ <Function> ]
UpdateConstruction=UpdateConstruction
UpdateConstructionSyntax=UpdateConstruction[]
SetValue=SetValue
SetValueSyntax=SetValue[ <Boolean>, <0|1> ]\nSetValue[ <List>, <Element>]\nSetValue[ <Object>, <Object> ]\nSetValue[ <List>, <Number>, <Object> ]
ToolImage=ToolImage
ToolImageSyntax=ToolImage[ <Number> ]
Voronoi=Voronoi
VoronoiSyntax=Voronoi[ <List of Points> ]
Hull=Hull
HullSyntax=Hull[ <List of Points> , <Percentage> ]
ConvexHull=ConvexHull
ConvexHullSyntax=ConvexHull[ <List of Points> ]
SelectedElement=SelectedElement
SelectedElementSyntax=SelectedElement[ <List> ]
SelectedIndex=SelectedIndex
SelectedIndexSyntax=SelectedIndex[ <List> ]
StemPlot=StemPlot
StemPlotSyntax=StemPlot[ <List> ]
#V3.4 end



# ggb3D start

PointIn=PointIn
PointInSyntax=PointIn[ <Region> ]
Plane=Plane
PlaneSyntax=Plane[ <Point3D>, <Point3D>, <Point3D> ]\nPlane[ <Point3D>, <Plane> ]
OrthogonalPlane=PerpendicularPlane
OrthogonalPlaneSyntax=PerpendicularPlane[ <Point3D>, <Line3D> ]
#\nPerpendicularPlane[ <Point>, <Segment> ]\nPerpendicularPlane[ <Point>, <Vector> ]

Polyhedron=Polyhedron
PolyhedronSyntax=Polyhedron[ <Point3D>, <Point3D>, ...]
Pyramid=Pyramid
PyramidSyntax=Pyramid[ <Point3D>, <Point3D>, ...]
Prism=Prism
PrismSyntax=Prism[ <Point3D>, <Point3D>, ...]
Sphere=Sphere
SphereSyntax=Sphere[ <Point3D>, <Radius Number>]
Cone=Cone
ConeSyntax=Cone[ <Point3D>, <Vector3D>, <Radius Number>]
Cylinder=Cylinder
CylinderSyntax=Cylinder[ <Point3D>, <Vector3D>, <Radius Number>]

CurveCartesianSyntax3D=Curve[ <Expression>, <Expression>, <Parameter Variable>, <Start Value>, <End Value> ]\nCurve[ <Expression>, <Expression>, <Expression>, <Parameter Variable>, <Start Value>, <End Value> ]

#GeoGebraCAS
KeepInput=KeepInput
KeepInputSyntaxCAS=KeepInput[ <Expression> ]
Evaluate=Evaluate
EvaluateSyntaxCAS=Evaluate[ <Expression> ]
LeftSide=LeftSide
LeftSideSyntaxCAS=LeftSide[ <Equation> ]\nLeftSide[ { <Equation> } ]
Numeric=Numeric
NumericSyntaxCAS=Numeric[ <Expression> ]\nNumeric[ <Expression>, <significant figures> ]
RightSide=RightSide
RightSideSyntaxCAS=RightSide[ <Equation> ]\nRightSide[ { <Equation> } ]
Solutions=Solutions
SolutionsSyntaxCAS=Solutions[ <Equation> ]\nSolutions[ <Equation>, <Variable> ]
Solutions2=Solutions2
Solutions2SyntaxCAS=Solutions2[ <Equation>, <Equation> ]\nSolutions2[ <Equation>, <Equation>, <Variable>, <Variable> ]
Solve=Solve
SolveSyntaxCAS=Solve[ <Equation in x> ]\nSolve[ <Equation>, <Variable> ]
Solve2=Solve2
Solve2SyntaxCAS=Solve2[ <Equation>, <Equation> ]\nSolve2[ <Equation>, <Equation>, <Variable>, <Variable> ]
Substitute=Substitute
SubstituteSyntaxCAS=Substitute[ <expression>, <from>, <to> ]

