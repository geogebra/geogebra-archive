
ANOVA=ANOVA
ANOVASyntax=ANOVA[ <Liste>, <Liste>, ...]
AffineRatio=AfinOran\u0131
AffineRatioSyntax=AfinOran\u0131[<Nokta>, <Nokta>, <Nokta> ]
Angle=Aç\u0131
# V2.5 changed
AngleSyntax=Aç\u0131[ <Say\u0131> ]\n\
		Aç\u0131[ <Vektör> ]\n\
		Aç\u0131[ <Nokta> ]\n\
		Aç\u0131[ <Vektör>, <Vektör> ]\n\
		Aç\u0131[ <Do\u011fru>, <Do\u011fru> ]\n\
		Aç\u0131[ <Nokta>, <Nokta>, <Nokta> ]\n\
		Aç\u0131[ <Nokta>, <Nokta>, <Aç\u0131> ]\n\
		Aç\u0131[ <Konik> ]\n\
		Aç\u0131[ <Çokgen> ]
AngularBisector=Aç\u0131Ortay
AngularBisectorSyntax=Aç\u0131Ortay[ <Do\u011fru>, <Do\u011fru> ]\n\
		Aç\u0131Ortay[ <Nokta>, <Nokta>, <Nokta> ]
Append=SonunaEkle
AppendSyntax=SonunaEkle[<Liste>, <Nesne> ]\n\
		SonunaEkle[<Nesne>, <Liste> ]
ApplyMatrix=MatrisUygula
ApplyMatrixSyntax=MatrisUygula[<Matris>, <Nesne> ]
Arc=Yay
ArcSyntax=Yay[ <Konik>, <Nokta>, <Nokta> ]\n\
		Yay[ <Konik>, <Say\u0131>, <Say\u0131> ]
Area=Alan
AreaSyntax=Alan[ <Nokta>, ..., <Nokta> ]\n\
		Alan[ <Konik> ]


Asymptote=Asimtot
AsymptoteSyntax=Asimtot[ <Konik> ]
Axes=Eksenler
AxesSyntax=Eksenler[ <Konik> ]
AxisStepX=XEkseniAd\u0131m\u0131
AxisStepXSyntax=XEkseniAd\u0131m\u0131[]
AxisStepY=YEkseniAd\u0131m\u0131
AxisStepYSyntax=YEkseniAd\u0131m\u0131[]
BarChart=SütunGrafi\u011fi
BarChartSyntax=SütunGrafi\u011fi[<Veri Listesi>, <S\u0131kl\u0131k Listesi> ]\n\
		SütunGrafi\u011fi[<Veri Listesi>, <S\u0131kl\u0131k Listesi>, <Sütun Geni\u015fli\u011fi> ]\n\
		SütunGrafi\u011fi[<Ham Veri Listesi>, <Sütun Geni\u015fli\u011fi> ]\n\
		SütunGrafi\u011fi[<Ba\u015flang\u0131ç De\u011feri>, <Biti\u015f De\u011feri>, <Yükseklikler Listesi> ]\n\
		SütunGrafi\u011fi[<Ba\u015flang\u0131ç De\u011feri>, <Biti\u015f De\u011feri>, <\u0130fade>, <De\u011fi\u015fken>, <Say\u0131dan>, <Say\u0131ya> ]\n\
		SütunGrafi\u011fi[<Ba\u015flang\u0131ç De\u011feri>, <Biti\u015f De\u011feri>, <\u0130fade>, <De\u011fi\u015fken>, <Say\u0131dan>, <Say\u0131ya>, <Aral\u0131k Geni\u015fli\u011fi> ]
Bernoulli=Bernolli
BernoulliSyntax=Bernolli[ <\u0130htimal>, <Mant\u0131ksal Y\u0131\u011f\u0131lma> ]
Binomial=BinomKatsay\u0131s\u0131
BinomialDist=Binom
BinomialDistSyntax=Binom[ <Deneme Say\u0131s\u0131>, <Ba\u015far\u0131 \u0130htimali> ]\n\
		Binom[ <Deneme Say\u0131s\u0131>, <Ba\u015far\u0131 \u0130htimali>,  <Mant\u0131ksal Y\u0131\u011f\u0131lma> ]\n\
		Binom[ <Deneme Say\u0131s\u0131>, <Ba\u015far\u0131 \u0130htimali>,  <De\u011fi\u015fken De\u011feri>, <Mant\u0131ksal Y\u0131\u011f\u0131lma> ]
BinomialDistSyntaxCAS=Binom[ <Deneme Say\u0131s\u0131>, <Ba\u015far\u0131 \u0130htimali>,  <De\u011fi\u015fken De\u011feri>, <Mant\u0131ksal Y\u0131\u011f\u0131lma> ]
BinomialSyntax=BinomKatsay\u0131s\u0131[<Say\u0131 n>, <Say\u0131 r> ]
BinomialSyntaxCAS=BinomKatsay\u0131s\u0131[<Say\u0131>, <Say\u0131> ]
Bottom=Alt
BoxPlot=KutuÇizim
BoxPlotSyntax=KutuÇizim[<Ba\u015flang\u0131çY>, <ÖlçekY>, <Ham Veri Listesi> ]\n\
		KutuÇizim[<Ba\u015flang\u0131çY>, <ÖlçekY>, <Ba\u015flang\u0131ç De\u011feri>, <Q1>, <Ortanca>, <Q3>, <Biti\u015f De\u011feri> ]
Button=Dü\u011fme
ButtonSyntax=Dü\u011fme[]\n\
		Dü\u011fme[ <Ba\u015fl\u0131k> ]
CFactor=CÇarpan
CFactorSyntaxCAS=CÇarpan[ <\u0130fade> ]\n\
		CÇarpan[ <\u0130fade>, <De\u011fi\u015fken> ]
CSolutions=CÇözümler
CSolutionsSyntaxCAS=CÇözümler[ <Denklem> ]\n\
		CÇözümler[ <Denklem>, <De\u011fi\u015fken> ]
CSolve=CÇözüm
CSolveSyntaxCAS=CÇözüm[ <Denklem> ]\n\
		CÇözüm[ <Denklem>, <De\u011fi\u015fken> ]
Cauchy=Cauchy
CauchySyntax=Cauchy[ <Medyan>, <Ölçek>, x ]\n\
		Cauchy[ <Medyan>, <Ölçek>, x, <Mant\u0131ksal Y\u0131\u011f\u0131lma> ]\n\
		Cauchy[ <Medyan>, <Ölçek>, <De\u011fi\u015fken De\u011feri> ]
CauchySyntaxCAS=Cauchy[ <Medyan>, <Ölçek>, <De\u011fi\u015fken De\u011feri> ]
Cell=Hücre
CellRange=HücreAral\u0131\u011f\u0131
CellRangeSyntax=HücreAral\u0131\u011f\u0131[<Ba\u015flang\u0131ç Hücresi>, <Biti\u015f Hücresi> ]
CellSyntax=Hücre[ <Sütun>, <Sat\u0131r> ]
Center=Merkez
CenterSyntax=Merkez[ <Konik> ]
Centroid=A\u011f\u0131rl\u0131kMerkezi
CentroidSyntax=A\u011f\u0131rl\u0131kMerkezi[ <Çokgen> ]
Checkbox=\u0130\u015faretKutusu
CheckboxSyntax=\u0130\u015faretKutusu[]\n\
		\u0130\u015faretKutusu[ <Ba\u015fl\u0131k> ]\n\
		\u0130\u015faretKutusu[ <Liste> ]\n\
		\u0130\u015faretKutusu[ <Ba\u015fl\u0131k>, <Liste> ]
ChiSquared=KiKare
ChiSquaredSyntax=KiKare[ <Serbestlik Derecesi>, x ]\n\
		KiKare[ <Serbestlik Derecesi>, x, <Mant\u0131ksal Y\u0131\u011f\u0131lma> ]\n\
		KiKare[ <Serbestlik Derecesi>, <De\u011fi\u015fken De\u011feri> ]
ChiSquaredSyntaxCAS=KiKare[ <Serbestlik Derecesi>, <De\u011fi\u015fken> ]
Circle=Çember
# V2.5 begin
CircleArc=ÇemberselYay
CircleArcSyntax=ÇemberselYay[ <Nokta>, <Nokta>, <Nokta> ]
CircleSector=DaireselDilim
CircleSectorSyntax=DaireselDilim[ <Nokta>, <Nokta>, <Nokta> ]
CircleSyntax=Çember[ <Nokta>, <Say\u0131> ]\n\
		Çember[ <Nokta>, <Do\u011fru Parças\u0131> ]\n\
		Çember[ <Nokta>, <Nokta> ]\n\
		Çember[ <Nokta>, <Nokta>, <Nokta> ]
CircumcircleArc=\u0130çÇemberselYay
CircumcircleArcSyntax=\u0130çÇemberselYay[ <Nokta>, <Nokta>, <Nokta> ]
CircumcircleSector=\u0130çDaireselDilim
CircumcircleSectorSyntax=\u0130çDaireselDilim[ <Nokta>, <Nokta>, <Nokta> ]
Circumference=Çevre
CircumferenceSyntax=Çevre[<Konik> ]
Classes=Aral\u0131klar
ClassesSyntax=Aral\u0131klar [ <Veri Listesi>, <Ba\u015flang\u0131ç>, <Aral\u0131k Geni\u015fli\u011fi> ]\n\
		Aral\u0131klar [ <Veri Listesi>, <Aral\u0131k Say\u0131s\u0131> ]
ClosestPoint=EnYak\u0131nNokta
ClosestPointSyntax=EnYak\u0131nNokta[ <Yol>, <Nokta> ]
Coefficients=Katsay\u0131lar
CoefficientsSyntax=Katsay\u0131lar [ <Polinom> ]\n\
		Katsay\u0131lar [ <Konik> ]
Column=Sütun
ColumnName=SütunAd\u0131
ColumnNameSyntax=SütunAd\u0131[<Hücre> ]
ColumnSyntax=Sütun[<Hücre> ]
Command=Komut
CommonDenominator=OrtakPayda
CommonDenominatorSyntaxCAS=OrtakPayda[ <\u0130fade>, <\u0130fade> ]
CompetitionRank=Rank
CompetitionRankSyntax=Rank [ <Liste> ]
CompleteSquare=TamKare
CompleteSquareSyntax=TamKare [ <\u0130kinci Derece Fonksiyon> ]





ComplexRootSyntaxCAS=Karma\u015f\u0131kKök [ <Polinom> ]

Cone=Koni
ConeInfinite=SonsuzKoni
Conic=Konik
ConicSyntax=Konik[ <Nokta1>, <Nokta2>, <Nokta3>, <Nokta4>, <Nokta5> ]


ConstructionStep=\u0130n\u015faAd\u0131m\u0131
ConstructionStepSyntax=\u0130n\u015faAd\u0131m\u0131[<Nesne> ]
ConvexHull=D\u0131\u015fbükeyZarf
ConvexHullSyntax=D\u0131\u015fbükeyZarf[<Nokta Listesi> ]
CopyFreeObject=SerbestNesneyiKopyala
CopyFreeObjectSyntax=SerbestNesneyiKopyala[ <Nesne> ]
Corner=Kö\u015fe
CornerSyntax=Kö\u015fe[ <Resim>, <Say\u0131> ]
CountIf=E\u011ferSay
CountIfSyntax=E\u011ferSay[<\u015eart>, <Liste> ]
Covariance=Kovaryans
CovarianceSyntax=Kovaryans[<Say\u0131 Listesi>, <Say\u0131 Listesi> ]
CovarianceSyntaxCAS=Kovaryans[ <Say\u0131 Listesi>, <Say\u0131 Listesi> ]\n\
		Kovaryans[ <Nokta Listesi> ]
Cross=Çapraz
CrossRatio=KartezyenOran
CrossRatioSyntax=KartezyenOran[<Nokta>, <Nokta>, <Nokta>, <Nokta> ]
CrossSyntaxCAS=Çapraz[ <Vektör>, <Vektör> ]
Curvature=E\u011frilik
CurvatureSyntax=E\u011frilik[<Nokta>, <\u0130\u015flev> ]\n\
		E\u011frilik[<Nokta>, <E\u011fri> ]\n\
		
CurvatureVector=E\u011frilikVektörü
CurvatureVectorSyntax=E\u011frilikVektörü[<Nokta>, <\u0130\u015flev> ]\n\
		E\u011frilikVektörü[<Nokta>, <E\u011fri> ]
CurveCartesian=E\u011fri
CurveCartesianSyntax=E\u011fri[<ifade>, <ifade>, <de\u011fi\u015fken>, <ba\u015flang\u0131ç>, <biti\u015f> ]
CurveCartesianSyntax3D=E\u011fri[ <\u0130fade>, <\u0130fade>, <Parametre De\u011fi\u015fkeni>, <Ba\u015flang\u0131ç De\u011feri>, <Biti\u015f De\u011feri> ]\n\
		E\u011fri[ <\u0130fade>, <\u0130fade>, <\u0130fade>, <Parametre De\u011fi\u015fkeni>, <Ba\u015flang\u0131ç De\u011feri>, <Biti\u015f De\u011feri> ]
Cylinder=Silindir
CylinderInfinite=SonsuzSilindir
Decimal=Ondal\u0131k
DecimalSyntaxCAS=Ondal\u0131k[ <\u0130fade> ]
Defined=Tan\u0131ml\u0131m\u0131
DefinedSyntax=Tan\u0131ml\u0131m\u0131[<Nesne> ]
Degree=Derece
DegreeSyntax=Derece [ <Polinom> ]
DelauneyTriangulation=DelaunayÜçgenlemesi
DelauneyTriangulationSyntax=DelaunayÜçgenlemesi[  <Nokta Listesi> ]
Delete=Sil
DeleteSyntax=Sil[ <Nesne> ]
Denominator=Payda
DenominatorSyntax=Payda [ <\u0130\u015flev> ]
DenominatorSyntaxCAS=Payda [ <\u0130\u015flev> ]
Derivative=Türev
DerivativeSyntax=Türev[ <\u0130\u015flev> ]\n\
		Türev[ <\u0130\u015flev>, <Say\u0131> ]\n\
		Türev[ <E\u011fri> ]\n\
		Türev[ <E\u011fri>, <Say\u0131> ]
DerivativeSyntaxCAS=Türev[ <\u0130fade> ]
Determinant=Determinant
DeterminantSyntax=Determinant[<Matris> ]
DeterminantSyntaxCAS=Determinant [ <Matris> ]
Diameter=Çap
DiameterSyntax=Çap[ <Vektör>, <Konik> ]\n\
		Çap[ <Do\u011fru>, <Konik> ]
Dilate=Geni\u015flet
DilateSyntax=Geni\u015flet[ <Nokta>, <Say\u0131>, <Nokta> ]\n\
		Geni\u015flet[ <Do\u011fru>, <Say\u0131>, <Nokta> ]\n\
		Geni\u015flet[ <Konik>, <Say\u0131>, <Nokta> ]\n\
		Geni\u015flet[ <Çokgen>, <Say\u0131>, <Nokta> ]\n\
		Geni\u015flet[ <Resim>, <Say\u0131>, <Nokta> ]
Dimension=Boyut
DimensionSyntaxCAS=Boyut[ <Vektör> ]
Direction=Yön
DirectionSyntax=Yön[ <Do\u011fru> ]
Directrix=Do\u011frultman
DirectrixSyntax=Do\u011frultman[ <Konik> ]
Distance=Uzakl\u0131k
DistanceSyntax=Uzakl\u0131k[ <Nokta>, <Nokta> ]\n\
		Uzakl\u0131k[ <Nokta>, <Do\u011fru> ]\n\
		Uzakl\u0131k[ <Do\u011fru>, <Nokta> ]
Div=Böl
DivSyntax=Böl[<Say\u0131>, <Say\u0131> ]
DivSyntaxCAS=Böl[ <Bölünen Say\u0131>, <Bölen Say\u0131> ]\n\
		Böl[ <Bölünen Polinom>, <Bölen Polinom> ]
Division=Bölüm
DivisionSyntaxCAS=Bölüm[ <Bölünen Say\u0131>, <Bölen Say\u0131> ]\n\
		Bölüm[ <Bölünen Polinom>, <Bölen Polinom> ]
Divisors=Bölenler
DivisorsSyntaxCAS=Bölenler [ <Say\u0131> ]
Dot=Noktasal
DotPlot=NoktaÇiz
DotPlotSyntax=NoktaÇiz[< Ham Veri Listesi> ]
DotSyntaxCAS=Noktasal[ <Vektör>, <Vektör> ]
DynamicCoordinates=DinamikKoordinatlar
DynamicCoordinatesSyntax=DinamikKoordinatlar[ <Nokta>, <Say\u0131>, <Say\u0131> ]
Eccentricity=D\u0131\u015fmerkezlilik
EccentricitySyntax=D\u0131\u015fmerkezlilik [ <Konik> ]
Element=Ö\u011fe
ElementSyntax=Ö\u011fe[ <Liste>, <Ö\u011fenin Pozisyonu> ]\n\
		Ö\u011fe[ <Matris>, <Sat\u0131r>, <Sütun> ]\n\
		Ö\u011fe[ <Liste>, <Index1>, <Index2>, ... ]
ElementSyntaxCAS=Ö\u011fe[ <Liste>, <Ö\u011fenin Pozisyonu> ]\n\
		Ö\u011fe[ <Matris>, <Sat\u0131r>, <Sütun> ]
Ellipse=Elips
EllipseSyntax=Elips[ <Nokta>, <Nokta>, <Say\u0131> ]\n\
		Elips[ <Nokta>, <Nokta>, <Do\u011fru Parças\u0131> ]
Ends=Biti\u015fler
Erlang=Erlang
ErlangSyntax=Erlang[ <\u015eekil>, <Oran>, x ]\n\
		Erlang[ <\u015eekil>, <Oran>, x, <Mant\u0131ksal Y\u0131\u011f\u0131lma> ]\n\
		Erlang[ <\u015eekil>, <Oran>, <De\u011fi\u015fken De\u011feri> ]


Excentricity=D\u0131\u015fmerkezlik
ExcentricitySyntax=D\u0131\u015fmerkezlik[ <Konik> ]
Execute=Çal\u0131\u015ft\u0131r
ExecuteSyntax=Çal\u0131\u015ft\u0131r[ <Metinlerin Listesi> ]\n\
		Çal\u0131\u015ft\u0131r[ <Metinlerin Listesi>, <Parametre>, <Parametre>, ...]
Expand=Geni\u015flet


ExpandSyntax=Geni\u015flet[<\u0130\u015flev> ]
Exponential=Üstel
ExponentialSyntax=Üstel[ <Lamda>, x ]\n\
		Üstel[ <Lamda>, x, <Mant\u0131ksal Y\u0131\u011f\u0131lma> ]\n\
		Üstel[ <Lamda>, <De\u011fi\u015fken De\u011feri> ]
ExponentialSyntaxCAS=Üstel[ <Lamda>, <De\u011fi\u015fken De\u011feri> ]
Extremum=UçNokta
ExtremumSyntax=UçNokta[ <Polinom> ]
FDistribution=FDa\u011f\u0131l\u0131m\u0131
FDistributionSyntax=FDa\u011f\u0131l\u0131m\u0131[ <Pay Serbestlik Derecesi>, <Payda Serbestlik Derecesi>, x ]\n\
		FDa\u011f\u0131l\u0131m\u0131[ <Pay Serbestlik Derecesi>, <Payda Serbestlik Derecesi>, x, <Mant\u0131ksal Y\u0131\u011f\u0131lma> ]\n\
		FDa\u011f\u0131l\u0131m\u0131[  <Pay Serbestlik Derecesi>, <Payda Serbestlik Derecesi>, <De\u011fi\u015fken De\u011feri> ]
FDistributionSyntaxCAS=FDa\u011f\u0131l\u0131m\u0131[  <Pay Serbestlik Derecesi>, <Payda Serbestlik Derecesi>, <De\u011fi\u015fken De\u011feri> ]
Factor=Çarpan
FactorSyntax=Çarpan[<Polinom> ]
FactorSyntaxCAS=Çarpanlar\u0131naAy\u0131r[ <Polinom> ]
Factors=Çarpanlar
FactorsSyntax=Çarpanlar\u0131naAy\u0131r[ <Polinom> ]
FillCells=HücreleriDoldur
FillCellsSyntax=HücreleriDoldur[ <HücreAral\u0131\u011f\u0131>, <Nesne> ]\n\
		HücreleriDoldur[ <Hücre>, <Liste> ]\n\
		HücreleriDoldur[ <Hücre>, <Matris> ]
FillColumn=SütunDoldur
FillColumnSyntax=SütunDoldur[ <Sütun>, <Liste> ]
FillRow=Sat\u0131rDoldur
FillRowSyntax=Sat\u0131rDoldur[ <Sat\u0131r>, <Liste> ]
First=\u0130lk
FirstAxis=\u0130lkEksen
FirstAxisLength=\u0130lkEksenUzunlu\u011fu
FirstAxisLengthSyntax=\u0130lkEksenUzunlu\u011fu[ <Konik> ]
FirstAxisSyntax=\u0130lkEksen[ <Konik> ]
FirstSyntax=\u0130lk[<Liste> ]\n\
		\u0130lk[<Liste>, <Ö\u011fe Say\u0131s\u0131> ]
FirstSyntaxCAS=\u0130lk[ <Liste> ]\n\
		\u0130lk[ <Liste> , <Ö\u011fe Say\u0131s\u0131> ]
Fit=Yakla\u015ft\u0131r
FitExp=ÜstelYakla\u015ft\u0131r
FitExpSyntax=ÜstelYakla\u015ft\u0131r[<Nokta Listesi> ]
FitExpSyntaxCAS=ÜstelYakla\u015ft\u0131r[<Nokta Listesi> ]
FitGrowth=BüyümeYakla\u015ft\u0131r
FitGrowthSyntax=BüyümeYakla\u015ft\u0131r[<Nokta Listesi> ]
FitLineX=Yakla\u015ft\u0131rDo\u011fruX
FitLineXSyntax=Yakla\u015ft\u0131rDo\u011fruX[<Nokta Listesi> ]
FitLineY=Yakla\u015ft\u0131rDo\u011fru
FitLineYSyntax=Yakla\u015ft\u0131rDo\u011fru[<Nokta Listesi> ]
FitLog=Yakla\u015ft\u0131rLog
FitLogSyntax=Yakla\u015ft\u0131rLog[<Nokta Listesi> ]
FitLogSyntaxCAS=Yakla\u015ft\u0131rLog[<Nokta Listesi> ]
FitLogistic=Yakla\u015ft\u0131rLojistik
FitLogisticSyntax=Yakla\u015ft\u0131rLojistik[<Nokta Listesi> ]
FitPoly=Yakla\u015ft\u0131rPolinom
FitPolySyntax=Yakla\u015ft\u0131rPolinom[<Nokta  Listesi>, <Polinom Derecesi> ]
FitPolySyntaxCAS=Yakla\u015ft\u0131rPolinom[<Nokta  Listesi>, <Polinom Derecesi> ]
FitPow=Yakla\u015ft\u0131rÜs
FitPowSyntax=Yakla\u015ft\u0131rÜs[<Nokta Listesi> ]
FitPowSyntaxCAS=Yakla\u015ft\u0131rÜs[<Nokta Listesi> ]
FitSin=Yakla\u015ft\u0131rSin
FitSinSyntax=Yakla\u015ft\u0131rSin[<Nokta Listesi> ]
FitSinSyntaxCAS=Yakla\u015ft\u0131rSin[<Nokta Listesi> ]
FitSyntax=Yakla\u015ft\u0131r[<Nokta Listesi>, <\u0130\u015flev Listesi> ]\n\
		Yakla\u015ft\u0131r[<Nokta Listesi>, <\u0130\u015flev> ]
Focus=Odak
FocusSyntax=Odak[ <Konik> ]
FractionText=KesirMetni
FractionTextSyntax=KesirMetni[<Say\u0131> ]
FractionalPart=KesirliK\u0131s\u0131m
FractionalPartSyntaxCAS=KesirliK\u0131s\u0131m[ <\u0130fade> ]
Frequency=Frekans
FrequencyPolygon=FrekansÇokgeni
FrequencyPolygonSyntax=FrekansÇokgeni[ <Aral\u0131k S\u0131n\u0131rlar\u0131 Listesi>, <Yükseklikler Listesi> ]\n\
		FrekansÇokgeni[ <Aral\u0131k S\u0131n\u0131rlar\u0131 Listesi>, <Ham Veri Listesi>, <Yo\u011funluk Kullan\u0131m -Mant\u0131ksal> , <Yo\u011funluk Ölçek Faktörü> (opsiyonel) ]\n\
		FrekansÇokgeni[ <Mant\u0131ksal Y\u0131\u011f\u0131lma>, <Aral\u0131k S\u0131n\u0131rlar\u0131 Listesi>, <Ham Veri Listesi>, <Yo\u011funluk Kullan\u0131m -Mant\u0131ksal> , <Yo\u011funluk Ölçek Faktörü> (opsiyonell) ]
FrequencySyntax=Frekans[ <Ham Veri Listesi> ]\n\
		Frekans[ <Y\u0131\u011f\u0131lma>, <Ham Veri Listesi> ]\n\
		Frekans[ <Aral\u0131k S\u0131n\u0131rlar\u0131 Listesi>, <Ham Veri Listesi>,  ]\n\
		Frekans[ <Y\u0131\u011f\u0131lma>, <Aral\u0131k S\u0131n\u0131rlar\u0131 Listesi>, <Ham Veri Listesi> ]\n\
		Frekans[ <Aral\u0131k S\u0131n\u0131rlar\u0131 Listesi>, <Ham Veri Listesi>, <Yo\u011funluk Kullan> , <Yo\u011funluk Ölçek Faktörü> (opsiyonel) ]\n\
		Frekans[ <Mant\u0131ksal Y\u0131\u011f\u0131lma>, <Aral\u0131k S\u0131n\u0131rlar\u0131 Listesi>, <Ham Veri Listesi>, <Yo\u011funluk Kullan> , <Yo\u011funluk Ölçek Faktörü> (opsiyonel) ]
FrequencyTable=FrekansTablosu
FrequencyTableSyntax=FrekansTablosu[ <Ham Veri Listesi> ]\n\
		FrekansTablosu[ <Aral\u0131k S\u0131n\u0131rlar\u0131 Listes>, <Yükseklikler Listesi> ]\n\
		FrekansTablosu[ <Aral\u0131k S\u0131n\u0131rlar\u0131 Listes>, <Ham Veri Listesi>, <Yo\u011funluk Kullan- Mant\u0131ksal> , <Yo\u011funluk Ölçek Faktörü> (opsiyonel) ]\n\
		FrekansTablosu[ <Mant\u0131ksal Y\u0131\u011f\u0131lma>, <Aral\u0131k S\u0131n\u0131rlar\u0131 Listes>, <Ham Veri Listesi>, <Yo\u011funluk Kullan- Mant\u0131ksal> , <Yo\u011funluk Ölçek Faktörü> (opsiyonel) ]
Function=\u0130\u015flev
FunctionSyntax=\u0130\u015flev[ <\u0130\u015flev>, <Say\u0131>, <Say\u0131> ]
GCD=EBOB
GCDSyntax=EBOB[<Say\u0131>, <Say\u0131> ]\n\
		EBOB[<Say\u0131 Listesi> ]
Gamma=Gamma
GammaSyntax=Gamma[ <Alfa>, <Beta>, x ]\n\
		Gamma[ <Alfa>, <Beta>, x, <Mant\u0131ksal- Y\u0131\u011f\u0131lma> ]\n\
		Gamma[ <Alfa>, <Beta>, <De\u011fi\u015fken De\u011feri> ]
GammaSyntaxCAS=Gamma[ <Alfa>, <Beta>, <De\u011fi\u015fken De\u011feri> ]
GeometricMean=GeometrikOrta
GeometricMeanSyntax=GeometrikOrta[ <Say\u0131 Listesi> ]
GetTime=ZamanGöster
GetTimeSyntax=ZamanGöster[]
HarmonicMean=HarmonikOrta
HarmonicMeanSyntax=HarmonikOrta[ <Say\u0131 Listesi> ]
HideLayer=KatmanSakla
HideLayerSyntax=KatmanSakla[ <Say\u0131> ]
Histogram=Histogram
HistogramRight=HistogramSa\u011fda
HistogramRightSyntax=HistogramSa\u011fda[ <Aral\u0131k S\u0131n\u0131rlar\u0131 Listesi>, <Yükseklikler Listesi> ]\n\
		HistogramSa\u011fda[ <Aral\u0131k S\u0131n\u0131rlar\u0131 Listesi>, <Ham Veri Listesi>, <Yo\u011funluk Kullan> , <Yo\u011funluk Ölçek Faktörü> (opsiyonel) ]\n\
		HistogramSa\u011fda[ <Mant\u0131ksal- Y\u0131\u011f\u0131lma>, <Aral\u0131k S\u0131n\u0131rlar\u0131 Listesi>, <Ham Veri Listesi>, <Yo\u011funluk Kullan> , <Yo\u011funluk Ölçek Faktörü> (opsiyonel) ]
HistogramSyntax=Histogram[<S\u0131n\u0131f S\u0131n\u0131rlar\u0131 Listesi>, <Yükseklikler Listesi> ]\n\
		Histogram[<S\u0131n\u0131f S\u0131n\u0131rlar\u0131 Listesi>, <Ham Veri Listesi> ]
Hull=Zarf
HullSyntax=Zarf [ <Noktalar Listesi>, < Yüzdesi> ]
HyperGeometric=HiperGeometri
HyperGeometricSyntax=HiperGeometri[ <Nüfus Büyüklü\u011fü>, <Ba\u015far\u0131lar\u0131n Say\u0131s\u0131>, <Örneklem Büyüklü\u011fü> ]\n\
		HiperGeometri[ <Nüfus Büyüklü\u011fü>, <Ba\u015far\u0131lar\u0131n Say\u0131s\u0131>, <Örneklem Büyüklü\u011fü>, <Mant\u0131ksal-Y\u0131\u011f\u0131lma> ]\n\
		HiperGeometri[ <Nüfus Büyüklü\u011fü>, <Ba\u015far\u0131lar\u0131n Say\u0131s\u0131>, <Örneklem Büyüklü\u011fü>, <De\u011fi\u015fken De\u011feri>, <Mant\u0131ksal-Y\u0131\u011f\u0131lma> ]
HyperGeometricSyntaxCAS=HiperGeometri[ <Nüfus Büyüklü\u011fü>, <Ba\u015far\u0131lar\u0131n Say\u0131s\u0131>, <Örneklem Büyüklü\u011fü>, <De\u011fi\u015fken De\u011feri>, <Mant\u0131ksal-Y\u0131\u011f\u0131lma> ]
Hyperbola=Hiperbol
HyperbolaSyntax=Hiperbol[ <Nokta>, <Nokta>, <Say\u0131> ]\n\
		Hiperbol[ <Nokta>, <Nokta>, <Do\u011fru Parças\u0131> ]
# V3.0 begin
If=E\u011fer
IfSyntax=E\u011fer[ <\u015eart>, <Do\u011fruysa> ]\n\
		E\u011fer[ <\u015eart>, <Do\u011fruysa>, <Do\u011fru De\u011filse> ]
Imaginary=SanalK\u0131s\u0131m
ImaginarySyntaxCAS=SanalK\u0131s\u0131m[ <Karma\u015f\u0131k Say\u0131> ]
ImplicitCurve=Kapal\u0131E\u011fri
ImplicitCurveSyntax=Kapal\u0131E\u011fri[ <Noktalar Listesi> ]
ImplicitDerivative=Kapal\u0131Türev
ImplicitDerivativeSyntaxCAS=Kapal\u0131Türev[ <\u0130fade>, <Ba\u011f\u0131ml\u0131 De\u011fi\u015fken>, <Ba\u011f\u0131ms\u0131z De\u011fi\u015fken> ]
Incircle=Çemberde
IncircleSyntax=Çemberde[ <Nokta>, <Nokta>, <Nokta> ]
IndexOf=Endeksi
IndexOfSyntax=Endeksi[ <Nesne>, <Liste> ]\n\
		Endeksi[ <Nesnet>, <Liste>, <Ba\u015flang\u0131ç Endeksi> ]\n\
		Endeksi[ <Metin>, <Metin> ]\n\
		Endeksi[ <Metin>, <Metin>, <Ba\u015flang\u0131ç Endeksi> ]
Insert=ArayaSok
InsertSyntax=ArayaYerle\u015ftir[<Liste>, <Liste>, <Yer> ]\n\
		ArayaYerle\u015ftir[<Nesne>, <Liste>, <Yer> ]
IntegerPart=TamK\u0131sm\u0131
IntegerPartSyntaxCAS=TamK\u0131sm\u0131[ <\u0130fade> ]
Integral=\u0130ntegral
IntegralBetween=Aras\u0131ndaki\u0130ntegral
IntegralBetweenSyntax=Aras\u0131ndaki\u0130ntegral[ <Fonksiyon>, <Fonksiyon>, <Ba\u015flang\u0131ç x-De\u011feri>, <Biti\u015f x-De\u011feri> ]\n\
		Aras\u0131ndaki\u0130ntegral[ <Fonksiyon>, <Fonksiyon>, <Ba\u015flang\u0131ç x-De\u011feri>, <Biti\u015f x-De\u011feri>, <Mant\u0131ksal De\u011fer bulma> ]
IntegralBetweenSyntaxCAS=Aras\u0131ndaki\u0130ntegral[ <Fonksiyon>, <Fonksiyon>, <Ba\u015flang\u0131ç x-De\u011feri>, <Biti\u015f x-De\u011feri> ]\n\
		Aras\u0131ndaki\u0130ntegral[ <Fonksiyon>, <Fonksiyon>, <De\u011fi\u015fken<, <Ba\u015flang\u0131ç De\u011feri>, <Biti\u015f De\u011feri> ]
# V2.5 changed
IntegralSyntax=\u0130ntegral[ <\u0130\u015flev> ]\n\
		\u0130ntegral[ <\u0130\u015flev>, <Say\u0131>, <Say\u0131> ]\n\
		\u0130ntegral[ <\u0130\u015flev>, <\u0130\u015flev>, <Say\u0131>, <Say\u0131> ]
IntegralSyntaxCAS=Integral[ <Fonksion> ]\n\
		Integral[ <Fonksion>, <De\u011fi\u015fken> ]\n\
		Integral[ <Fonksion>,  <Ba\u015flang\u0131ç x-De\u011feri>, <Biti\u015f x-De\u011feri>  ]\n\
		Integral[ <Fonksion>, <De\u011fi\u015fken>,  <Ba\u015flang\u0131ç x-De\u011feri>, <Biti\u015f x-De\u011feri>  ]
Intersect=Kesi\u015fim
IntersectRegion=BölgeyiKesi\u015ftir
IntersectRegionSyntax=BölgeyiKesi\u015ftir[ <Çokgen>, <Çokgen> ]
IntersectSyntax=Kesi\u015fim[ <Nesne>, <Nesne> ]\n\
		Kesi\u015fim[ <Nesne>, <Nesne>, <Say\u0131> ]\n\
		Kesi\u015fim[ <Nesne>, <Nesne>, <Nokta> ]
Intersection=Kesi\u015fim
IntersectionPaths=Kesi\u015fimYollar\u0131
IntersectionPathsSyntax=Kesi\u015fimYollar\u0131[ <Do\u011fru>, <Çokgen> ]\n\
		Kesi\u015fimYollar\u0131[ <Do\u011fru>, <Konik> ]
IntersectionSyntax=Kesi\u015fim[<Liste>, <Liste> ]
InverseBinomial=TersBinom
InverseBinomialSyntax=TersBinom[ <Deneme Say\u0131s\u0131>, <Olas\u0131l\u0131k Ba\u015far\u0131s\u0131>, <Olas\u0131l\u0131k> ]
InverseCauchy=TersCauchy
InverseCauchySyntax=TersCauchy[ <Medyan>, <Ölçek>, <Olas\u0131l\u0131k> ]
InverseChiSquared=TersKiKare
InverseChiSquaredSyntax=TersKiKare[ <Serbestlik Derecesi>, <Olas\u0131l\u0131k> ]
InverseExponential=TersÜstel
InverseExponentialSyntax=TersÜstel[ <Lamda>, <Olas\u0131l\u0131k> ]
InverseFDistribution=TersFDa\u011f\u0131l\u0131m\u0131
InverseFDistributionSyntax=TersFDa\u011f\u0131l\u0131m\u0131n[ <Pay Serbestlik Derecesi>, <Payda Serbestlik Derecesi>, <Olas\u0131l\u0131k> ]
InverseGamma=TersGama
InverseGammaSyntax=TersGama[ <Alfa>, <Beta>, <Olas\u0131l\u0131k> ]
InverseHyperGeometric=TersHiperGeometrik
InverseHyperGeometricSyntax=TersHiperGeometrik[ <Nüfus Büyüklü\u011fü>, <Ba\u015far\u0131 Say\u0131s\u0131>, <Örneklem Büyüklü\u011fü>, <Olas\u0131l\u0131k> ]
InverseNormal=TersNormal
InverseNormalSyntax=TersNormal[<Ortalama>, <Standard Sapma>, <Olas\u0131l\u0131k> ]
InversePascal=TersPascal
InversePascalSyntax=TersPascal[ <Ba\u015far\u0131 Say\u0131s\u0131>, <Ba\u015far\u0131 Olas\u0131l\u0131\u011f\u0131>, <Olas\u0131l\u0131k> ]
InversePoisson=TersPoisson
InversePoissonSyntax=TersPoisson[ <Ortalama>, <Olas\u0131l\u0131k> ]
InverseTDistribution=TersTDa\u011f\u0131l\u0131m\u0131
InverseTDistributionSyntax=TersTDa\u011f\u0131l\u0131m\u0131[ <Serbestlik Derecesi>, <Olas\u0131l\u0131k> ]
InverseWeibull=TersWeibull
InverseWeibullSyntax=TersWeibull[ <\u015eekil>, <Ölçek>, <Olas\u0131l\u0131k> ]
InverseZipf=TersZipf
InverseZipfSyntax=TersZipf[ <Ö\u011fe Say\u0131s\u0131>, <Üs>, <Olas\u0131l\u0131k> ]
Invert=TersiniAl
InvertSyntax=TersiniAl[<Matris> ]
InvertSyntaxCAS=TersiniAl[ <Matris> ]
IsInRegion=Bölgedemi
IsInRegionSyntax=Bölgedemi[ <Nokta>, <Bölge> ]
IsInteger=Tamsay\u0131m\u0131
IsIntegerSyntax=Tamsay\u0131m\u0131[<Say\u0131>
IsPrime=Asalm\u0131
IsPrimeSyntaxCAS=Asalm\u0131[ <Say\u0131> ]
Iteration=Döngü
IterationList=DöngüListesi
IterationListSyntax=DöngüListesi[<\u0130\u015flev>, <ba\u015flang\u0131ç-de\u011fer><Say\u0131 n> ]
IterationSyntax=Döngü[<\u0130\u015flev>, <ba\u015flang\u0131ç-de\u011fer>, <Say\u0131 n> ]
Join=Birle\u015ftir
JoinSyntax=Birle\u015ftir[<Liste>, <Liste>,...]\n\
		Birle\u015ftir[<Liste Listesi> ]
KeepIf=Do\u011fruysaTut
KeepIfSyntax=Do\u011fruysaTut[<\u015eart>, <Liste> ]


LCM=EKOK
LCMSyntax=EKOK[<Say\u0131>, <Say\u0131> ]\n\
		EKOK[<Say\u0131 Listesi> ]
LaTeX=LaTeX
LaTeXSyntax=LaTeX[<Nesne> ]\n\
		LaTeX[<Nesne>, <De\u011fi\u015fkenlerin de\u011fi\u015ftirilmesi için do\u011fru yanl\u0131\u015f s\u0131nama de\u011feri> ]
Last=Son
LastSyntax=Son[<Liste> ]\n\
		Son[<Liste>, <Ö\u011fe Say\u0131s\u0131> ]
LastSyntaxCAS=Son[ <Liste> ]\n\
		Son[ <Liste> , <Ö\u011fe Say\u0131s\u0131> ]
LeftSide=SolTaraf
LeftSideSyntaxCAS=SolTaraf[ <Denklem> ]\n\
		SolTaraf[ { <Denklem> } ]
LeftSum=SolToplam
LeftSumSyntax=SolToplam[ <\u0130\u015flev>, <Ba\u015flang\u0131ç x-De\u011feri>, <Biti\u015f x-De\u011feri>, <Dikdörtgen Say\u0131s\u0131> ]
Length=Uzunluk
# V2.5 changed
LengthSyntax=Uzunluk[ <Vektör> ]\n\
		Uzunluk[ <Nokta> ]\n\
		Uzunluk[ <\u0130\u015flev>, <Say\u0131>, <Say\u0131> ]\n\
		Uzunluk[ <\u0130\u015flev>, <Nokta>, <Nokta> ]\n\
		Uzunluk[ <E\u011fri>, <Say\u0131>, <Say\u0131> ]\n\
		Uzunluk[ <E\u011fri>, <Nokta>, <Nokta> ]\n\
		Uzunluk[ <Metin> ]\n\
		Uzunluk[ <Yertan\u0131m> ]
LengthSyntaxCAS=Uzunluk[ <\u0130\u015flev>, <x-ba\u015flang\u0131ç>, <x-biti\u015f> ]\n\
		Uzunluk[ <\u0130\u015flev>, <De\u011fi\u015fken> , <Ba\u015flang\u0131ç Noktas\u0131>, <Biti\u015f  Noktas\u0131> ]\n\
		Uzunluk[ <E\u011fri>, <x-ba\u015flang\u0131ç>, <x-biti\u015f> ]\n\
		Uzunluk[ <E\u011fri>, <De\u011fi\u015fken> , <Ba\u015flang\u0131ç Noktas\u0131>, <Biti\u015f  Noktas\u0131> ]
LetterToUnicode=HarfdenUniCode
LetterToUnicodeSyntax=HarfdenUniCode[<Metin> ]
Limit=Limit
LimitAbove=ÜsttenLimit
LimitAboveSyntax=ÜsttenLimit[ <\u0130\u015flev>, <De\u011fer> ]
LimitAboveSyntaxCAS=ÜsttenLimit[ <\u0130fade>, <De\u011fi\u015fken>, <De\u011fer> ]
LimitBelow=AlttanLimit
LimitBelowSyntax=AlttanLimit[ <\u0130\u015flev>, <De\u011fer> ]
LimitBelowSyntaxCAS=AlttanLimit[ <\u0130fade>, <De\u011fi\u015fken>, <De\u011fer> ]
LimitSyntax=Limit[<\u0130\u015flev>, <Say\u0131> ]
LimitSyntaxCAS=Limit[ <\u0130fade>, <De\u011fi\u015fken>, <De\u011fer> ]
Line=Do\u011fru
LineBisector=KenarDikmeOrtay
LineBisectorSyntax=KenarDikmeOrtay[ <Nokta>, <Nokta> ]\n\
		KenarDikmeOrtay[ <Do\u011fru Parças\u0131> ]
LineSyntax=Do\u011fru[ <Nokta>, <Nokta> ]\n\
		Do\u011fru[ <Nokta>, <Do\u011fru> ]\n\
		Do\u011fru[ <Nokta>, <Vektör> ]
Locus=Yertan\u0131m
LocusSyntax=Yertan\u0131m[ <Nokta>, <Nokta> ]
LogNormal=LogNormal
LogNormalSyntax=LogNormal[ <Ortalama>, <Standart Sapma>, x ]\n\
		LogNormal[ <Ortalama>, <Standart Sapma>, x, <Mant\u0131ksal Y\u0131\u011f\u0131lma> ]\n\
		LogNormal[ <Ortalama>, <Standart Sapma>, <De\u011fi\u015fken De\u011feri> ]
Logistic=Lojistik
LogisticSyntax=Lojistik[ <Ortalama>, <Ölçek>, x ]\n\
		Lojistik[ <Ortalama>, <Ölçek>, x, <Mant\u0131ksal Y\u0131\u011f\u0131lma> ]\n\
		Lojistik[ <Ortalama>, <Ölçek>, <De\u011fi\u015fken De\u011feri> ]
LowerSum=AltToplam
LowerSumSyntax=AltToplam[ <\u0130\u015flev>, <Say\u0131>, <Say\u0131>, <Say\u0131> ]
MatrixRank=MatrisRank
MatrixRankSyntaxCAS=MatrisRank[ <Matris> ]
Max=EnBüyük
MaxSyntax=EnBüyük[<Say\u0131>, <Say\u0131> ]\n\
		EnBüyük[<Liste> ]
Maximize=EnBüyü\u011fünüAl
MaximizeSyntax=EnBüyü\u011fünüAl[ <Ba\u011f\u0131ml\u0131 Sya\u0131s\u0131>, <Serbest Say\u0131s\u0131> ]
Mean=Ortalama
MeanSyntax=Ortalama[<Say\u0131 Listesi> ]
MeanSyntaxCAS=Ortalama[ <Say\u0131 Listesi> ]
MeanX=OrtalamaX
MeanXSyntax=OrtalamaX[<Nokta Listesi> ]
MeanY=OrtalamaY
MeanYSyntax=OrtalamaY[<Nokta Listesi> ]
Median=Ortanca
MedianSyntax=Ortanca[<Say\u0131 Listesi> ]
MedianSyntaxCAS=Medyan[ <Say\u0131 Listesi> ]
Midpoint=OrtaNokta
MidpointSyntax=OrtaNokta[ <Nokta>, <Nokta> ]\n\
		OrtaNokta[ <Do\u011fru Parças\u0131> ]\n\
		OrtaNokta[ <Konik> ]
Min=EnKüçük
MinSyntax=EnKüçük[<Say\u0131>, <Say\u0131> ]\n\
		EnKüçük[<Liste> ]
Minimize=EnKüçü\u011fünüAl
MinimizeSyntax=EnKüçü\u011fünüAl[ <Ba\u011f\u0131ml\u0131 Say\u0131s\u0131>, <Serbest Say\u0131s\u0131> ]
MinimumSpanningTree=EnKüçükDolanmaA\u011fac\u0131
MinimumSpanningTreeSyntax=EnKüçükDolanmaA\u011fac\u0131[ <Nokta Listesi> ]
Mirror=Yans\u0131ma
# V2.5 changed
MirrorSyntax=Yans\u0131ma[ <Nokta>, <Nokta> ]\n\
		Yans\u0131ma[ <Do\u011fru>, <Nokta> ]\n\
		Yans\u0131ma[ <Konik>, <Nokta> ]\n\
		Yans\u0131ma[ <Çokgen>, <Nokta> ]\n\
		Yans\u0131ma[ <Resim>, <Nokta> ]\n\
		Yans\u0131ma[ <Nokta>, <Do\u011fru> ]\n\
		Yans\u0131ma[ <Do\u011fru>, <Do\u011fru> ]\n\
		Yans\u0131ma[ <Konik>, <Do\u011fru> ]\n\
		Yans\u0131ma[ <Çokgen>, <Do\u011fru> ]\n\
		Yans\u0131ma[ <Resim>, <Do\u011fru> ]\n\
		Yans\u0131ma[ <Nokta>, <Çember> ]
Mod=Kalan
ModSyntax=Kalan[<Say\u0131>, <Say\u0131> ]
ModSyntaxCAS=Kalan[ <Bölünen Say\u0131>, <Bölen Say\u0131> ]\n\
		Kalan[ <Bölünen Polinom>, <Bölen Polinom> ]
Mode=Mod
ModeSyntax=Mod[<Say\u0131 Listesi> ]
NIntegral=S\u0130ntegral
NIntegralSyntaxCAS=S\u0130ntegral[ <\u0130\u015flev>, <Ba\u015flang\u0131ç x-De\u011feri>, <Biti\u015f x-De\u011feri> ]\n\
		S\u0130ntegral[ <\u0130\u015flev>, <De\u011fi\u015fken>, <Ba\u015flang\u0131ç de\u011fi\u015fken-De\u011feri>, <Biti\u015f de\u011fi\u015fken-De\u011feri> ]
NRoot=SKök
NRootSyntaxCAS=SKök[ <\u0130fade> , <N> ]


NSolutions=SÇözümler
NSolutionsSyntaxCAS=SÇözümler[ <Denklem> ]
NSolve=SÇözüm
NSolveSyntaxCAS=SÇözüm[ <Denklem> ]
Name=Ad
NameSyntax=Ad[<Nesne> ]
NextPrime=SonrakiAsal
NextPrimeSyntaxCAS=SonrakiAsal[ <Say\u0131> ]
Normal=Normal
NormalQuantilePlot=NormalS\u0131kl\u0131kÇizim
NormalQuantilePlotSyntax=NormalS\u0131kl\u0131kÇizim[ <Veri Listesi> ]
NormalSyntax=Normal[<Ortalama>, <Standard Sapma>, <De\u011fi\u015fken De\u011feri> ]
NormalSyntaxCAS=Normal[ <Ortalama>, <Standart Sapma>, <De\u011fi\u015fken De\u011feri> ]
Numerator=Pay
NumeratorSyntax=Pay[ <\u0130\u015flev> ]
NumeratorSyntaxCAS=Pay[ <\u0130fade> ]
Numeric=Say\u0131sal
NumericSyntaxCAS=Say\u0131sal[ <\u0130fade> ]\n\
		Say\u0131sal[ <\u0130fade>, <hassas basamak say\u0131s\u0131> ]
Object=Nesne
ObjectSyntax=Nesne[<Nesnenin Metin olarak Ad\u0131> ]
Ordinal=S\u0131rasal
OrdinalRank=S\u0131rasalRank
OrdinalRankSyntax=S\u0131rasalRank[ <Liste> ]
OrdinalSyntax=S\u0131rasal[ <Tamsay\u0131> ]
OrthogonalLine=DikDo\u011fru
OrthogonalLineSyntax=DikDo\u011fru[ <Nokta>, <Do\u011fru> ]\n\
		DikDo\u011fru[ <Nokta>, <Vektör> ]
OrthogonalPlane=DikDüzlem
OrthogonalPlaneSyntax=DikDüzlem[ <Nokta3D>, <Do\u011fru3D> ]
OrthogonalVector=DikVektör
OrthogonalVectorSyntax=DikVektör[ <Do\u011fru> ]\n\
		DikVektör[ <Vektör> ]
OrthogonalVectorSyntaxCAS=DikVektör[ <Vektör> ]
OsculatingCircle=Yap\u0131\u015f\u0131kÇember
OsculatingCircleSyntax=Yap\u0131\u015f\u0131kÇember[<Nokta>, <\u0130\u015flev> ]\n\
		Yap\u0131\u015f\u0131kÇember[<Nokta>, <E\u011fri> ]
PMCC=PMCC
PMCCSyntax=PMCC[<x Koordinat Listesi>, <y Koordinat Listesi> ]\n\
		PMCC[<Nokta Listesi> ]
Pan=Yüz
PanSyntax=Yüz[ <x>, <y> ]
Parabola=Parabol
ParabolaSyntax=Parabol[ <Nokta>, <Do\u011fru> ]
Parameter=Parametre
ParameterSyntax=Parametre[ <Konik> ]
ParseToFunction=\u0130\u015fleveDöndür
ParseToFunctionSyntax=\u0130\u015fleveDöndür[<\u0130\u015flev>, <Metin> ]
ParseToNumber=Say\u0131yaDöndür
ParseToNumberSyntax=Say\u0131yaDöndürr[ <Say\u0131>, <Metin> ]
PartialFractions=K\u0131smiKesirler
PartialFractionsSyntax=K\u0131smiKesirler[ <\u0130\u015flev> ]
Pascal=Pascal
PascalSyntax=Pascal[ <Ba\u015far\u0131 Say\u0131s\u0131>, <Ba\u015far\u0131 Olas\u0131l\u0131\u011f\u0131> ]\n\
		Pascal[ <Ba\u015far\u0131 Say\u0131s\u0131>, <Ba\u015far\u0131 Olas\u0131l\u0131\u011f\u0131>, <Mant\u0131ksal Y\u0131\u011f\u0131lma> ]\n\
		Pascal[ <Ba\u015far\u0131 Say\u0131s\u0131>, <Ba\u015far\u0131 Olas\u0131l\u0131\u011f\u0131>, <De\u011fi\u015fken De\u011feri>, <Mant\u0131ksal Y\u0131\u011f\u0131lma> ]
PascalSyntaxCAS=Pascal[ <Ba\u015far\u0131 Say\u0131s\u0131>, <Ba\u015far\u0131 Olas\u0131l\u0131\u011f\u0131>, <De\u011fi\u015fken De\u011feri>, <Mant\u0131ksal Y\u0131\u011f\u0131lma> ]
PathParameter=YolParametresi
PathParameterSyntax=YolParametresi[ <Yoldaki Nokta> ]
Percentile=Yüzdelik
PercentileSyntax=Yüzdelik[ <Say\u0131 Listesi>, <Yüzde> ]
Perimeter=Çevre
PerimeterSyntax=Çevre[<Çokgen> ]\n\
		Çevre[<Konik> ]
Plane=Düzlem
PlaneBisector=DüzlemDikme
PlaneSyntax=DüzlemDikme[ <Nokta3D>, <Nokta3D>, <Nokta3D> ]\n\
		DüzlemDikme[ <Nokta3D>, <Düzlem> ]
PlaySound=SesÇal
PlaySoundSyntax=SesÇal[ <Note>, <Süre>, <Çalg\u0131> ]\n\
		SesÇal[ <Note Sequence>, <Çalg\u0131> ]\n\
		SesÇal[ <Dosya> ]\n\
		SesÇal[ <\u0130\u015flev>, <Min De\u011fer>, <Max De\u011fer> ]\n\
		SesÇal[ <\u0130\u015flev>, <Min De\u011fer>, <Max De\u011fer>, <Örnek H\u0131z>, <Örnek Derinlik> ]\n\
		SesÇal[ <Mant\u0131ksal Çal> ] ]
Point=Nokta
PointIn=Nokta\u0130çinde
PointInSyntax=Nokta\u0130çinde[ <Bölge> ]
PointList=NoktaListesi
PointListSyntax=NoktaListesi[ <Liste> ]
PointSyntax=Nokta[ <Do\u011fru> ]\n\
		Nokta[ <Konik> ]\n\
		Nokta[ <\u0130\u015flev> ]\n\
		Nokta[ <Vektör> ]\n\
		Nokta[ <Nokta>, <Vektör> ]
Poisson=Poisson
PoissonSyntax=Poisson[ <Ortalama> ]\n\
		Poisson[ <Ortalama>, <Mant\u0131ksal Y\u0131\u011f\u0131lma> ]\n\
		Poisson[ <Ortalama>, <De\u011fi\u015fken De\u011feri>, <Mant\u0131ksal Y\u0131\u011f\u0131lma> ]
PoissonSyntaxCAS=Poisson[ <Ortalama>, <De\u011fi\u015fken De\u011feri>, <Mant\u0131ksal Y\u0131\u011f\u0131lma> ]
Polar=Kutupsal
PolarSyntax=Kutupsal[ <Nokta>, <Konik> ]
PolyLine=ÇokluDo\u011fru
PolyLineSyntax=ÇokluDo\u011fru[ <Nokta>, ..., <Nokta> ]\n\
		ÇokluDo\u011fru[ <Nokta Listesi> ]
Polygon=Çokgen
PolygonSyntax=Çokgen[ <Nokta>, ..., <Nokta> ]\n\
		Çokgen[ <Nokta>, <Nokta>, <Say\u0131> ]
Polyhedron=ÇokYüzlü
PolyhedronSyntax=ÇokYüzlü[ <Nokta3D>, <Nokta3D>, ...]
Polynomial=Polinom
PolynomialSyntax=Polinom[ <\u0130\u015flev> ]
PreviousPrime=ÖncekiAsal
PreviousPrimeSyntaxCAS=ÖncekiAsal[ <Say\u0131> ]
PrimeFactors=AsalÇarpanlar
PrimeFactorsSyntax=AsalÇarpanlar[ <Say\u0131> ]
PrimeFactorsSyntaxCAS=AsalÇarpanlar[ <Say\u0131> ]
Prism=Prizma
PrismSyntax=Prizma[ <Nokta>, <Nokta>, ...]\n\
		Prizma[ <Çokgen>, <Nokta> ]\n\
		Prizma[ <Çokgen>, <Yükseklik de\u011feri> ]
Product=Çarp\u0131m
ProductSyntax=Çarp\u0131m[<Liste> ]
ProductSyntaxCAS=Çarp\u0131m[ <\u0130fade Listesi> ]\n\
		Product[ <\u0130fade>, <de\u011fi\u015fken>, <ba\u015flang\u0131ç endeksi>, <biti\u015f endeksi> ]
MixedNumber=TamKesir
MixedNumberSyntaxCAS=TamKesir[ <\u0130fade> ]
Pyramid=Piramit
PyramidSyntax=Piramit[ <Nokta3D>, <Nokta3D>, ...]
Q1=Q1
Q1Syntax=Q1[<Say\u0131 Listesi> ]
Q3=Q3
Q3Syntax=Q3[<Say\u0131 Listesi> ]
QuadricSide=Kenar
RSquare=RKare
RSquareSyntax=RKaree[ <Nokta Listesi>, <\u0130\u015flev> ]
Radius=Yar\u0131çap
RadiusSyntax=Yar\u0131çap[ <Konik> ]
Random=Rastgele
RandomBinomial=RastgeleBinom
RandomBinomialSyntax=RastgeleBinom[<Deneme Say\u0131s\u0131>, <Olas\u0131l\u0131k> ]
RandomBinomialSyntaxCAS=RastgeleBinom[ <Deneme Say\u0131s\u0131>, <Olas\u0131l\u0131k> ]
RandomElement=RastgeleÖ\u011fe
RandomElementSyntax=RastgeleÖ\u011fe[ <Liste> ]
RandomElementSyntaxCAS=RastgeleÖ\u011fe[ <Liste> ]
RandomNormal=RastgeleNormal
RandomNormalSyntax=RastgeleNormal[<Ortalama>, <Standard Sapma> ]
RandomPoisson=RastgelePoisson
RandomPoissonSyntax=RastgelePoisson[<Ortalama> ]
RandomPoissonSyntaxCAS=RastgelePoisson[ <Ortalama> ]
RandomPolynomial=RastgelePolinom
RandomPolynomialSyntaxCAS=RastgelePolinom[ <Derece> , <Minimum for Coefficients>, <Maximum for Coefficients> ]\n\
		RastgelePolinom[ <De\u011fi\u015fken>, <Derece> , <Minimum for Coefficients>, <Maximum for Coefficients> ]
RandomSyntax=Rastgele[<En Az Tamsay\u0131>, <En Çok Tamsay\u0131> ]
RandomUniform=RastgeleTekDüze
RandomUniformSyntax=RastgeleTekDüze[ <Min>, <Max> ]
Rationalize=RasyonelYap
RationalizeSyntaxCAS=RasyonelYap[ <Say\u0131> ]
Ray=I\u015f\u0131n
RaySyntax=I\u015f\u0131n[ <Nokta>, <Nokta> ]\n\
		I\u015f\u0131n[ <Nokta>, <Vektör> ]
Real=Gerçek
RealSyntaxCAS=Gerçek[ <Karma\u015f\u0131k Say\u0131> ]
RectangleSum=DikdörtgenToplam
RectangleSumSyntax=DikdörtgenToplam[ <\u0130\u015flev>, <Ba\u015flang\u0131ç x-De\u011feri>, <Biti\u015f x-De\u011feri>, <Dikdörtgen Say\u0131s\u0131>, <Dikdörtgen ga\u015flang\u0131ç pozisyonu> ]
ReducedRowEchelonForm=\u0130ndirgenmi\u015fSat\u0131rE\u015felonBiçimi
ReducedRowEchelonFormSyntax=\u0130ndirgenmi\u015fSat\u0131rE\u015felonBiçimi[ <Matris> ]
ReducedRowEchelonFormSyntaxCAS=\u0130ndirgenmi\u015fSat\u0131rE\u015felonBiçimi[ <Matris> ]
Relation=Ba\u011f\u0131nt\u0131
RelationSyntax=Ba\u011f\u0131nt\u0131[ <Nesne>, <Nesne> ]
RemoveUndefined=Tan\u0131ms\u0131zsaKald\u0131r
RemoveUndefinedSyntax=Tan\u0131ms\u0131zsaKald\u0131r[<Liste> ]
Rename=Ad\u0131n\u0131De\u011fi\u015ftir
RenameSyntax=Ad\u0131n\u0131De\u011fi\u015ftir[ <Nesne>, <Ad> ]
ResidualPlot=Art\u0131kÇizim
ResidualPlotSyntax=Art\u0131kÇizimt[ <Nokta Listesi>, <\u0130\u015flev> ]
Reverse=TersineHareket
ReverseSyntax=TersineHareket[<Liste> ]
RightSide=Sa\u011fTaraf
RightSideSyntaxCAS=Sa\u011fTaraf[ <Denklem> ]\n\
		Sa\u011fTaraf[ { <Denklem> } ]
RigidPolygon=BükülmezÇokgen
RigidPolygonSyntax=BükülmezÇokgen[ <Serbest Nokta>, ..., <Serbest Nokta> ]
Root=Kök
RootList=KökListesi
RootListSyntax=KökListesi[ <Liste> ]
RootMeanSquare=KökOrtalamaKare
RootMeanSquareSyntax=KökOrtalamaKare[ <Say\u0131 Listesi> ]
RootSyntax=Kök[ <Polinom> ]\n\
		Kök[ <\u0130\u015flev>, <Say\u0131> ]\n\
		Kök[ <\u0130\u015flev>, <Say\u0131>, <Say\u0131> ]
Roots=Kökler
RootsSyntax=Kökler[ <\u0130\u015flev>, <Ba\u015flang\u0131ç x-De\u011feri>, <Biti\u015f x-De\u011feri> ]
Rotate=Döndür
# V2.5 changed
RotateSyntax=Döndür[ <Nokta>, <Aç\u0131> ]\n\
		Döndür[ <Vektör>, <Aç\u0131> ]\n\
		Döndür[ <Do\u011fru>, <Aç\u0131> ]\n\
		Döndür[ <Konik>, <Aç\u0131> ]\n\
		Döndür[ <Çokgen>, <Aç\u0131> ]\n\
		Döndür[ <Resim>, <Aç\u0131> ]\n\
		Döndür[ <Nokta>, <Aç\u0131>, <Nokta> ]\n\
		Döndür[ <Do\u011fru>, <Aç\u0131>, <Nokta> ]\n\
		Döndür[ <Konik>, <Aç\u0131>, <Nokta> ]\n\
		Döndür[ <Çokgen>, <Aç\u0131>, <Nokta> ]\n\
		Döndür[ <Resim>, <Aç\u0131>, <Nokta> ]
RotateText=MetniDöndür
RotateTextSyntax=MetniDöndür[ <Metin>, <Aç\u0131> ]
Row=Sat\u0131r
RowSyntax=Sat\u0131r[<Hücre> ]
SD=SS
SDSyntax=SS[<Say\u0131 Listesi> ]
SDSyntaxCAS=SS[<Say\u0131 Listesi> ]
SDX=SSX
SDXSyntax=SSX[<Say\u0131 Listesi> ]
SDY=SSY
SDYSyntax=SSY[<Say\u0131 Listesi> ]
SXX=SXX
SXXSyntax=SXX[<Say\u0131 Listesi>, <Say\u0131 Listesi> ]\n\
		SXX[<Nokta Listesi> ]
SXY=SXY
SXYSyntax=SXY[<Say\u0131 Listesi>, <Say\u0131 Listesi> ]\n\
		SXY[<Nokta Listesi> ]
SYY=SYY
SYYSyntax=SYY[<Say\u0131 Listesi>, <Say\u0131 Listesi> ]\n\
		SYY[<Nokta Listesi> ]
Sample=Örneklem
SampleSD=ÖrneklemSS
SampleSDSyntax=ÖrneklemSS[ <Say\u0131 Listesi> ]
SampleSDSyntaxCAS=ÖrneklemSS[ <Say\u0131 Listesi> ]
SampleSDX=ÖrneklemSSX
SampleSDXSyntax=ÖrneklemSSX[ <Nokta Listesi> ]
SampleSDY=ÖrneklemSSY
SampleSDYSyntax=ÖrneklemSSY[ <Nokta Listesi> ]
SampleSyntax=Örneklem[ <Liste>, <Büyüklük> ]\n\
		Örneklem[ <Liste>, <Büyüklük>, <De\u011fi\u015fiklikler ile> ]
SampleSyntaxCAS=Örneklem[ <Liste>, <Büyüklük> ]\n\
		Örneklem[ <Liste>, <Büyüklük>, <De\u011fi\u015fiklikler ile> ]
SampleVariance=ÖrneklemVaryans
SampleVarianceSyntax=ÖrneklemVaryans [ <Say\u0131 Listesi> ]
SampleVarianceSyntaxCAS=ÖrneklemVaryans [ <Say\u0131 Listesi> ]
SecondAxis=\u0130kinciEksen
SecondAxisLength=\u0130kinciEksenUzunlu\u011fu
SecondAxisLengthSyntax=\u0130kinciEksenUzunlu\u011fu[ <Konik> ]
SecondAxisSyntax=\u0130kinciEksen[ <Konik> ]
Sector=Dilim
SectorSyntax=Dilim[ <Konik>, <Nokta>, <Nokta> ]\n\
		Dilim[ <Konik>, <Say\u0131>, <Say\u0131> ]
Segment=Do\u011fruParças\u0131
# V2.5 changed
SegmentSyntax=Do\u011fruParças\u0131[ <Nokta>, <Nokta> ]\n\
		Do\u011fruParças\u0131[ <Nokta>, <Say\u0131> ]
SelectObjects=NesneleriSeç
SelectObjectsSyntax=NesneleriSeç[ ]\n\
		NesneleriSeç[ <Nesne>, <Nesne>, ... ]
SelectedElement=SeçiliÖ\u011fe
SelectedElementSyntax=SeçiliÖ\u011fe[ <Liste> ]
SelectedIndex=SeçiliEndeks
SelectedIndexSyntax=SeçiliEndeks[ <Liste> ]
Semicircle=Yar\u0131mÇember
SemicircleSyntax=Yar\u0131mÇember[ <Nokta>, <Nokta> ]
Sequence=Dizi
SequenceSyntax=Dizi[<ifade>, <de\u011fi\u015fken>, <ba\u015flang\u0131ç>, <biti\u015f> ]\n\
		Dizi[<ifade>, <de\u011fi\u015fken>, <ba\u015flang\u0131ç>, <biti\u015f>, <art\u0131\u015f> ]
SequenceSyntaxCAS=Dizi[<ifade>, <ba\u015flang\u0131ç>, <biti\u015f> ]\n\
		Dizi[<ifade>, <de\u011fi\u015fken>, <ba\u015flang\u0131ç>, <biti\u015f> ]
SetActiveView=EtkinGörünümAyarla
SetActiveViewSyntax=EtkinGörünümAyarla[ <Görünüm No 1|2> ]
SetAxesRatio=EksenOranAyarla
SetAxesRatioSyntax=EksenOranAyarla[ <Say\u0131>, <Say\u0131> ]
SetAxesRatioSyntax3D=EksenOranAyarla[ <Say\u0131>, <Say\u0131> ]\n\
		EksenOranAyarla[ <Say\u0131>, <Say\u0131>, <Say\u0131> ]
SetBackgroundColor=ArkaplanRengiAyarla
SetBackgroundColorSyntax=ArkaplanRengiAyarla[ <Nesne>, "<renk>" ]\n\
		ArkaplanRengiAyarla[ <Nesne>, <K\u0131rm\u0131z\u0131>, <Ye\u015fil>, <Mavi> ]
SetCaption=Ba\u015fl\u0131kAyarla
SetCaptionSyntax=Ba\u015fl\u0131kAyarla[ <Nesne>, <Metin> ]
SetColor=RenkAyarla
SetColorSyntax=RenkAyarla[ <Nesne>, "<renk>" ]\n\
		RenkAyarla[ <Nesne>, <K\u0131rm\u0131z\u0131>, <Ye\u015fil>, <Mavi> ]
SetConditionToShowObject=NesneyiGösterme\u015eart\u0131Ayarla
SetConditionToShowObjectSyntax=NesneyiGösterme\u015eart\u0131Ayarla[ <Nesne>, <\u015eart> ]
SetCoords=KoordinatAyarla
SetCoordsSyntax=KoordinatAyarla[ <Nokta>, <x>, <y> ]
SetDynamicColor=DinamikRenkAyarla
SetDynamicColorSyntax=DinamikRenkAyarla[ <Nesne>, <K\u0131rm\u0131z\u0131>, <Ye\u015fil>, <Mavi> ]
SetFilling=DolguAyarla
SetFillingSyntax=DolguAyarla[ <Nesne>, <Say\u0131> ]
SetFixed=Sabitle
SetFixedSyntax=Sabitle[ <Nesne>, <do\u011fru | yanl\u0131\u015f> ]
SetLabelMode=EtiketModuAyarla
SetLabelModeSyntax=EtiketDurumunuAyarla[ <Nesne>, <Say\u0131> ]
SetLayer=KatmanAyarla
SetLayerSyntax=KatmanAyarla[ <Nesne>, <Katman> ]
SetLineStyle=Do\u011fruSitiliAyarla
SetLineStyleSyntax=Do\u011fruSitiliAyarla[ <Do\u011fru>, <Say\u0131> ]
SetLineThickness=Do\u011fruKal\u0131nl\u0131kAyarla
SetLineThicknessSyntax=Do\u011fruKal\u0131nl\u0131kAyarla[ <Do\u011fru>, <Say\u0131> ]
SetPointSize=NoktaBüyüklükAyarla
SetPointSizeSyntax=NoktaBüyüklükAyarla[ <Nokta>, <Say\u0131> ]
SetPointStyle=NoktaSitiliAyarla
SetPointStyleSyntax=NoktaSitiliAyarla[ <Nokta>, <Say\u0131> ]
SetTooltipMode=Araç\u0130pucuDurumuAyarla
SetTooltipModeSyntax=Araç\u0130pucuDurumuAyarla[ <Nesne>, <Say\u0131> ]
SetValue=De\u011feriVer
SetValueSyntax=De\u011feriVer[ <Mant\u0131ksal>, <0|1> ]\n\
		De\u011feriVer[ <Nesne>, <Nesne> ]\n\
		De\u011feriVer[ <Liste>, <Say\u0131>, <Nesne> ]
SetVisibleInView=GörünebilirlikAyarla
SetVisibleInViewSyntax=GörünebilirlikAyarla[ <Nesne>, <Görünüm No 1|2>, <Mant\u0131ksal> ]
Shear=Kayk\u0131l
ShearSyntax=Kayk\u0131lr[ <Nesne>, <Do\u011fru>, <Oran> ]
ShortestDistance=EnK\u0131saMesafe
ShortestDistanceSyntax=EnK\u0131saMesafe[ <Do\u011fru parças\u0131 Listesi>, <Ba\u015flang\u0131ç Nokta>, <Biti\u015f Nokta>, <Mant\u0131ksal A\u011f\u0131rl\u0131kl\u0131> ]
ShowLabel=EtiketGöster
ShowLabelSyntax=EtiketGöster[ <Nesne>, <Mant\u0131ksal> ]
ShowLayer=KatmanGöster
ShowLayerSyntax=KatmanGöster[ <Say\u0131> ]
Shuffle=Kar\u0131\u015ft\u0131r
ShuffleSyntax=Kar\u0131\u015ft\u0131r[ <Liste> ]
ShuffleSyntaxCAS=Kar\u0131\u015ft\u0131r[ <Liste> ]
SigmaXX=SigmaXX
SigmaXXSyntax=SigmaXX[<Say\u0131 Listesi> ]\n\
		SigmaXX[<Nokta Listesi> ]
SigmaXY=SigmaXY
SigmaXYSyntax=SigmaXY[<x-Koordinat Listesi>, <y-Koordinat Listesi> ]\n\
		SigmaXY[<Nokta Listesi> ]
SigmaYY=SigmaYY
SigmaYYSyntax=SigmaYY[<Nokta Listesi> ]


Simplify=Sadele\u015ftir
SimplifySyntax=Sadele\u015ftir[<\u0130\u015flev> ]
SimplifySyntaxCAS=Sadele\u015ftir[<\u0130\u015flev> ]
Slider=Sürgü
SliderSyntax=Sürgü[ <En küçük>, <En büyük>, <Art\u0131\u015f>, <H\u0131z>, <Geni\u015flik>,\n\
		<Aç\u0131 m\u0131>, <Yatay>, <Hareketli>, <Rastgele> ]
Slope=E\u011fim
SlopeSyntax=E\u011fim[ <Do\u011fru> ]\n\
		E\u011fim[ <\u0130\u015flev> ]
SlowPlot=Yava\u015fÇizim
SlowPlotSyntax=Yava\u015fÇizim[ <\u0130\u015flev> ]
Solutions=Çözümler
SolutionsSyntaxCAS=Çözümler[ <Denklem> ]\n\
		Çözümler[ <Denklem>, <De\u011fi\u015fken> ]
Solve=Çöz
SolveODE=ÇözDD
SolveODESyntax=ÇözDD[ <f'(x,y)>, <Ba\u015flang\u0131ç x>, <Ba\u015flang\u0131ç y>, <Biti\u015f x>, <Ad\u0131m> ]\n\
		ÇözDD[ <y'>, <x'>, <Ba\u015flang\u0131ç x>, <Ba\u015flang\u0131ç y>, <Biti\u015f t>, <Ad\u0131m> ]\n\
		ÇözDD[ <b(x)>, <c(x)>, <f(x)>, <Ba\u015flang\u0131ç x>, <Ba\u015flang\u0131ç y>, <Ba\u015flang\u0131ç y'>, <Biti\u015f x>, <Ad\u0131m> ]
SolveSyntaxCAS=Çöz[ <x cinsinden Denklem> ]\n\
		Çöz[ <Denklem>, <De\u011fi\u015fken> ]
Sort=S\u0131rala
SortSyntax=S\u0131rala[<Liste> ]
Spearman=Spearman
SpearmanSyntax=Spearman[ <Nokta Listesi> ]\n\
		Spearman[ <Say\u0131 Listesi>, <Say\u0131 Listesi> ]
Sphere=Küre
SphereSyntax=Küre[ <3DNokta>, <Yar\u0131çap Say\u0131s\u0131> ]
StartAnimation=AnimasyonBa\u015flat
StartAnimationSyntax=AnimasyonBa\u015flat[ ]\n\
		AnimasyonBa\u015flat[ <Kayd\u0131raç veya Nokta>, <Kayd\u0131raç veya Nokta>, ... ]\n\
		AnimasyonBa\u015flat[ <Mant\u0131ksal> ]\n\
		AnimasyonBa\u015flat[ <Kayd\u0131raç veya Nokta>, <Kayd\u0131raç veya Nokta>, ..., <Mant\u0131ksal> ]
StemPlot=GövdeÇizim
StemPlotSyntax=GövdeÇizim[ <Liste> ]\n\
		GövdeÇizim[ <Liste>, <Düzenleme -1|0|1> ]
Stretch=Uzat
StretchSyntax=Uzat[ <Nesne>, <Do\u011fru>, <Oran> ]\n\
		Uzat[ <Nesne>, <Vektör> ]
Substitute=YerineKoy
SubstituteSyntaxCAS=YerineKoy[ <ifade>, <ba\u015flang\u0131ç>, <biti\u015f> ]
Sum=Toplam
SumSquaredErrors=ToplamKareHatalar\u0131
SumSquaredErrorsSyntax=ToplamKareHatalar\u0131[ <Noktalar Listesi>, <\u0130\u015flev> ]
SumSyntax=Toplam[<Liste> ]\n\
		Toplam[<Liste>, <Ö\u011fe Say\u0131s\u0131> ]
SumSyntaxCAS=Toplam[ <ifade>, <de\u011fi\u015fken>, <ba\u015flang\u0131ç de\u011feri>, <biti\u015f de\u011feri> ]
SurfaceCartesian=Yüzey
TDistribution=TDa\u011f\u0131l\u0131m\u0131
TDistributionSyntax=TDa\u011f\u0131l\u0131m\u0131[ <Serbestlik Derecesi>, x ]\n\
		TDa\u011f\u0131l\u0131m\u0131[ <Serbestlik Derecesi>, x, <Mant\u0131ksal Y\u0131\u011f\u0131lma> ]\n\
		TDa\u011f\u0131l\u0131m\u0131[ <Serbestlik Derecesi>, <Mant\u0131ksal De\u011fer> ]
TDistributionSyntaxCAS=TDa\u011f\u0131l\u0131m\u0131[ <Serbestlik Derecesi>, <De\u011fi\u015fken De\u011feri> ]
TMean2Estimate=TOrtalama2Tahmin
TMean2EstimateSyntax=TOrtalamaTahmin[ <Orneklem Veri Listesi 1>,  <Orneklem Veri Listesi 2>, <Seviye>, <Mant\u0131ksal Havuz> ]\n\
		TOrtalamaTahmin[ <Örneklem Ortalama 1>, <Örneklem Standart Sapma 1>, <Örneklem Büyüklü\u011fü 1>, <Örneklem Ortalama 2>, <Örneklem Standart Sapma 2>, <Örneklem Büyüklü\u011fü 2><Seviye>, <Mant\u0131ksal Havuz> ]
TMeanEstimate=TOrtalamaTahmin
TMeanEstimateSyntax=TOrtalamaTahmin[ <Örneklem Veri Listesi>, <Seviye> ]\n\
		TOrtalamaTahmin[ <Örneklem Ortalama>, <Örneklem Standart Sapma>, <Örneklem Büyüklü\u011fü>, <Seviye> ]
TTest=TTesti
TTest2=TTesti2
TTest2Syntax=TTesti[ <Örneklem Veri Listesi 1>, <Örneklem Veri Listesi 2>, <Kuyruk>, <Mant\u0131ksal Havuz>  ]\n\
		TTesti[ <Örneklem Ortalama 1>, <Örneklem Standart Sapma 1>,  <Örneklem Büyüklü\u011fü 1>, <Örneklem Ortalama 2>, <Örneklem Standart Sapma 2>,  <Örneklem Büyüklü\u011fü 2>, <Kuyruk>, <Mant\u0131ksal Havuz> ]
TTestPaired=TTestÇiftli
TTestPairedSyntax=TTestÇiftli[ <Örneklem Veri Listesi 1>, <Örneklem Veri Listesi 2>, <Kuyruk> ]
TTestSyntax=TTesti[ <Örneklem Veri Listesi>, <Hipotezlenen Ortalama>, <Kuyruk> ]\n\
		TTesti[ <Örneklem Ortalama>, <Örneklem Standart Sapma>, <Örneklem Büyüklü\u011fü>, <Hipotezlenen Ortalama>, <Kuyruk> ]
TableText=TabloMetni
TableTextSyntax=TabloMetni[<Liste>, <Liste>,...]\n\
		TabloMetni[<Liste>, <Liste>,..., <Metin Hizalamas\u0131> ]\n\
		
Take=Al
TakeSyntax=Al[<Liste>, <Ba\u015flang\u0131ç Yeri>, <Biti\u015f Yeri> ]
TakeSyntaxCAS=Al[ <Liste> , <Ba\u015flang\u0131ç Pozisyonu>, <Biti\u015f Pozisyonu> ]
Tangent=Te\u011fet
TangentSyntax=Te\u011fet[ <Nokta>, <Konik> ]\n\
		Te\u011fet[ <Do\u011fru>, <Konik> ]\n\
		Te\u011fet[ <Say\u0131>, <\u0130\u015flev> ]\n\
		Te\u011fet[ <Nokta>, <\u0130\u015flev> ]\n\
		Te\u011fet[ <Nokta>, <E\u011fri> ]
TaylorSeries=TaylorPolinomu
TaylorSeriesSyntax=TaylorSerisi[ <\u0130\u015flev>, <Say\u0131>, <Say\u0131> ]
TaylorSeriesSyntaxCAS=TaylorSerisi[ <\u0130\u015flev>, <Say\u0131>, <Say\u0131> ]\n\
		Taylor[ <\u0130\u015flev>, <De\u011fi\u015fken>, <De\u011fi\u015fken-De\u011feri>, <S\u0131ra Nosu> ]
Text=Metin
TextSyntax=Metin[<Nesne> ]\n\
		Metin[<Nesne>, <De\u011fi\u015fkenlerin de\u011fi\u015ftirilmesi için do\u011fru yanl\u0131\u015f s\u0131nama de\u011feri> ]
TextToUnicode=MetindenUniCode
TextToUnicodeSyntax=MetindenUniCode[<Metin> ]
Textfield=MetinAlan\u0131
TextfieldSyntax=MetinAlan\u0131[]\n\
		MetinAlan\u0131[ <Ba\u011fl\u0131 Nesne> ]
TiedRank=Ba\u011fl\u0131S\u0131ras\u0131
TiedRankSyntax=Ba\u011fl\u0131S\u0131ras\u0131[ <Liste> ]
ToPolar=Kutupsala
ToPolarSyntaxCAS=Kutupsala[ <Karma\u015f\u0131k Say\u0131> ]
ToolImage=AraçResmi
ToolImageSyntax=AraçResmi[ <Say\u0131> ]
Top=Üst
Translate=Ötele
# V2.5 changed
TranslateSyntax=Ötele[ <Nokta>, <Vektör> ]\n\
		Ötele[ <Do\u011fru>, <Vektör> ]\n\
		Ötele[ <Konik>, <Vektör> ]\n\
		Ötele[ <\u0130\u015flev>, <Vektör> ]\n\
		Ötele[ <Nokta>, <Vektör> ]\n\
		Ötele[ <Çokgen>, <Vektör> ]\n\
		Ötele[ <Resim>, <Vektör> ]\n\
		Ötele[ <Vektör>, <Nokta> ]
Transpose=Transpoz
TransposeSyntax=Transpoz[<Matris> ]
TransposeSyntaxCAS=Transpoz[ <Matris> ]
TrapezoidalSum=ÇokgenselAlanToplam
TrapezoidalSumSyntax=ÇokgenselAlanToplam[<\u0130\u015flev>, <Ba\u015flang\u0131ç x de\u011feri>, <Biti\u015f x de\u011feei>
TravelingSalesman=GeziciSat\u0131\u015fEleman\u0131
TravelingSalesmanSyntax=GeziciSat\u0131\u015fEleman\u0131[ <Noktalar Listesi> ]
Triangular=Üçgensel
TriangularSyntax=Üçgensel[ <Alt S\u0131n\u0131r>, <Üst S\u0131n\u0131r>, <Durum>, x ]\n\
		Üçgensel[ <Alt S\u0131n\u0131r>, <Üst S\u0131n\u0131r>, <Durum>, x, <Mant\u0131ksal Y\u0131\u011f\u0131lma> ]\n\
		Üçgensel[ <Alt S\u0131n\u0131r>, <Üst S\u0131n\u0131r>, <Durum>, <Mant\u0131ksal Y\u0131\u011f\u0131lma> ]
TurningPoint=DönmeNoktas\u0131
TurningPointSyntax=DönmeNoktas\u0131[ <Polinom> ]
UnicodeToLetter=UniCodeHarfi
UnicodeToLetterSyntax=UniCodeHarfi[<Tamsay\u0131> ]
UnicodeToText=UniCodedanHarfe
UnicodeToTextSyntax=UniCodedanHarfe[<Tamsay\u0131 Listesi> ]
Uniform=Ayn\u0131Tarz
UniformSyntax=Ayn\u0131Tarz[ <Alt S\u0131n\u0131r>, <Üst S\u0131n\u0131r>, x ]\n\
		Ayn\u0131Tarz[ <Alt S\u0131n\u0131r>, <Üst S\u0131n\u0131>, x, <Mant\u0131ksal Y\u0131\u011f\u0131lma> ]\n\
		Ayn\u0131Tarz[ <Alt S\u0131n\u0131r>, <Üst S\u0131n\u0131>, <De\u011fi\u015fken De\u011feri> ]
Union=Birle\u015fim
UnionSyntax=Birle\u015fim[<Liste>, <Liste> ]
Unique=E\u015fsiz
UniqueSyntax=E\u015fsiz [<Liste> ]
UniqueSyntaxCAS=E\u015fsiz [<Liste> ]
UnitOrthogonalVector=BirimDikVektör
UnitOrthogonalVectorSyntax=BirimDikVektör[ <Do\u011fru> ]\n\
		BirimDikVektör[ <Vektör> ]
UnitOrthogonalVectorSyntaxCAS=BirimDikVektör[ <Vektör> ]
UnitVector=BirimVektör
UnitVectorSyntax=BirimVektör[ <Vektör> ]\n\
		BirimVektör[ <Do\u011fru> ]
UnitVectorSyntaxCAS=BirimVektör[ <Vektör> ]
UpdateConstruction=Yap\u0131y\u0131Güncelle
UpdateConstructionSyntax=Yap\u0131y\u0131Güncelle[]
UpperSum=ÜstToplam
UpperSumSyntax=ÜstToplam[ <\u0130\u015flev>, <Say\u0131>, <Say\u0131>, <Say\u0131> ]
Variance=Varyans
VarianceSyntax=Varyans[<Say\u0131 Listesi> ]
VarianceSyntaxCAS=Varyans[ <Say\u0131 Listesi> ]
Vector=Vektör
VectorSyntax=Vektör[ <Nokta> ]\n\
		Vektör[ <Nokta>, <Nokta> ]
Vertex=TepeNoktas\u0131
VertexSyntax=TepeNoktas\u0131[ <Konik> ]
VerticalText=Dü\u015feyMetin
VerticalTextSyntax=Dü\u015feyMetin[ <Metin> ]
Voronoi=Voronoi
VoronoiSyntax=Voronoi [ <Nokta Listesi> ]
Weibull=Weibull
WeibullSyntax=Weibull[ <\u015eekil>, <Ölçek>, x ]\n\
		Weibull[ <\u015eekil>, <Ölçek>, x, <Mant\u0131ksal Y\u0131\u011f\u0131lma> ]\n\
		Weibull[ <\u015eekil>, <Ölçek>, <De\u011fi\u015fken De\u011feri> ]
WeibullSyntaxCAS=Weibull[ <\u015eekil>, <Ölçek>, <De\u011fi\u015fken De\u011feri> ]
Zip=Zip
ZipSyntax=Zip[ <\u0130fade>, <De\u011fi\u015fken1>, <Liste1>, <De\u011fi\u015fken2>, <Liste2>, ...]
Zipf=Zipf
ZipfSyntax=Zipf[ <Ö\u011fe Say\u0131s\u0131>, <Üs> ]\n\
		Zipf[ <Ö\u011fe Say\u0131s\u0131>, <Üs>, <Mant\u0131ksal Y\u0131\u011f\u0131lma> ]\n\
		Zipf[ <Ö\u011fe Say\u0131s\u0131>, <Üs>, <De\u011fi\u015fken De\u011feri>, <Mant\u0131ksal Y\u0131\u011f\u0131lma> ]
ZipfSyntaxCAS=Zipf[ <Ö\u011fe Say\u0131s\u0131>, <Üs>, <De\u011fi\u015fken De\u011feri>, <Mant\u0131ksal Y\u0131\u011f\u0131lma> ]
ZoomIn=Yak\u0131nla\u015ft\u0131r
ZoomInSyntax=Yak\u0131nla\u015ft\u0131r[ <Ölçek Faktörü> ]\n\
		Yak\u0131nla\u015ft\u0131r[ <Ölçek Faktörü>, <Merkez Nokta> ]\n\
		Yak\u0131nla\u015ft\u0131r[ <Min x>, <Min y>, <Max x>, <Max y> ]
ZoomOut=Uzakla\u015ft\u0131r
ZoomOutSyntax=Uzakla\u015ft\u0131r[ <Ölçek Faktörü> ]\n\
		Uzakla\u015ft\u0131r[ <Ölçek Faktörü>, <Merkez Nokta> ]
nPr=nPr
nPrSyntaxCAS=nPr [ <Say\u0131>, <Say\u0131> ]
