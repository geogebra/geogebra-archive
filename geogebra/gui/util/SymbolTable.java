package geogebra.gui.util;

import geogebra.gui.virtualkeyboard.MyTextField;
import geogebra.kernel.arithmetic.ExpressionNode;
import geogebra.main.Application;
import geogebra.util.Unicode;

import java.awt.Component;
import java.awt.Dimension;
import java.awt.event.KeyEvent;
import java.awt.event.MouseEvent;

import javax.swing.BorderFactory;
import javax.swing.MenuElement;
import javax.swing.MenuSelectionManager;
import javax.swing.SwingConstants;

/**
 * Symbols for quick pasting into text fields. See MyTextField.
 * 
 * @author G Sturr
 *
 */
public class SymbolTable extends SelectionTable {


	public final static String [] displayChars = { 	
		"\u2245", // congruent	
		"\u2261",  // equivalent
		"\u2221",  // angle
		"\u2206"  // triangle
	};

	public final static String [] specialChars = { 	
		"\u00b2",  // exponents ^2 
		"\u00b3",  // exponents ^3 
		"\u00b0", // degree	
		"\u03c0", // pi	
		Unicode.EULER_STRING, // e
		"\u221e", // infinity
		ExpressionNode.strVECTORPRODUCT, //  "\u2297", // vector product (circled times)
		"sqrt(x)",
		"cbrt(x)",
		"abs(x)",
		"sgn(x)",
		"ln(x)",
		"lg(x)",
		"ld(x)",
		"sin(x)",
		"cos(x)",
		"tan(x)",
		"asin(x)",
		"acos(x)",
		"atan(x)",
		"sinh(x)",
		"cosh(x)",
		"tanh(x)",
		"asinh(x)",
		"acosh(x)",
		"atanh(x)",
		"floor(x)",
		"ceil(x)",
		"round(x)",
		"gamma(x)",
		"random()",
		ExpressionNode.strEQUAL_BOOLEAN,
		ExpressionNode.strNOT_EQUAL,
		ExpressionNode.strLESS_EQUAL,
		ExpressionNode.strGREATER_EQUAL,
		ExpressionNode.strNOT,
		ExpressionNode.strAND,
		ExpressionNode.strOR, 
		ExpressionNode.strPARALLEL,
		ExpressionNode.strPERPENDICULAR,
		ExpressionNode.strIS_ELEMENT_OF,
		ExpressionNode.strCONTAINS,
		ExpressionNode.strCONTAINS_STRICT,
	};


	// spaces either side (for multiply when inserted into the input bar)
	public final static String [] functions = { 	
		" sqrt(x) ",
		" cbrt(x) ",
		" abs(x) ",
		" sgn(x) ",
		" arg(x) ",
		" conjugate(x) ",
		" ln(x) ",
		" lg(x) ",
		" ld(x) ",
		" floor(x) ",
		" sin(x) ",
		" sinh(x) ",
		" cos(x) ",
		" cosh(x) ",
		" tan(x) ",
		" tanh(x) ",
		" asin(x) ",
		" asinh(x) ",
		" acos(x) ",
		" acosh(x) ",
		" atan(x) ",
		" atanh(x) ",
		" atan2(x, y) ", "",
		" sec(x) ",
		" sech(x) ",
		" cosec(x) ",
		" cosech(x) ",
		" cot(x) ",
		" coth(x) ",
		" ceil(x) ",
		" round(x) ",
		" gamma(x) ",
		" random() ",
	};


	public final static String [] symbols = {
		
		"\u03c0",                // pi	
		Unicode.EULER_STRING,    // e
		"\u00b2",                // exponents ^2 
		"\u00b3",                // exponents ^3 
		"\u00b0",                // degree			
		"\u221e",                // infinity
		ExpressionNode.strVECTORPRODUCT, //  "\u2297", // vector product (circled times)
		ExpressionNode.strEQUAL_BOOLEAN,
		ExpressionNode.strNOT_EQUAL,
		ExpressionNode.strLESS_EQUAL,
		ExpressionNode.strGREATER_EQUAL,
		ExpressionNode.strNOT,
		ExpressionNode.strAND,
		ExpressionNode.strOR, 
		ExpressionNode.strPARALLEL,
		ExpressionNode.strPERPENDICULAR,
		ExpressionNode.strIS_ELEMENT_OF,
		ExpressionNode.strCONTAINS,
		ExpressionNode.strCONTAINS_STRICT,
		
	};





	public final static String [] greekLowerCase = {
		"\u03b1", "\u03b2", "\u03b3", "\u03b4", "\u03b5", "\u03b6", "\u03b7", "\u03b8",
		"\u03b9", "\u03ba", "\u03bb", "\u03bc", "\u03bd", "\u03be", "\u03bf", "\u03c0", 
		"\u03c1", "\u03c3", "\u03c4", "\u03c5", "\u03c6", "\u03c7", "\u03c8",
		"\u03c9"
	};

	public final static String [] greekUpperCase = {
		"\u0393", // Gamma
		"\u0394", // Delta
		"\u0398", // Theta
		"\u039b", // Lambda
		"\u039e", // Xi
		"\u03a0", // Pi
		"\u03a3", // Sigma
		"\u03a6", // Phi
		"\u03a8", // Psi
		"\u03a9"  // Omega
	};


	public final static String [] greek = {
		"\u03b1", "\u03b2", "\u03b3", "\u03b4", "\u03b5", "\u03b6", "\u03b7", "\u03b8",
		"\u03b9", "\u03ba", "\u03bb", "\u03bc", "\u03bd", "\u03be", "\u03bf", "\u03c0", 
		"\u03c1", "\u03c3", "\u03c4", "\u03c5", "\u03c6", "\u03c7", "\u03c8",
		"\u03c9",

		"\u0393", // Gamma
		"\u0394", // Delta
		"\u0398", // Theta
		"\u039b", // Lambda
		"\u039e", // Xi
		"\u03a0", // Pi
		"\u03a3", // Sigma
		"\u03a6", // Phi
		"\u03a8", // Psi
		"\u03a9"  // Omega
	};



	public final static String [] tableSymbols = {
		
		
		"\u03B1" ,     //GREEK SMALL LETTER ALPHA
		"\u03B2" ,     //GREEK SMALL LETTER BETA
		"\u03B3" ,     //GREEK SMALL LETTER GAMMA
		"\u03B4" ,     //GREEK SMALL LETTER DELTA
		"\u03B5" ,     //GREEK SMALL LETTER EPSILON
		"\u03B6" ,     //GREEK SMALL LETTER ZETA
		"\u03B7" ,     //GREEK SMALL LETTER ETA
		"\u03B8" ,     //GREEK SMALL LETTER THETA
		"\u03B9" ,     //GREEK SMALL LETTER IOTA
		"\u03BA" ,     //GREEK SMALL LETTER KAPPA
		"\u03BB" ,     //GREEK SMALL LETTER LAMDA
		"\u03BC" ,     //GREEK SMALL LETTER MU
		"\u03BD" ,     //GREEK SMALL LETTER NU
		"\u03BE" ,     //GREEK SMALL LETTER XI
		"\u03BF" ,     //GREEK SMALL LETTER OMICRON
		"\u03C0" ,     //GREEK SMALL LETTER PI
		"\u03C1" ,     //GREEK SMALL LETTER RHO
		"\u03C2" ,     //GREEK SMALL LETTER FINAL SIGMA
		"\u03C3" ,     //GREEK SMALL LETTER SIGMA
		"\u03C4" ,     //GREEK SMALL LETTER TAU
		"\u03C5" ,     //GREEK SMALL LETTER UPSILON
		"\u03C6" ,     //GREEK SMALL LETTER PHI
		"\u03C7" ,     //GREEK SMALL LETTER CHI
		"\u03C8" ,     //GREEK SMALL LETTER PSI
		"\u03C9" ,     //GREEK SMALL LETTER OMEGA

		

		"\u0393", // Gamma
		"\u0394", // Delta
		"\u0398", // Theta
		"\u039b", // Lambda
		"\u039e", // Xi
		"\u03a0", // Pi
		"\u03a3", // Sigma
		"\u03a6", // Phi
		"\u03a8", // Psi
		"\u03a9",  // Omega


		Unicode.PI_STRING, // pi	
		Unicode.EULER_STRING, // e

		"\u00b2",  // exponents ^2 
		"\u00b3",  // exponents ^3 
		"\u00b0", // degree			
		"\u221e", // infinity
		ExpressionNode.strVECTORPRODUCT, //  "\u2297", // vector product (circled times)
		ExpressionNode.strEQUAL_BOOLEAN,
		ExpressionNode.strNOT_EQUAL,
		ExpressionNode.strLESS_EQUAL,
		ExpressionNode.strGREATER_EQUAL,
		ExpressionNode.strNOT,
		ExpressionNode.strAND,
		ExpressionNode.strOR, 
		ExpressionNode.strPARALLEL,
		ExpressionNode.strPERPENDICULAR,
		ExpressionNode.strIS_ELEMENT_OF,
		ExpressionNode.strCONTAINS,
		ExpressionNode.strCONTAINS_STRICT,

	};


	public final static String [] logical = {
		"\u2200", //FOR ALL
		"\u2203", //THERE EXISTS
		"\u2261", //IDENTICAL TO
		"\u2262", //NOT IDENTICAL TO
		"\u2204", //THERE DOES NOT EXIST
		"\u2201", //COMPLEMENT
		//"\u220E", //END OF PROOF
		"\u2234", //THEREFORE
		"\u2235", //BECAUSE
		"\u2227", //LOGICAL AND
		"\u2228", //LOGICAL OR
		"\u22BB", //XOR
		"\u22BC", //NAND
		"\u22BD", //NOR
	};
	
	
	public final static String [] sets = {
		
		"\u2205", //EMPTY SET
		"\u2208", //ELEMENT OF
		"\u2209", //NOT AN ELEMENT OF
		"\u2229", //INTERSECTION
		"\u222A", //UNION
		
		"\u2282", //SUBSET OF	
		"\u2284", //NOT A SUBSET OF
		"\u2286", //SUBSET OF OR EQUAL TO
		"\u2288", //NEITHER A SUBSET OF NOR EQUAL TO
		"\u228A", //SUBSET OF WITH NOT EQUAL TO
		
		
		"\u2285", //NOT A SUPERSET OF
		"\u2283", //SUPERSET OF
		"\u2287", //SUPERSET OF OR EQUAL TO
		"\u228B", //SUPERSET OF WITH NOT EQUAL TO
		"\u2289", //NEITHER A SUPERSET OF NOR EQUAL TO
		
		
	};
	
	
	
	public final static String [] math_ops = {
		
		"\u2202", //PARTIAL DIFFERENTIAL
		"\u2206", //INCREMENT
		"\u2207", //NABLA
		"\u221E", //INFINITY
		"\u221A", //SQUARE ROOT
		"\u221B", //CUBE ROOT
		"\u221C", //FOURTH ROOT
		"\u220F", //N-ARY PRODUCT
		"\u2210", //N-ARY COPRODUCT
		"\u2211", //N-ARY SUMMATION
		"\u222B", //INTEGRAL
		"\u222C", //DOUBLE INTEGRAL
		"\u222D", //TRIPLE INTEGRAL
		"\u222E", //CONTOUR INTEGRAL
		"\u222F", //SURFACE INTEGRAL
		"\u2230", //VOLUME INTEGRAL
		"\u2231", //CLOCKWISE INTEGRAL
		"\u2232", //CLOCKWISE CONTOUR INTEGRAL
		"\u2233", //ANTICLOCKWISE CONTOUR INTEGRAL
		
		
		"\u00B1", //MINUS-OR-PLUS SIGN
		"\u2213", //MINUS-OR-PLUS SIGN
	
		"\u224C", //ALL EQUAL TO
		"\u2260", //NOT EQUAL TO
		"\u2264", //LESS-THAN OR EQUAL TO
		"\u2265", //GREATER-THAN OR EQUAL TO
		"\u2248", //ALMOST EQUAL TO
		"\u2249", //NOT ALMOST EQUAL TO
		"\u221D", //PROPORTIONAL TO
		
		"\u2258", //CORRESPONDS TO
		"\u2259", //ESTIMATES
		"\u224D", //EQUIVALENT TO
		"\u224E", //GEOMETRICALLY EQUIVALENT TO
		
			
		

		
		"\u221F", //RIGHT ANGLE
		"\u2220", //ANGLE
		"\u2221", //MEASURED ANGLE
		"\u2222", //SPHERICAL ANGLE
		"\u2223", //DIVIDES
		"\u2224", //DOES NOT DIVIDE
		"\u2225", //PARALLEL TO
		"\u2226", //NOT PARALLEL TO
		"\u223A", //GEOMETRIC PROPORTION
		
		
		
	
		
		
	
	/*	
		
		"?","?","?","?",
		
	//=======================================
		
		"\u2238", //DOT MINUS
		"\u2236", //RATIO
		"\u2237", //PROPORTION
		"\u2245", //APPROXIMATELY EQUAL TO
		
		
		
		
		
		"\u2212", //MINUS SIGN
		"\u2214", //DOT PLUS
		"\u2215", //DIVISION SLASH
		"\u2216", //SET MINUS
		"\u2266", //LESS-THAN OVER EQUAL TO
		"\u22C0", //N-ARY LOGICAL AND
		"\u22C1", //N-ARY LOGICAL OR
		"\u22C2", //N-ARY INTERSECTION
		"\u22C3", //N-ARY UNION
		"\u2244", //NOT ASYMPTOTICALLY EQUAL TO
		
		"\u220B", //CONTAINS AS MEMBER
		"\u220C", //DOES NOT CONTAIN AS MEMBER
		
		"\u220A", //SMALL ELEMENT OF
		"\u220D", //SMALL CONTAINS AS MEMBER
		"\u2217", //ASTERISK OPERATOR
		"\u2218", //RING OPERATOR
		"\u2219", //BULLET OPERATOR
		
		
		"\u2239", //EXCESS
		
		"\u223B", //HOMOTHETIC
		"\u223C", //TILDE OPERATOR
		"\u223D", //REVERSED TILDE
		"\u223E", //INVERTED LAZY S
		"\u223F", //SINE WAVE
		"\u2240", //WREATH PRODUCT
		"\u2241", //NOT TILDE
		"\u2242", //MINUS TILDE
		"\u2243", //ASYMPTOTICALLY EQUAL TO
		
		
		"\u2247", //NEITHER APPROXIMATELY NOR ACTUALLY EQUAL TO
		
		
		"\u224A", //ALMOST EQUAL OR EQUAL TO
		"\u224B", //TRIPLE TILDE
		
		
		"\u224F", //DIFFERENCE BETWEEN
		"\u2250", //APPROACHES THE LIMIT
		"\u2251", //GEOMETRICALLY EQUAL TO
		"\u2252", //APPROXIMATELY EQUAL TO OR THE IMAGE OF
		"\u2253", //IMAGE OF OR APPROXIMATELY EQUAL TO
		"\u2254", //COLON EQUALS
		"\u2255", //EQUALS COLON
		"\u2256", //RING IN EQUAL TO
		"\u2257", //RING EQUAL TO
	
		"\u225A", //EQUIANGULAR TO
		"\u225B", //STAR EQUALS
		"\u225C", //DELTA EQUAL TO
		"\u225D", //EQUAL TO BY DEFINITION
		"\u225E", //MEASURED BY
		"\u225F", //QUESTIONED EQUAL TO
		
		
		"\u2263", //STRICTLY EQUIVALENT TO
		"\u2246", //APPROXIMATELY BUT NOT ACTUALLY EQUAL TO
		
		"\u2267", //GREATER-THAN OVER EQUAL TO
		"\u2268", //LESS-THAN BUT NOT EQUAL TO
		"\u2269", //GREATER-THAN BUT NOT EQUAL TO
		"\u226A", //MUCH LESS-THAN
		"\u226B", //MUCH GREATER-THAN
		"\u226C", //BETWEEN
		"\u226D", //NOT EQUIVALENT TO
		"\u226E", //NOT LESS-THAN
		"\u226F", //NOT GREATER-THAN
		"\u2270", //NEITHER LESS-THAN NOR EQUAL TO
		"\u2271", //NEITHER GREATER-THAN NOR EQUAL TO
		"\u2272", //LESS-THAN OR EQUIVALENT TO
		"\u2273", //GREATER-THAN OR EQUIVALENT TO
		"\u2274", //NEITHER LESS-THAN NOR EQUIVALENT TO
		"\u2275", //NEITHER GREATER-THAN NOR EQUIVALENT TO
		"\u2276", //LESS-THAN OR GREATER-THAN
		"\u2277", //GREATER-THAN OR LESS-THAN
		"\u2278", //NEITHER LESS-THAN NOR GREATER-THAN
		"\u2279", //NEITHER GREATER-THAN NOR LESS-THAN
		"\u227A", //PRECEDES
		"\u227B", //SUCCEEDS
		"\u227C", //PRECEDES OR EQUAL TO
		"\u227D", //SUCCEEDS OR EQUAL TO
		"\u227E", //PRECEDES OR EQUIVALENT TO
		"\u227F", //SUCCEEDS OR EQUIVALENT TO
		"\u2280", //DOES NOT PRECEDE
		"\u2281", //DOES NOT SUCCEED
		
		"\u228C", //MULTISET
		"\u228D", //MULTISET MULTIPLICATION
		"\u228E", //MULTISET UNION
		"\u228F", //SQUARE IMAGE OF
		"\u2290", //SQUARE ORIGINAL OF
		"\u2291", //SQUARE IMAGE OF OR EQUAL TO
		"\u2292", //SQUARE ORIGINAL OF OR EQUAL TO
		"\u2293", //SQUARE CAP
		"\u2294", //SQUARE CUP
		"\u2295", //CIRCLED PLUS
		"\u2296", //CIRCLED MINUS
		"\u2297", //CIRCLED TIMES
		"\u2298", //CIRCLED DIVISION SLASH
		"\u2299", //CIRCLED DOT OPERATOR
		"\u229A", //CIRCLED RING OPERATOR
		"\u229B", //CIRCLED ASTERISK OPERATOR
		"\u229C", //CIRCLED EQUALS
		"\u229D", //CIRCLED DASH
		"\u229E", //SQUARED PLUS
		"\u229F", //SQUARED MINUS
		"\u22A0", //SQUARED TIMES
		"\u22A1", //SQUARED DOT OPERATOR
		"\u22A2", //RIGHT TACK
		"\u22A3", //LEFT TACK
		"\u22A4", //DOWN TACK
		"\u22A5", //UP TACK
		"\u22A6", //ASSERTION
		"\u22A7", //MODELS
		"\u22A8", //TRUE
		"\u22A9", //FORCES
		"\u22AA", //TRIPLE VERTICAL BAR RIGHT TURNSTILE
		"\u22AB", //DOUBLE VERTICAL BAR DOUBLE RIGHT TURNSTILE
		"\u22AC", //DOES NOT PROVE
		"\u22AD", //NOT TRUE
		"\u22AE", //DOES NOT FORCE
		"\u22AF", //NEGATED DOUBLE VERTICAL BAR DOUBLE RIGHT TURNSTILE
		"\u22B0", //PRECEDES UNDER RELATION
		"\u22B1", //SUCCEEDS UNDER RELATION
		"\u22B2", //NORMAL SUBGROUP OF
		"\u22B3", //CONTAINS AS NORMAL SUBGROUP
		"\u22B4", //NORMAL SUBGROUP OF OR EQUAL TO
		"\u22B5", //CONTAINS AS NORMAL SUBGROUP OR EQUAL TO
		"\u22B6", //ORIGINAL OF
		"\u22B7", //IMAGE OF
		"\u22B8", //MULTIMAP
		"\u22B9", //HERMITIAN CONJUGATE MATRIX
		"\u22BA", //INTERCALATE
		
		"\u22BE", //RIGHT ANGLE WITH ARC
		"\u22BF", //RIGHT TRIANGLE
		
		"\u22C4", //DIAMOND OPERATOR
		"\u22C5", //DOT OPERATOR
		"\u22C6", //STAR OPERATOR
		"\u22C7", //DIVISION TIMES
		"\u22C8", //BOWTIE
		"\u22C9", //LEFT NORMAL FACTOR SEMIDIRECT PRODUCT
		"\u22CA", //RIGHT NORMAL FACTOR SEMIDIRECT PRODUCT
		"\u22CB", //LEFT SEMIDIRECT PRODUCT
		"\u22CC", //RIGHT SEMIDIRECT PRODUCT
		"\u22CD", //REVERSED TILDE EQUALS
		"\u22CE", //CURLY LOGICAL OR
		"\u22CF", //CURLY LOGICAL AND
		"\u22D0", //DOUBLE SUBSET
		"\u22D1", //DOUBLE SUPERSET
		"\u22D2", //DOUBLE INTERSECTION
		"\u22D3", //DOUBLE UNION
		"\u22D4", //PITCHFORK
		"\u22D5", //EQUAL AND PARALLEL TO
		"\u22D6", //LESS-THAN WITH DOT
		"\u22D7", //GREATER-THAN WITH DOT
		"\u22D8", //VERY MUCH LESS-THAN
		"\u22D9", //VERY MUCH GREATER-THAN
		"\u22DA", //LESS-THAN EQUAL TO OR GREATER-THAN
		"\u22DB", //GREATER-THAN EQUAL TO OR LESS-THAN
		"\u22DC", //EQUAL TO OR LESS-THAN
		"\u22DD", //EQUAL TO OR GREATER-THAN
		"\u22DE", //EQUAL TO OR PRECEDES
		"\u22DF", //EQUAL TO OR SUCCEEDS
		"\u22E0", //DOES NOT PRECEDE OR EQUAL
		"\u22E1", //DOES NOT SUCCEED OR EQUAL
		"\u22E2", //NOT SQUARE IMAGE OF OR EQUAL TO
		"\u22E3", //NOT SQUARE ORIGINAL OF OR EQUAL TO
		"\u22E4", //SQUARE IMAGE OF OR NOT EQUAL TO
		"\u22E5", //SQUARE ORIGINAL OF OR NOT EQUAL TO
		"\u22E6", //LESS-THAN BUT NOT EQUIVALENT TO
		"\u22E7", //GREATER-THAN BUT NOT EQUIVALENT TO
		"\u22E8", //PRECEDES BUT NOT EQUIVALENT TO
		"\u22E9", //SUCCEEDS BUT NOT EQUIVALENT TO
		"\u22EA", //NOT NORMAL SUBGROUP OF
		"\u22EB", //DOES NOT CONTAIN AS NORMAL SUBGROUP
		"\u22EC", //NOT NORMAL SUBGROUP OF OR EQUAL TO
		"\u22ED", //DOES NOT CONTAIN AS NORMAL SUBGROUP OR EQUAL
		
		
		
		"\u22EE", //VERTICAL ELLIPSIS
		"\u22EF", //MIDLINE HORIZONTAL ELLIPSIS
		"\u22F0", //UP RIGHT DIAGONAL ELLIPSIS
		"\u22F1", //DOWN RIGHT DIAGONAL ELLIPSIS
*/
};
	
	

	public final static String [] basic_arrows = {

		"\u2190",      //LEFTWARDS ARROW
		"\u2192",      //RIGHTWARDS ARROW
		"\u2194",      //LEFT RIGHT ARROW

		"\u2191",      //UPWARDS ARROW
		"\u2193",      //DOWNWARDS ARROW
		"\u2195",      //UP DOWN ARROW

		"\u2196",      //NORTH WEST ARROW
		"\u2197",      //NORTH EAST ARROW
		"\u2198",      //SOUTH EAST ARROW
		"\u2199",      //SOUTH WEST ARROW

		"\u21D0",      //LEFTWARDS DOUBLE ARROW
		"\u21D1",      //UPWARDS DOUBLE ARROW
		"\u21D2",      //RIGHTWARDS DOUBLE ARROW
		"\u21D3",      //DOWNWARDS DOUBLE ARROW
		"\u21D4",      //LEFT RIGHT DOUBLE ARROW
		"\u21D5",      //UP DOWN DOUBLE ARROW
		"\u21D6",      //NORTH WEST DOUBLE ARROW
		"\u21D7",      //NORTH EAST DOUBLE ARROW
		"\u21D8",      //SOUTH EAST DOUBLE ARROW
		"\u21D9",      //SOUTH WEST DOUBLE ARROW
	};


	public final static String [] other_arrows = {	


		"\u219A",      //LEFTWARDS ARROW WITH STROKE
		"\u219B",      //RIGHTWARDS ARROW WITH STROKE
		"\u219C",      //LEFTWARDS WAVE ARROW
		"\u219D",      //RIGHTWARDS WAVE ARROW
		"\u219E",      //LEFTWARDS TWO HEADED ARROW
		"\u219F",      //UPWARDS TWO HEADED ARROW
		"\u21A0",      //RIGHTWARDS TWO HEADED ARROW
		"\u21A1",      //DOWNWARDS TWO HEADED ARROW
		"\u21A2",      //LEFTWARDS ARROW WITH TAIL
		"\u21A3",      //RIGHTWARDS ARROW WITH TAIL
		"\u21A4",      //LEFTWARDS ARROW FROM BAR
		"\u21A5",      //UPWARDS ARROW FROM BAR
		"\u21A6",      //RIGHTWARDS ARROW FROM BAR
		"\u21A7",      //DOWNWARDS ARROW FROM BAR
		"\u21A8",      //UP DOWN ARROW WITH BASE
		"\u21A9",      //LEFTWARDS ARROW WITH HOOK
		"\u21AA",      //RIGHTWARDS ARROW WITH HOOK
		"\u21AB",      //LEFTWARDS ARROW WITH LOOP
		"\u21AC",      //RIGHTWARDS ARROW WITH LOOP
		"\u21AD",      //LEFT RIGHT WAVE ARROW
		"\u21AE",      //LEFT RIGHT ARROW WITH STROKE
		"\u21AF",      //DOWNWARDS ZIGZAG ARROW
		"\u21B0",      //UPWARDS ARROW WITH TIP LEFTWARDS
		"\u21B1",      //UPWARDS ARROW WITH TIP RIGHTWARDS
		"\u21B2",      //DOWNWARDS ARROW WITH TIP LEFTWARDS
		"\u21B3",      //DOWNWARDS ARROW WITH TIP RIGHTWARDS
		"\u21B4",      //RIGHTWARDS ARROW WITH CORNER DOWNWARDS
		"\u21B5",      //DOWNWARDS ARROW WITH CORNER LEFTWARDS
		"\u21B6",      //ANTICLOCKWISE TOP SEMICIRCLE ARROW
		"\u21B7",      //CLOCKWISE TOP SEMICIRCLE ARROW
		"\u21B8",      //NORTH WEST ARROW TO LONG BAR
		"\u21B9",      //LEFTWARDS ARROW TO BAR OVER RIGHTWARDS ARROW TO BAR
		"\u21BA",      //ANTICLOCKWISE OPEN CIRCLE ARROW
		"\u21BB",      //CLOCKWISE OPEN CIRCLE ARROW
		"\u21BC",      //LEFTWARDS HARPOON WITH BARB UPWARDS
		"\u21BD",      //LEFTWARDS HARPOON WITH BARB DOWNWARDS
		"\u21BE",      //UPWARDS HARPOON WITH BARB RIGHTWARDS
		"\u21BF",      //UPWARDS HARPOON WITH BARB LEFTWARDS
		"\u21C0",      //RIGHTWARDS HARPOON WITH BARB UPWARDS
		"\u21C1",      //RIGHTWARDS HARPOON WITH BARB DOWNWARDS
		"\u21C2",      //DOWNWARDS HARPOON WITH BARB RIGHTWARDS
		"\u21C3",      //DOWNWARDS HARPOON WITH BARB LEFTWARDS
		"\u21C4",      //RIGHTWARDS ARROW OVER LEFTWARDS ARROW
		"\u21C5",      //UPWARDS ARROW LEFTWARDS OF DOWNWARDS ARROW
		"\u21C6",      //LEFTWARDS ARROW OVER RIGHTWARDS ARROW
		"\u21C7",      //LEFTWARDS PAIRED ARROWS
		"\u21C8",      //UPWARDS PAIRED ARROWS
		"\u21C9",      //RIGHTWARDS PAIRED ARROWS
		"\u21CA",      //DOWNWARDS PAIRED ARROWS
		"\u21CB",      //LEFTWARDS HARPOON OVER RIGHTWARDS HARPOON
		"\u21CC",      //RIGHTWARDS HARPOON OVER LEFTWARDS HARPOON
		"\u21CD",      //LEFTWARDS DOUBLE ARROW WITH STROKE
		"\u21CE",      //LEFT RIGHT DOUBLE ARROW WITH STROKE
		"\u21CF",      //RIGHTWARDS DOUBLE ARROW WITH STROKE
		
		"\u21DA",      //LEFTWARDS TRIPLE ARROW
		"\u21DB",      //RIGHTWARDS TRIPLE ARROW
		"\u21DC",      //LEFTWARDS SQUIGGLE ARROW
		"\u21DD",      //RIGHTWARDS SQUIGGLE ARROW
		"\u21DE",      //UPWARDS ARROW WITH DOUBLE STROKE
		"\u21DF",      //DOWNWARDS ARROW WITH DOUBLE STROKE
		"\u21E0",      //LEFTWARDS DASHED ARROW
		"\u21E1",      //UPWARDS DASHED ARROW
		"\u21E2",      //RIGHTWARDS DASHED ARROW
		"\u21E3",      //DOWNWARDS DASHED ARROW
		"\u21E4",      //LEFTWARDS ARROW TO BAR
		"\u21E5",      //RIGHTWARDS ARROW TO BAR
		"\u21E6",      //LEFTWARDS WHITE ARROW
		"\u21E7",      //UPWARDS WHITE ARROW
		"\u21E8",      //RIGHTWARDS WHITE ARROW
		"\u21E9",      //DOWNWARDS WHITE ARROW
		"\u21EA",      //UPWARDS WHITE ARROW FROM BAR
		"\u21EB",      //UPWARDS WHITE ARROW ON PEDESTAL
		"\u21EC",      //UPWARDS WHITE ARROW ON PEDESTAL WITH HORIZONTAL BAR
		"\u21ED",      //UPWARDS WHITE ARROW ON PEDESTAL WITH VERTICAL BAR
		"\u21EE",      //UPWARDS WHITE DOUBLE ARROW
		"\u21EF",      //UPWARDS WHITE DOUBLE ARROW ON PEDESTAL
		"\u21F0",      //RIGHTWARDS WHITE ARROW FROM WALL
		"\u21F1",      //NORTH WEST ARROW TO CORNER
		"\u21F2",      //SOUTH EAST ARROW TO CORNER
		"\u21F3",      //UP DOWN WHITE ARROW

	};

	
	
	public final static String [] pointers = {
	
	"\u261A" ,    //BLACK LEFT POINTING INDEX
	"\u261B" ,    //BLACK RIGHT POINTING INDEX
	"\u261C" ,    //WHITE LEFT POINTING INDEX
	"\u261D" ,    //WHITE UP POINTING INDEX
	"\u261E" ,    //WHITE RIGHT POINTING INDEX
	"\u261F" ,    //WHITE DOWN POINTING INDEX
	
	};
	
	
	
	
	
	
	public final static String [] misc = {

		
		"\u2639" ,    //WHITE FROWNING FACE
		"\u263A" ,    //WHITE SMILING FACE
		"\u263B" ,    //BLACK SMILING FACE
		
		"\u260E" ,    //BLACK TELEPHONE
		"\u260F" ,    //WHITE TELEPHONE
		"\u2706",    //TELEPHONE LOCATION SIGN
		
		"\u2610" ,    //BALLOT BOX
		"\u2611" ,    //BALLOT BOX WITH CHECK
		"\u2612" ,    //BALLOT BOX WITH X
		"\u2613" ,    //SALTIRE
		"\u2619" ,    //REVERSED ROTATED FLORAL HEART BULLET
	
		
		"\u2620" ,    //SKULL AND CROSSBONES
		"\u2621" ,    //CAUTION SIGN
		"\u2622" ,    //RADIOACTIVE SIGN
		"\u2623" ,    //BIOHAZARD SIGN
		"\u2624" ,    //CADUCEUS
		"\u2625" ,    //ANKH
		
		"\u2670" ,    //WEST SYRIAC CROSS
		"\u2671" ,     //EAST SYRIAC CROSS
		
		"\u2626" ,    //ORTHODOX CROSS
		"\u2627" ,    //CHI RHO
		"\u2628" ,    //CROSS OF LORRAINE
		"\u2629" ,    //CROSS OF JERUSALEM
		"\u262A" ,    //STAR AND CRESCENT
		"\u262B" ,    //FARSI SYMBOL
		"\u262C" ,    //ADI SHAKTI
		"\u262D" ,    //HAMMER AND SICKLE
		"\u262E" ,    //PEACE SYMBOL
		"\u262F" ,    //YIN YANG
		"\u2630" ,    //TRIGRAM FOR HEAVEN
		"\u2631" ,    //TRIGRAM FOR LAKE
		"\u2632" ,    //TRIGRAM FOR FIRE
		"\u2633" ,    //TRIGRAM FOR THUNDER
		"\u2634" ,    //TRIGRAM FOR WIND
		"\u2635" ,    //TRIGRAM FOR WATER
		"\u2636" ,    //TRIGRAM FOR MOUNTAIN
		"\u2637" ,    //TRIGRAM FOR EARTH
		"\u2638" ,    //WHEEL OF DHARMA
		
	
		
	};
	
	

	public final static String [] weather_astrology = {	

		"\u263C" ,    //WHITE SUN WITH RAYS
		"\u2600" ,    //BLACK SUN WITH RAYS
		"\u2601" ,    //CLOUD
		"\u2602" ,    //UMBRELLA
		"\u2603" ,    //SNOWMAN
		"\u2604" ,    //COMET
		"\u2605" ,    //BLACK STAR
		"\u2606" ,    //WHITE STAR
		"\u2607" ,    //LIGHTNING
		"\u2608" ,    //THUNDERSTORM
		"\u2609" ,    //SUN
		"\u260A" ,    //ASCENDING NODE
		"\u260B" ,    //DESCENDING NODE
		"\u260C" ,    //CONJUNCTION
		"\u260D" ,    //OPPOSITION

		"\u263D" ,    //FIRST QUARTER MOON
		"\u263E" ,    //LAST QUARTER MOON
		"\u263F" ,    //MERCURY
		"\u2640" ,    //FEMALE SIGN
		"\u2641" ,    //EARTH
		"\u2642" ,    //MALE SIGN
		"\u2643" ,    //JUPITER
		"\u2644" ,    //SATURN
		"\u2645" ,    //URANUS
		"\u2646" ,    //NEPTUNE
		"\u2647" ,    //PLUTO
		"\u2648" ,    //ARIES
		"\u2649" ,    //TAURUS
		"\u264A" ,    //GEMINI
		"\u264B" ,    //CANCER
		"\u264C" ,    //LEO
		"\u264D" ,    //VIRGO
		"\u264E" ,    //LIBRA
		"\u264F" ,    //SCORPIUS
		"\u2650" ,    //SAGITTARIUS
		"\u2651" ,    //CAPRICORN
		"\u2652" ,    //AQUARIUS
		"\u2653"     //PISCES

	};


	public final static String [] games_music = {


		"\u2654" ,    //WHITE CHESS KING
		"\u2655" ,    //WHITE CHESS QUEEN
		"\u2656" ,    //WHITE CHESS ROOK
		"\u2657" ,    //WHITE CHESS BISHOP
		"\u2658" ,    //WHITE CHESS KNIGHT
		"\u2659" ,    //WHITE CHESS PAWN
		"\u265A" ,    //BLACK CHESS KING
		"\u265B" ,    //BLACK CHESS QUEEN
		"\u265C" ,    //BLACK CHESS ROOK
		"\u265D" ,    //BLACK CHESS BISHOP
		"\u265E" ,    //BLACK CHESS KNIGHT
		"\u265F" ,    //BLACK CHESS PAWN
		"\u2660" ,    //BLACK SPADE SUIT
		"\u2661" ,    //WHITE HEART SUIT
		"\u2662" ,    //WHITE DIAMOND SUIT
		"\u2663" ,    //BLACK CLUB SUIT
		"\u2664" ,    //WHITE SPADE SUIT
		"\u2665" ,    //BLACK HEART SUIT
		"\u2666" ,    //BLACK DIAMOND SUIT
		"\u2667" ,    //WHITE CLUB SUIT
		"\u2668" ,    //HOT SPRINGS
		"\u2669" ,    //QUARTER NOTE
		"\u266A" ,    //EIGHTH NOTE
		"\u266B" ,    //BEAMED EIGHTH NOTES
		"\u266C" ,    //BEAMED SIXTEENTH NOTES
		"\u266D" ,    //MUSIC FLAT SIGN
		"\u266E" ,    //MUSIC NATURAL SIGN
		"\u266F" ,    //MUSIC SHARP SIGN
	

	};


	public final static String [] writing = {

		"\u2701",    //UPPER BLADE SCISSORS
		"\u2702",    //BLACK SCISSORS
		"\u2703",    //LOWER BLADE SCISSORS
		"\u2704",    //WHITE SCISSORS
		
		"\u2707",    //TAPE DRIVE
		"\u2708",    //AIRPLANE
		"\u2709",    //ENVELOPE
		"\u270C",    //VICTORY HAND
		"\u270D",    //WRITING HAND
		"\u270E",    //LOWER RIGHT PENCIL
		"\u270F",    //PENCIL
		"\u2710",    //UPPER RIGHT PENCIL
		"\u2711",    //WHITE NIB
		"\u2712"    //BLACK NIB
	};	



	public final static String [] bullets = {
		"\u2713",    //CHECK MARK
		"\u2714",    //HEAVY CHECK MARK
		"\u2715",    //MULTIPLICATION X
		"\u2716",    //HEAVY MULTIPLICATION X
		"\u2717",    //BALLOT X
		"\u2718",    //HEAVY BALLOT X
		"\u2719",    //OUTLINED GREEK CROSS
		"\u271A",    //HEAVY GREEK CROSS
		"\u271B",    //OPEN CENTRE CROSS
		"\u271C",    //HEAVY OPEN CENTRE CROSS
		"\u271D",    //LATIN CROSS
		"\u271E",    //SHADOWED WHITE LATIN CROSS
		"\u271F",    //OUTLINED LATIN CROSS
		"\u2720",    //MALTESE CROSS
		"\u2721",    //STAR OF DAVID
		"\u2722",    //FOUR TEARDROP-SPOKED ASTERISK
		"\u2723",    //FOUR BALLOON-SPOKED ASTERISK
		"\u2724",    //HEAVY FOUR BALLOON-SPOKED ASTERISK
		"\u2725",    //FOUR CLUB-SPOKED ASTERISK
		"\u2726",    //BLACK FOUR POINTED STAR
		"\u2727",    //WHITE FOUR POINTED STAR
		"\u2729",    //STRESS OUTLINED WHITE STAR
		"\u272A",    //CIRCLED WHITE STAR
		"\u272B",    //OPEN CENTRE BLACK STAR
		"\u272C",    //BLACK CENTRE WHITE STAR
		"\u272D",    //OUTLINED BLACK STAR
		"\u272E",    //HEAVY OUTLINED BLACK STAR
		"\u272F",    //PINWHEEL STAR
		"\u2730",    //SHADOWED WHITE STAR
		"\u2731",    //HEAVY ASTERISK
		"\u2732",    //OPEN CENTRE ASTERISK
		"\u2733",    //EIGHT SPOKED ASTERISK
		"\u2734",    //EIGHT POINTED BLACK STAR
		"\u2735",    //EIGHT POINTED PINWHEEL STAR
		"\u2736",    //SIX POINTED BLACK STAR
		"\u2737",    //EIGHT POINTED RECTILINEAR BLACK STAR
		"\u2738",    //HEAVY EIGHT POINTED RECTILINEAR BLACK STAR
		"\u2739",    //TWELVE POINTED BLACK STAR
		"\u273A",    //SIXTEEN POINTED ASTERISK
		"\u273B",    //TEARDROP-SPOKED ASTERISK
		"\u273C",    //OPEN CENTRE TEARDROP-SPOKED ASTERISK
		"\u273D",    //HEAVY TEARDROP-SPOKED ASTERISK
		"\u273E",    //SIX PETALLED BLACK AND WHITE FLORETTE
		"\u273F",    //BLACK FLORETTE
		"\u2740",    //WHITE FLORETTE
		"\u2741",    //EIGHT PETALLED OUTLINED BLACK FLORETTE
		"\u2742",    //CIRCLED OPEN CENTRE EIGHT POINTED STAR
		"\u2743",    //HEAVY TEARDROP-SPOKED PINWHEEL ASTERISK
		"\u2744",    //SNOWFLAKE
		"\u2745",    //TIGHT TRIFOLIATE SNOWFLAKE
		"\u2746",    //HEAVY CHEVRON SNOWFLAKE
		"\u2747",    //SPARKLE
		"\u2748",    //HEAVY SPARKLE
		"\u2749",    //BALLOON-SPOKED ASTERISK
		"\u274A",    //EIGHT TEARDROP-SPOKED PROPELLER ASTERISK
		"\u274B",    //HEAVY EIGHT TEARDROP-SPOKED PROPELLER ASTERISK
		"\u274D",    //SHADOWED WHITE CIRCLE
		"\u274F",    //LOWER RIGHT DROP-SHADOWED WHITE SQUARE
		"\u2750",    //UPPER RIGHT DROP-SHADOWED WHITE SQUARE
		"\u2751",    //LOWER RIGHT SHADOWED WHITE SQUARE
		"\u2752",    //UPPER RIGHT SHADOWED WHITE SQUARE
		"\u2756",    //BLACK DIAMOND MINUS WHITE X

	};



	public final static String [] otherdingbats = {	

		"\u2758",    //LIGHT VERTICAL BAR
		"\u2759",    //MEDIUM VERTICAL BAR
		"\u275A",    //HEAVY VERTICAL BAR
		"\u275B",    //HEAVY SINGLE TURNED COMMA QUOTATION MARK ORNAMENT
		"\u275C",    //HEAVY SINGLE COMMA QUOTATION MARK ORNAMENT
		"\u275D",    //HEAVY DOUBLE TURNED COMMA QUOTATION MARK ORNAMENT
		"\u275E",    //HEAVY DOUBLE COMMA QUOTATION MARK ORNAMENT
		"\u2761",    //CURVED STEM PARAGRAPH SIGN ORNAMENT
		"\u2762",    //HEAVY EXCLAMATION MARK ORNAMENT
		"\u2763",    //HEAVY HEART EXCLAMATION MARK ORNAMENT
		"\u2764",    //HEAVY BLACK HEART
		"\u2765",    //ROTATED HEAVY BLACK HEART BULLET
		"\u2766",    //FLORAL HEART
		"\u2767",    //ROTATED FLORAL HEART BULLET
		"\u2776",    //DINGBAT NEGATIVE CIRCLED DIGIT ONE
		"\u2777",    //DINGBAT NEGATIVE CIRCLED DIGIT TWO
		"\u2778",    //DINGBAT NEGATIVE CIRCLED DIGIT THREE
		"\u2779",    //DINGBAT NEGATIVE CIRCLED DIGIT FOUR
		"\u277A",    //DINGBAT NEGATIVE CIRCLED DIGIT FIVE
		"\u277B",    //DINGBAT NEGATIVE CIRCLED DIGIT SIX
		"\u277C",    //DINGBAT NEGATIVE CIRCLED DIGIT SEVEN
		"\u277D",    //DINGBAT NEGATIVE CIRCLED DIGIT EIGHT
		"\u277E",    //DINGBAT NEGATIVE CIRCLED DIGIT NINE
		"\u277F",    //DINGBAT NEGATIVE CIRCLED NUMBER TEN
		"\u2780",    //DINGBAT CIRCLED SANS-SERIF DIGIT ONE
		"\u2781",    //DINGBAT CIRCLED SANS-SERIF DIGIT TWO
		"\u2782",    //DINGBAT CIRCLED SANS-SERIF DIGIT THREE
		"\u2783",    //DINGBAT CIRCLED SANS-SERIF DIGIT FOUR
		"\u2784",    //DINGBAT CIRCLED SANS-SERIF DIGIT FIVE
		"\u2785",    //DINGBAT CIRCLED SANS-SERIF DIGIT SIX
		"\u2786",    //DINGBAT CIRCLED SANS-SERIF DIGIT SEVEN
		"\u2787",    //DINGBAT CIRCLED SANS-SERIF DIGIT EIGHT
		"\u2788",    //DINGBAT CIRCLED SANS-SERIF DIGIT NINE
		"\u2789",    //DINGBAT CIRCLED SANS-SERIF NUMBER TEN
		"\u278A",    //DINGBAT NEGATIVE CIRCLED SANS-SERIF DIGIT ONE
		"\u278B",    //DINGBAT NEGATIVE CIRCLED SANS-SERIF DIGIT TWO
		"\u278C",    //DINGBAT NEGATIVE CIRCLED SANS-SERIF DIGIT THREE
		"\u278D",    //DINGBAT NEGATIVE CIRCLED SANS-SERIF DIGIT FOUR
		"\u278E",    //DINGBAT NEGATIVE CIRCLED SANS-SERIF DIGIT FIVE
		"\u278F",    //DINGBAT NEGATIVE CIRCLED SANS-SERIF DIGIT SIX
		"\u2790",    //DINGBAT NEGATIVE CIRCLED SANS-SERIF DIGIT SEVEN
		"\u2791",    //DINGBAT NEGATIVE CIRCLED SANS-SERIF DIGIT EIGHT
		"\u2792",    //DINGBAT NEGATIVE CIRCLED SANS-SERIF DIGIT NINE
		"\u2793",    //DINGBAT NEGATIVE CIRCLED SANS-SERIF NUMBER TEN
		"\u2794",    //HEAVY WIDE-HEADED RIGHTWARDS ARROW
		"\u2798",    //HEAVY SOUTH EAST ARROW
		"\u2799",    //HEAVY RIGHTWARDS ARROW
		"\u279A",    //HEAVY NORTH EAST ARROW
		"\u279B",    //DRAFTING POINT RIGHTWARDS ARROW
		"\u279C",    //HEAVY ROUND-TIPPED RIGHTWARDS ARROW
		"\u279D",    //TRIANGLE-HEADED RIGHTWARDS ARROW
		"\u279E",    //HEAVY TRIANGLE-HEADED RIGHTWARDS ARROW
		"\u279F",    //DASHED TRIANGLE-HEADED RIGHTWARDS ARROW
		"\u27A0",    //HEAVY DASHED TRIANGLE-HEADED RIGHTWARDS ARROW
		"\u27A1",    //BLACK RIGHTWARDS ARROW
		"\u27A2",    //THREE-D TOP-LIGHTED RIGHTWARDS ARROWHEAD
		"\u27A3",    //THREE-D BOTTOM-LIGHTED RIGHTWARDS ARROWHEAD
		"\u27A4",    //BLACK RIGHTWARDS ARROWHEAD
		"\u27A5",    //HEAVY BLACK CURVED DOWNWARDS AND RIGHTWARDS ARROW
		"\u27A6",    //HEAVY BLACK CURVED UPWARDS AND RIGHTWARDS ARROW
		"\u27A7",    //SQUAT BLACK RIGHTWARDS ARROW
		"\u27A8",    //HEAVY CONCAVE-POINTED BLACK RIGHTWARDS ARROW
		"\u27A9",    //RIGHT-SHADED WHITE RIGHTWARDS ARROW
		"\u27AA",    //LEFT-SHADED WHITE RIGHTWARDS ARROW
		"\u27AB",    //BACK-TILTED SHADOWED WHITE RIGHTWARDS ARROW
		"\u27AC",    //FRONT-TILTED SHADOWED WHITE RIGHTWARDS ARROW
		"\u27AD",    //HEAVY LOWER RIGHT-SHADOWED WHITE RIGHTWARDS ARROW
		"\u27AE",    //HEAVY UPPER RIGHT-SHADOWED WHITE RIGHTWARDS ARROW
		"\u27AF",    //NOTCHED LOWER RIGHT-SHADOWED WHITE RIGHTWARDS ARROW
		"\u27B1",    //NOTCHED UPPER RIGHT-SHADOWED WHITE RIGHTWARDS ARROW
		"\u27B2",    //CIRCLED HEAVY WHITE RIGHTWARDS ARROW
		"\u27B3",    //WHITE-FEATHERED RIGHTWARDS ARROW
		"\u27B4",    //BLACK-FEATHERED SOUTH EAST ARROW
		"\u27B5",    //BLACK-FEATHERED RIGHTWARDS ARROW
		"\u27B6",    //BLACK-FEATHERED NORTH EAST ARROW
		"\u27B7",    //HEAVY BLACK-FEATHERED SOUTH EAST ARROW
		"\u27B8",    //HEAVY BLACK-FEATHERED RIGHTWARDS ARROW
		"\u27B9",    //HEAVY BLACK-FEATHERED NORTH EAST ARROW
		"\u27BA",    //TEARDROP-BARBED RIGHTWARDS ARROW
		"\u27BB",    //HEAVY TEARDROP-SHANKED RIGHTWARDS ARROW
		"\u27BC",    //WEDGE-TAILED RIGHTWARDS ARROW
		"\u27BD",    //HEAVY WEDGE-TAILED RIGHTWARDS ARROW
		"\u27BE"     //OPEN-OUTLINED RIGHTWARDS ARROW

	};

	public final static String [] geometricShapes = {	

		"\u25A0" ,      //BLACK SQUARE
		"\u25A1" ,      //WHITE SQUARE
		"\u25A2" ,      //WHITE SQUARE WITH ROUNDED CORNERS
		"\u25A3" ,      //WHITE SQUARE CONTAINING BLACK SMALL SQUARE
		"\u25A4" ,      //SQUARE WITH HORIZONTAL FILL
		"\u25A5" ,      //SQUARE WITH VERTICAL FILL
		"\u25A6" ,      //SQUARE WITH ORTHOGONAL CROSSHATCH FILL
		"\u25A7" ,      //SQUARE WITH UPPER LEFT TO LOWER RIGHT FILL
		"\u25A8" ,      //SQUARE WITH UPPER RIGHT TO LOWER LEFT FILL
		"\u25A9" ,      //SQUARE WITH DIAGONAL CROSSHATCH FILL
		"\u25AA" ,      //BLACK SMALL SQUARE
		"\u25AB" ,      //WHITE SMALL SQUARE
		"\u25AC" ,      //BLACK RECTANGLE
		"\u25AD" ,      //WHITE RECTANGLE
		"\u25AE" ,      //BLACK VERTICAL RECTANGLE
		"\u25AF" ,      //WHITE VERTICAL RECTANGLE
		"\u25B0" ,      //BLACK PARALLELOGRAM
		"\u25B1" ,      //WHITE PARALLELOGRAM
		"\u25B2" ,      //BLACK UP-POINTING TRIANGLE
		"\u25B3" ,      //WHITE UP-POINTING TRIANGLE
		"\u25B4" ,      //BLACK UP-POINTING SMALL TRIANGLE
		"\u25B5" ,      //WHITE UP-POINTING SMALL TRIANGLE
		"\u25B6" ,      //BLACK RIGHT-POINTING TRIANGLE
		"\u25B7" ,      //WHITE RIGHT-POINTING TRIANGLE
		"\u25B8" ,      //BLACK RIGHT-POINTING SMALL TRIANGLE
		"\u25B9" ,      //WHITE RIGHT-POINTING SMALL TRIANGLE
		"\u25BA" ,      //BLACK RIGHT-POINTING POINTER
		"\u25BB" ,      //WHITE RIGHT-POINTING POINTER
		"\u25BC" ,      //BLACK DOWN-POINTING TRIANGLE
		"\u25BD" ,      //WHITE DOWN-POINTING TRIANGLE
		"\u25BE" ,      //BLACK DOWN-POINTING SMALL TRIANGLE
		"\u25BF" ,      //WHITE DOWN-POINTING SMALL TRIANGLE
		"\u25C0" ,      //BLACK LEFT-POINTING TRIANGLE
		"\u25C1" ,      //WHITE LEFT-POINTING TRIANGLE
		"\u25C2" ,      //BLACK LEFT-POINTING SMALL TRIANGLE
		"\u25C3" ,      //WHITE LEFT-POINTING SMALL TRIANGLE
		"\u25C4" ,      //BLACK LEFT-POINTING POINTER
		"\u25C5" ,      //WHITE LEFT-POINTING POINTER
		"\u25C6" ,      //BLACK DIAMOND
		"\u25C7" ,      //WHITE DIAMOND
		"\u25C8" ,      //WHITE DIAMOND CONTAINING BLACK SMALL DIAMOND
		"\u25C9" ,      //FISHEYE
		"\u25CA" ,      //LOZENGE
		"\u25CB" ,      //WHITE CIRCLE
		"\u25CC" ,      //DOTTED CIRCLE
		"\u25CD" ,      //CIRCLE WITH VERTICAL FILL
		"\u25CE" ,      //BULLSEYE
		"\u25CF" ,      //BLACK CIRCLE
		"\u25D0" ,      //CIRCLE WITH LEFT HALF BLACK
		"\u25D1" ,      //CIRCLE WITH RIGHT HALF BLACK
		"\u25D2" ,      //CIRCLE WITH LOWER HALF BLACK
		"\u25D3" ,      //CIRCLE WITH UPPER HALF BLACK
		"\u25D4" ,      //CIRCLE WITH UPPER RIGHT QUADRANT BLACK
		"\u25D5" ,      //CIRCLE WITH ALL BUT UPPER LEFT QUADRANT BLACK
		"\u25D6" ,      //LEFT HALF BLACK CIRCLE
		"\u25D7" ,      //RIGHT HALF BLACK CIRCLE
		"\u25D8" ,      //INVERSE BULLET
		"\u25D9" ,      //INVERSE WHITE CIRCLE
		"\u25DA" ,      //UPPER HALF INVERSE WHITE CIRCLE
		"\u25DB" ,      //LOWER HALF INVERSE WHITE CIRCLE
		"\u25DC" ,      //UPPER LEFT QUADRANT CIRCULAR ARC
		"\u25DD" ,      //UPPER RIGHT QUADRANT CIRCULAR ARC
		"\u25DE" ,      //LOWER RIGHT QUADRANT CIRCULAR ARC
		"\u25DF" ,      //LOWER LEFT QUADRANT CIRCULAR ARC
		"\u25E0" ,      //UPPER HALF CIRCLE
		"\u25E1" ,      //LOWER HALF CIRCLE
		"\u25E2" ,      //BLACK LOWER RIGHT TRIANGLE
		"\u25E3" ,      //BLACK LOWER LEFT TRIANGLE
		"\u25E4" ,      //BLACK UPPER LEFT TRIANGLE
		"\u25E5" ,      //BLACK UPPER RIGHT TRIANGLE
		"\u25E6" ,      //WHITE BULLET
		
		/*
		"\u25E7" ,      //SQUARE WITH LEFT HALF BLACK
		"\u25E8" ,      //SQUARE WITH RIGHT HALF BLACK
		"\u25E9" ,      //SQUARE WITH UPPER LEFT DIAGONAL HALF BLACK
		"\u25EA" ,      //SQUARE WITH LOWER RIGHT DIAGONAL HALF BLACK
		"\u25EB" ,      //WHITE SQUARE WITH VERTICAL BISECTING LINE
		"\u25EC" ,      //WHITE UP-POINTING TRIANGLE WITH DOT
		"\u25ED" ,      //UP-POINTING TRIANGLE WITH LEFT HALF BLACK
		"\u25EE" ,      //UP-POINTING TRIANGLE WITH RIGHT HALF BLACK
		"\u25EF" ,      //LARGE CIRCLE
		"\u25F0" ,      //WHITE SQUARE WITH UPPER LEFT QUADRANT
		"\u25F1" ,      //WHITE SQUARE WITH LOWER LEFT QUADRANT
		"\u25F2" ,      //WHITE SQUARE WITH LOWER RIGHT QUADRANT
		"\u25F3" ,      //WHITE SQUARE WITH UPPER RIGHT QUADRANT
		"\u25F4" ,      //WHITE CIRCLE WITH UPPER LEFT QUADRANT
		"\u25F5" ,      //WHITE CIRCLE WITH LOWER LEFT QUADRANT
		"\u25F6" ,      //WHITE CIRCLE WITH LOWER RIGHT QUADRANT
		"\u25F7" ,      //WHITE CIRCLE WITH UPPER RIGHT QUADRANT
		*/

	};

	public final static String [] letterLikeSymbols = {	

		
		
		"\u2103" ,      //DEGREE CELSIUS
		"\u2109" ,      //DEGREE FAHRENHEIT
		"\u212A" ,      //KELVIN SIGN
		"\u212B" ,      //ANGSTROM SIGN
		
		"\u2107" ,      //EULER CONSTANT
		"\u210E" ,      //PLANCK CONSTANT
		"\u210F" ,      //PLANCK CONSTANT OVER TWO PI
		
		"\u2125" ,      //OUNCE SIGN
		"\u2126" ,      //OHM SIGN
		"\u2127" ,      //INVERTED OHM SIGN
		
		

		
		
		
		"\u2102" ,      //DOUBLE-STRUCK CAPITAL C
		"\u210D" ,      //DOUBLE-STRUCK CAPITAL H
		"\u2115" ,      //DOUBLE-STRUCK CAPITAL N
		"\u2119" ,      //DOUBLE-STRUCK CAPITAL P
		"\u211A" ,      //DOUBLE-STRUCK CAPITAL Q
		"\u211D" ,      //DOUBLE-STRUCK CAPITAL R
		"\u2124" ,      //DOUBLE-STRUCK CAPITAL Z
		
		
		"\u212D" ,      //BLACK-LETTER CAPITAL C
		"\u210C" ,      //BLACK-LETTER CAPITAL H
		"\u2111" ,      //BLACK-LETTER CAPITAL I
		"\u211C" ,      //BLACK-LETTER CAPITAL R
		"\u2128" ,      //BLACK-LETTER CAPITAL Z
		
		
		"\u212F" ,      //SCRIPT SMALL E
		"\u2113" ,      //SCRIPT SMALL L
		"\u2134" ,      //SCRIPT SMALL O
		"\u210A" ,      //SCRIPT SMALL G
		
		
		"\u212C" ,      //SCRIPT CAPITAL B	
		"\u2130" ,      //SCRIPT CAPITAL E
		"\u2131" ,      //SCRIPT CAPITAL F
		"\u210B" ,      //SCRIPT CAPITAL H
		"\u2110" ,      //SCRIPT CAPITAL I
		"\u2112" ,      //SCRIPT CAPITAL L
		"\u2133" ,      //SCRIPT CAPITAL M
		"\u2118" ,      //SCRIPT CAPITAL P
		"\u211B" ,      //SCRIPT CAPITAL R
		
		"\u2132" ,      //TURNED CAPITAL F
		"\u2129" ,      //TURNED GREEK SMALL LETTER IOTA
		"\u213A" ,      //ROTATED CAPITAL Q
		
		/*
		"\u2114" ,      //L B BAR SYMBOL
		"\u2116" ,      //NUMERO SIGN					
		"\u2117" ,      //SOUND RECORDING COPYRIGHT	
		"\u211E" ,      //PRESCRIPTION TAKE
		"\u211F" ,      //RESPONSE
		"\u2120" ,      //SERVICE MARK
		"\u2121" ,      //TELEPHONE SIGN
		"\u2122" ,      //TRADE MARK SIGN
		"\u2123" ,      //VERSICLE		
		"\u2100" ,      //ACCOUNT OF
		"\u2101" ,      //ADDRESSED TO THE SUBJECT	
		"\u2104" ,      //CENTRE LINE SYMBOL
		"\u2105" ,      //CARE OF
		"\u2106" ,      //CADA UNA
		"\u2108" ,      //SCRUPLE
		*/
		
		"\u2135" ,      //ALEF SYMBOL
		"\u2136" ,      //BET SYMBOL
		"\u2137" ,      //GIMEL SYMBOL
		"\u2138" ,      //DALET SYMBOL
		"\u2139" ,      //INFORMATION SOURCE
		"\u212E" ,      //ESTIMATED SYMBOL	

	};


	public final static String [] currency = {	

		"\u20A0" ,     //EURO-CURRENCY SIGN
		"\u20A1" ,     //COLON SIGN
		"\u20A2" ,     //CRUZEIRO SIGN
		"\u20A3" ,     //FRENCH FRANC SIGN
		"\u20A4" ,     //LIRA SIGN
		"\u20A5" ,     //MILL SIGN
		"\u20A6" ,     //NAIRA SIGN
		"\u20A7" ,     //PESETA SIGN
		"\u20A8" ,     //RUPEE SIGN
		"\u20A9" ,     //WON SIGN
		"\u20AA" ,     //NEW SHEQEL SIGN
		"\u20AB" ,     //DONG SIGN
		"\u20AC" ,     //EURO SIGN
		"\u20AD" ,     //KIP SIGN
		"\u20AE" ,     //TUGRIK SIGN
		"\u20AF" ,     //DRACHMA SIGN

	};
	
	
	
	
	private MyTextField inputField;
	
		
	public SymbolTable(Application app, MyTextField inputField) {
		super(app, symbols, -1,6, new Dimension(20,16), SelectionTable.MODE_TEXT);
		setShowGrid(true);
		setHorizontalAlignment(SwingConstants.CENTER);
		setSelectedIndex(1);
		
		this.inputField = inputField;
		
	}

}
