/*
 *  Copyright (C) 2004  The Concord Consortium, Inc.,
 *  10 Concord Crossing, Concord, MA 01742
 *
 *  Web Site: http://www.concord.org
 *  Email: info@concord.org
 *
 *  This library is free software; you can redistribute it and/or
 *  modify it under the terms of the GNU Lesser General Public
 *  License as published by the Free Software Foundation; either
 *  version 2.1 of the License, or (at your option) any later version.
 *
 *  This library is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 *  Lesser General Public License for more details.
 *
 *  You should have received a copy of the GNU Lesser General Public
 *  License along with this library; if not, write to the Free Software
 *  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
 *
 * END LICENSE */

package ccsd.ti;

/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version: 1.3.21
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */


class NativeBridgeJNI {
  public final static native void set_SensorParam_key(long jarg1, String jarg2);
  public final static native String get_SensorParam_key(long jarg1);
  public final static native void set_SensorParam_value(long jarg1, String jarg2);
  public final static native String get_SensorParam_value(long jarg1);
  public final static native long new_SensorParam();
  public final static native void delete_SensorParam(long jarg1);
  public final static native void set_SensorConfig_confirmed(long jarg1, short jarg2);
  public final static native short get_SensorConfig_confirmed(long jarg1);
  public final static native void set_SensorConfig_type(long jarg1, int jarg2);
  public final static native int get_SensorConfig_type(long jarg1);
  public final static native void set_SensorConfig_stepSize(long jarg1, float jarg2);
  public final static native float get_SensorConfig_stepSize(long jarg1);
  public final static native void set_SensorConfig_requiredMax(long jarg1, float jarg2);
  public final static native float get_SensorConfig_requiredMax(long jarg1);
  public final static native void set_SensorConfig_requiredMin(long jarg1, float jarg2);
  public final static native float get_SensorConfig_requiredMin(long jarg1);
  public final static native void set_SensorConfig_port(long jarg1, int jarg2);
  public final static native int get_SensorConfig_port(long jarg1);
  public final static native void set_SensorConfig_portName(long jarg1, String jarg2);
  public final static native String get_SensorConfig_portName(long jarg1);
  public final static native void set_SensorConfig_name(long jarg1, String jarg2);
  public final static native String get_SensorConfig_name(long jarg1);
  public final static native void set_SensorConfig_unitStr(long jarg1, String jarg2);
  public final static native String get_SensorConfig_unitStr(long jarg1);
  public final static native void set_SensorConfig_numSensorParams(long jarg1, int jarg2);
  public final static native int get_SensorConfig_numSensorParams(long jarg1);
  public final static native void set_SensorConfig_sensorParams(long jarg1, long jarg2);
  public final static native long get_SensorConfig_sensorParams(long jarg1);
  public final static native String SensorConfig_getSensorParam(long jarg1, String jarg2);
  public final static native long new_SensorConfig();
  public final static native void delete_SensorConfig(long jarg1);
  public final static native void set_ExperimentConfig_valid(long jarg1, short jarg2);
  public final static native short get_ExperimentConfig_valid(long jarg1);
  public final static native void set_ExperimentConfig_invalidReason(long jarg1, String jarg2);
  public final static native String get_ExperimentConfig_invalidReason(long jarg1);
  public final static native void set_ExperimentConfig_period(long jarg1, float jarg2);
  public final static native float get_ExperimentConfig_period(long jarg1);
  public final static native void set_ExperimentConfig_exactPeriodUChar(long jarg1, short jarg2);
  public final static native short get_ExperimentConfig_exactPeriodUChar(long jarg1);
  public final static native void set_ExperimentConfig_numberOfSamples(long jarg1, int jarg2);
  public final static native int get_ExperimentConfig_numberOfSamples(long jarg1);
  public final static native void set_ExperimentConfig_dataReadPeriod(long jarg1, float jarg2);
  public final static native float get_ExperimentConfig_dataReadPeriod(long jarg1);
  public final static native void set_ExperimentConfig_deviceName(long jarg1, String jarg2);
  public final static native String get_ExperimentConfig_deviceName(long jarg1);
  public final static native void set_ExperimentConfig_numSensorConfigs(long jarg1, int jarg2);
  public final static native int get_ExperimentConfig_numSensorConfigs(long jarg1);
  public final static native void set_ExperimentConfig_sensorConfigArray(long jarg1, long jarg2);
  public final static native long get_ExperimentConfig_sensorConfigArray(long jarg1);
  public final static native long ExperimentConfig_getSensorConfig(long jarg1, int jarg2);
  public final static native void ExperimentConfig_createSensorConfigArray(long jarg1, int jarg2);
  public final static native void ExperimentConfig_setSensorConfig(long jarg1, long jarg2, int jarg3);
  public final static native long new_ExperimentConfig();
  public final static native void delete_ExperimentConfig(long jarg1);
  public final static native int get_QUANTITY_UNKNOWN();
  public final static native int get_QUANTITY_TEMPERATURE();
  public final static native int get_QUANTITY_TEMPERATURE_WAND();
  public final static native int get_QUANTITY_LIGHT();
  public final static native int get_QUANTITY_GAS_PRESSURE();
  public final static native int get_QUANTITY_VOLTAGE();
  public final static native int get_QUANTITY_FORCE();
  public final static native int get_QUANTITY_VELOCITY();
  public final static native int get_QUANTITY_RELATIVE_HUMIDITY();
  public final static native int get_QUANTITY_ACCELERATION();
  public final static native int get_QUANTITY_PULSE_RATE();
  public final static native int get_QUANTITY_CURRENT();
  public final static native int get_QUANTITY_POWER();
  public final static native int get_QUANTITY_ENERGY();
  public final static native int get_QUANTITY_DISTANCE();
  public final static native int get_QUANTITY_SOUND_INTENSITY();
  public final static native int get_QUANTITY_COMPASS();
  public final static native int get_QUANTITY_ANGULAR_VELOCITY();
  public final static native int get_QUANTITY_WIND_SPEED();
  public final static native long SensDev_open(String jarg1);
  public final static native int SensDev_close(long jarg1);
  public final static native int SensDev_isAttached(long jarg1);
  public final static native int SensDev_configure(long jarg1, long jarg2, long jarg3);
  public final static native int SensDev_canDetectSensors(long jarg1);
  public final static native int SensDev_getCurrentConfig(long jarg1, long jarg2);
  public final static native int SensDev_start(long jarg1);
  public final static native int SensDev_stop(long jarg1);
  public final static native int SensDev_read(long jarg1, long jarg2, long jarg3, int jarg4);
  public final static native long getCurrentConfigHelper(long jarg1);
  public final static native long configureHelper(long jarg1, long jarg2);
  public final static native long new_floatArray(int jarg1);
  public final static native void delete_floatArray(long jarg1);
  public final static native float floatArray_getitem(long jarg1, int jarg2);
  public final static native void floatArray_setitem(long jarg1, int jarg2, float jarg3);
}
