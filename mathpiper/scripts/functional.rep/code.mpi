




RuleBase(":",{head,tail});
Rule(":",2,20,IsList(head) And Not IsList(tail) ) Concat(head,{tail});
Rule(":",2,30,IsList(tail) ) Concat({head},tail);
Rule(":",2,10,IsString(tail) And IsString(head)) ConcatStrings(head,tail);
UnFence(":",2);


RuleBase("@",{func,arg});
Rule("@",2,1,IsList(arg)) Apply(func,arg);
Rule("@",2,2,True       ) Apply(func,{arg});

Function("/@",{func,lst}) Apply("MapSingle",{func,lst});


10 # (count'from_IsInteger .. count'to_IsInteger)_(count'from <= count'to) 
   <-- Table(i,i,count'from,count'to,1);
20 # (count'from_IsInteger .. count'to_IsInteger) 
   <-- Table(i,i,count'from,count'to,-1);


LocalSymbols(NFunction'Numberize)
[
NFunction(new'name_IsString, old'name_IsString, arg'list_IsList) <-- [
	MacroRuleBase(new'name, arg'list);
	MacroRule(new'name, Length(arg'list), 0,	
		UnList({IsNumericList, arg'list})
	)

		 
			NFunction'Numberize(UnList({Atom("@"), old'name, arg'list}));
			

];



10 # NFunction'Numberize(x_IsNumber) <-- x;
20 # NFunction'Numberize(x_IsAtom) <-- Undefined;


];	

