package geogebra3D.euclidian3D.plots;

import java.nio.FloatBuffer;
import java.util.Iterator;
import java.util.LinkedList;

import geogebra.kernel.GeoFunctionNVar;
import geogebra3D.euclidian3D.TriList;

/**
 * An element in MarchingCubes.
 * 
 * @author André Eriksson
 */

class MCElement {

	/** parameter values at the start and end of the segment */
	float[][] cornerVals = new float[3][2];

	/** signs at corners */
	int signs;

	/** midpoints of the edges */
	float[][] edges = new float[12][3];
	
	public MCElement(int signs, float[][] c) {
		this.signs = signs;
		
		cornerVals=new float[3][2];
		cornerVals[0][0]=c[0][0];
		cornerVals[0][1]=c[0][1];
		cornerVals[1][0]=c[1][0];
		cornerVals[1][1]=c[1][1];
		cornerVals[2][0]=c[2][0];
		cornerVals[2][1]=c[2][1];

		edges[0][0]=(c[0][0]+c[0][1])*.5f;
		edges[0][1]=c[1][0];
		edges[0][2]=c[2][0];
		
		edges[1][0]=c[0][1];
		edges[1][1]=(c[1][0]+c[1][1])*.5f;
		edges[1][2]=c[2][0];
		
		edges[2][0]=(c[0][0]+c[0][1])*.5f;
		edges[2][1]=c[1][1];
		edges[2][2]=c[2][0];
		
		edges[3][0]=c[0][0];
		edges[3][1]=(c[1][0]+c[1][1])*.5f;
		edges[3][2]=c[2][0];
		
		edges[4][0]=c[0][1];
		edges[4][1]=c[1][0];
		edges[4][2]=(c[2][0]+c[2][1])*.5f;
		
		edges[5][0]=c[0][1];
		edges[5][1]=c[1][1];
		edges[5][2]=(c[2][0]+c[2][1])*.5f;

		edges[6][0]=c[0][0];
		edges[6][1]=c[1][1];
		edges[6][2]=(c[2][0]+c[2][1])*.5f;
		
		edges[7][0]=c[0][0];
		edges[7][1]=c[1][0];
		edges[7][2]=(c[2][0]+c[2][1])*.5f;
		
		edges[8][0]=(c[0][0]+c[0][1])*.5f;
		edges[8][1]=c[1][0];
		edges[8][2]=c[2][1];
		
		edges[9][0]=c[0][1];
		edges[9][1]=(c[1][0]+c[1][1])*.5f;
		edges[9][2]=c[2][1];
		
		edges[10][0]=(c[0][0]+c[0][1])*.5f;
		edges[10][1]=c[1][1];
		edges[10][2]=c[2][1];
		
		edges[11][0]=c[0][0];
		edges[11][1]=(c[1][0]+c[1][1])*.5f;
		edges[11][2]=c[2][1];
	}
}

/**
 * Triangle list used for MC
 * 
 * @author André Eriksson
 */
class MCTriList extends TriList{

	GeoFunctionNVar f;
	private final double delta = 1e-4;
	
	/**
	 * @param capacity
	 *            the goal amount of triangles available
	 * @param margin
	 *            extra triangle amount
	 */
	MCTriList(GeoFunctionNVar fcn, int capacity, int margin) {
		super(capacity, margin, 9, true);
		f=fcn;
	}

	/**
	 * Adds a segment to the curve. If the segment vertices are unspecified,
	 * these are created.
	 * 
	 * @param e
	 *            the segment to add
	 */
	public void add(MCElement e) {
		float[][][] t = getTriangles(e);
		if(t!=null){
			for(int i=0;i<t.length;i++){
//				System.out.println("added " +t.length+ " triangles");
					
				//TODO: remove the unneccessary copying of t to v here
				float[] v = new float[9];
				float[] n = new float[9];
				v[0]=t[i][0][0];
				v[1]=t[i][0][1];
				v[2]=t[i][0][2];

				v[3]=t[i][1][0];
				v[4]=t[i][1][1];
				v[5]=t[i][1][2];

				v[6]=t[i][2][0];
				v[7]=t[i][2][1];
				v[8]=t[i][2][2];
				
				calcNormals(v,n);
				
				add(v,n);
			}
		}
	}
	
	private void calcNormals(float[] f, float[] n){
		calcNormal(f,n,0);
		calcNormal(f,n,3);
		calcNormal(f,n,6);
	}

	private void calcNormal(float[]v, float[]n, int offset){
		float x = v[offset];
		float y = v[offset+1];
		float z = v[offset+2];
		float dx = (float) (f.evaluate(new double[] {x+delta,y,z}) - 
					f.evaluate(new double[] {x,y,z}));
		float dy = (float) (f.evaluate(new double[] {x,y+delta,z}) - 
				f.evaluate(new double[] {x,y,z}));
		float dz = (float) (f.evaluate(new double[] {x,y,z+delta}) - 
				f.evaluate(new double[] {x,y,z}));
		float sum = dx+dy+dz;
		n[offset]=dx/sum;
		n[offset+1]=dy/sum;
		n[offset+2]=dz/sum;
	}
	
	/**
	 * @param e the element to search
	 * @return a list of triangles
	 */
	float[][][] getTriangles(MCElement e){
		float[][][] t = null;
		float[][] v = e.edges;
		int signs = e.signs;
		
		if(signs!=0x0 && signs != 0xff)
			System.out.print("");
		
		switch(signs){
		case 0x00:	break;
		case 0x01:	t = new float[1][3][3];	t[0][0]=v[7];	t[0][1]=v[0];	t[0][2]=v[3];	break;
		case 0x02:	t = new float[1][3][3];	t[0][0]=v[4];	t[0][1]=v[1];	t[0][2]=v[0];	break;
		case 0x03:	t = new float[2][3][3];	t[0][0]=v[7];	t[0][1]=v[4];	t[0][2]=v[3];	t[1][0]=v[4];	t[1][1]=v[1];	t[1][2]=v[3];	break;
		case 0x04:	t = new float[1][3][3];	t[0][0]=v[6];	t[0][1]=v[3];	t[0][2]=v[2];	break;
		case 0x05:	t = new float[2][3][3];	t[0][0]=v[6];	t[0][1]=v[7];	t[0][2]=v[2];	t[1][0]=v[7];	t[1][1]=v[0];	t[1][2]=v[2];	break;
		case 0x06:	t = new float[2][3][3];	t[0][0]=v[0];	t[0][1]=v[4];	t[0][2]=v[1];	t[1][0]=v[3];	t[1][1]=v[2];	t[1][2]=v[6];	break;
		case 0x07:	t = new float[3][3][3];	t[0][0]=v[2];	t[0][1]=v[6];	t[0][2]=v[1];	t[1][0]=v[6];	t[1][1]=v[4];	t[1][2]=v[1];	t[2][0]=v[6];	t[2][1]=v[7];	t[2][2]=v[4];	break;
		case 0x08:	t = new float[1][3][3];	t[0][0]=v[5];	t[0][1]=v[2];	t[0][2]=v[1];	break;
		case 0x09:	t = new float[2][3][3];	t[0][0]=v[1];	t[0][1]=v[5];	t[0][2]=v[2];	t[1][0]=v[0];	t[1][1]=v[3];	t[1][2]=v[7];	break;
		case 0x0a:	t = new float[2][3][3];	t[0][0]=v[4];	t[0][1]=v[5];	t[0][2]=v[0];	t[1][0]=v[5];	t[1][1]=v[2];	t[1][2]=v[0];	break;
		case 0x0b:	t = new float[3][3][3];	t[0][0]=v[3];	t[0][1]=v[7];	t[0][2]=v[2];	t[1][0]=v[7];	t[1][1]=v[5];	t[1][2]=v[2];	t[2][0]=v[7];	t[2][1]=v[4];	t[2][2]=v[5];	break;
		case 0x0c:	t = new float[2][3][3];	t[0][0]=v[5];	t[0][1]=v[6];	t[0][2]=v[1];	t[1][0]=v[6];	t[1][1]=v[3];	t[1][2]=v[1];	break;
		case 0x0d:	t = new float[3][3][3];	t[0][0]=v[1];	t[0][1]=v[5];	t[0][2]=v[0];	t[1][0]=v[5];	t[1][1]=v[7];	t[1][2]=v[0];	t[2][0]=v[5];	t[2][1]=v[6];	t[2][2]=v[7];	break;
		case 0x0e:	t = new float[3][3][3];	t[0][0]=v[0];	t[0][1]=v[4];	t[0][2]=v[3];	t[1][0]=v[4];	t[1][1]=v[6];	t[1][2]=v[3];	t[2][0]=v[4];	t[2][1]=v[5];	t[2][2]=v[6];	break;
		case 0x0f:	t = new float[3][3][3];	t[0][0]=v[4];	t[0][1]=v[5];	t[0][2]=v[7];	t[1][0]=v[7];	t[1][1]=v[5];	t[1][2]=v[6];	break;
		case 0x10:	t = new float[1][3][3];	t[0][0]=v[8];	t[0][1]=v[7];	t[0][2]=v[11];	break;
		case 0x11:	t = new float[2][3][3];	t[0][0]=v[8];	t[0][1]=v[0];	t[0][2]=v[11];	t[1][0]=v[0];	t[1][1]=v[3];	t[1][2]=v[11];	break;
		case 0x12:	t = new float[2][3][3];	t[0][0]=v[4];	t[0][1]=v[1];	t[0][2]=v[0];	t[1][0]=v[8];	t[1][1]=v[7];	t[1][2]=v[11];	break;
		case 0x13:	t = new float[3][3][3];	t[0][0]=v[4];	t[0][1]=v[1];	t[0][2]=v[8];	t[1][0]=v[1];	t[1][1]=v[11];	t[1][2]=v[8];	t[2][0]=v[1];	t[2][1]=v[3];	t[2][2]=v[11];	break;
		case 0x14:	t = new float[2][3][3];	t[0][0]=v[3];	t[0][1]=v[2];	t[0][2]=v[6];	t[1][0]=v[7];	t[1][1]=v[11];	t[1][2]=v[8];	break;
		case 0x15:	t = new float[3][3][3];	t[0][0]=v[11];	t[0][1]=v[8];	t[0][2]=v[6];	t[1][0]=v[8];	t[1][1]=v[2];	t[1][2]=v[6];	t[2][0]=v[8];	t[2][1]=v[0];	t[2][2]=v[2];	break;
		case 0x16:	t = new float[3][3][3];	t[0][0]=v[6];	t[0][1]=v[2];	t[0][2]=v[3];	t[1][0]=v[11];	t[1][1]=v[8];	t[1][2]=v[7];	t[2][0]=v[1];	t[2][1]=v[0];	t[2][2]=v[4];	break;
		case 0x17:	t = new float[4][3][3];	t[0][0]=v[2];	t[0][1]=v[6];	t[0][2]=v[1];	t[1][0]=v[1];	t[1][1]=v[6];	t[1][2]=v[4];	t[2][0]=v[4];	t[2][1]=v[6];	t[2][2]=v[11];	t[3][0]=v[4];	t[3][1]=v[11];	t[3][2]=v[8];	break;
		case 0x18:	t = new float[2][3][3];	t[0][0]=v[5];	t[0][1]=v[2];	t[0][2]=v[1];	t[1][0]=v[11];	t[1][1]=v[8];	t[1][2]=v[7];	break;
		case 0x19:	t = new float[3][3][3];	t[0][0]=v[3];	t[0][1]=v[11];	t[1][2]=v[0];	t[1][0]=v[11];	t[1][1]=v[8];	t[1][2]=v[0];	t[2][0]=v[2];	t[2][1]=v[1];	t[2][2]=v[5];	break;
		case 0x1a:	t = new float[3][3][3];	t[0][0]=v[4];	t[0][1]=v[5];	t[1][2]=v[0];	t[1][0]=v[5];	t[1][1]=v[2];	t[1][2]=v[0];	t[2][0]=v[8];	t[2][1]=v[7];	t[2][2]=v[11];	break;
		case 0x1c:	t = new float[3][3][3];	t[0][0]=v[3];	t[0][1]=v[1];	t[1][2]=v[6];	t[1][0]=v[1];	t[1][1]=v[5];	t[1][2]=v[6];	t[2][0]=v[7];	t[2][1]=v[11];	t[2][2]=v[8];	break;
		case 0x1d:	t = new float[3][3][3];	t[0][0]=v[8];	t[0][1]=v[1];	t[0][2]=v[6];	t[1][0]=v[6];	t[1][1]=v[1];	t[1][2]=v[5];	t[2][0]=v[11];	t[2][1]=v[8];	t[2][2]=v[6];	break;
		case 0x1e:	t = new float[4][3][3];	t[0][0]=v[8];	t[0][1]=v[11];	t[0][2]=v[6];	t[1][0]=v[8];	t[1][1]=v[6];	t[1][2]=v[4];	t[2][0]=v[4];	t[2][1]=v[6];	t[2][2]=v[5];	t[3][0]=v[0];	t[3][1]=v[7];	t[3][2]=v[3];	break;
		case 0x1f:	t = new float[3][3][3];	t[0][0]=v[6];	t[0][1]=v[11];	t[0][2]=v[8];	t[1][0]=v[4];	t[1][1]=v[6];	t[1][2]=v[8];	t[2][0]=v[5];	t[2][1]=v[6];	t[2][2]=v[4];	break;
		case 0x20:	t = new float[1][3][3];	t[0][0]=v[9];	t[0][1]=v[4];	t[0][2]=v[8];	break;
		case 0x21:	t = new float[2][3][3];	t[0][0]=v[0];	t[0][1]=v[3];	t[0][2]=v[7];	t[1][0]=v[4];	t[1][1]=v[8];	t[1][2]=v[9];	break;
		case 0x22:	t = new float[2][3][3];	t[0][0]=v[9];	t[0][1]=v[1];	t[0][2]=v[8];	t[1][0]=v[1];	t[1][1]=v[0];	t[1][2]=v[8];	break;
		case 0x23:	t = new float[3][3][3];	t[0][0]=v[8];	t[0][1]=v[9];	t[0][2]=v[7];	t[1][0]=v[9];	t[1][1]=v[3];	t[1][2]=v[7];	t[2][0]=v[9];	t[2][1]=v[1];	t[2][2]=v[3];	break;
		case 0x24:	t = new float[2][3][3];	t[0][0]=v[6];	t[0][1]=v[3];	t[0][2]=v[2];	t[1][0]=v[8];	t[1][1]=v[9];	t[1][2]=v[4];	break;
		case 0x25:	t = new float[3][3][3];	t[0][0]=v[0];	t[0][1]=v[2];	t[1][2]=v[7];	t[1][0]=v[2];	t[1][1]=v[6];	t[1][2]=v[7];	t[2][0]=v[4];	t[2][1]=v[8];	t[2][2]=v[9];	break;
		case 0x26:	t = new float[3][3][3];	t[0][0]=v[0];	t[0][1]=v[8];	t[1][2]=v[1];	t[1][0]=v[8];	t[1][1]=v[9];	t[1][2]=v[1];	t[2][0]=v[3];	t[2][1]=v[2];	t[2][2]=v[6];	break;
		case 0x27:	t = new float[3][3][3];	t[0][0]=v[9];	t[0][1]=v[2];	t[0][2]=v[7];	t[1][0]=v[7];	t[1][1]=v[2];	t[1][2]=v[6];	t[2][0]=v[8];	t[2][1]=v[9];	t[2][2]=v[7];	break;
		case 0x28:	t = new float[2][3][3];	t[0][0]=v[5];	t[0][1]=v[2];	t[0][2]=v[1];	t[1][0]=v[9];	t[1][1]=v[4];	t[1][2]=v[8];	break;
		case 0x29:	t = new float[3][3][3];	t[0][0]=v[7];	t[0][1]=v[3];	t[0][2]=v[0];	t[1][0]=v[8];	t[1][1]=v[9];	t[1][2]=v[4];	t[2][0]=v[2];	t[2][1]=v[1];	t[2][2]=v[5];	break;
		case 0x2a:	t = new float[3][3][3];	t[0][0]=v[5];	t[0][1]=v[2];	t[0][2]=v[9];	t[1][0]=v[2];	t[1][1]=v[8];	t[1][2]=v[9];	t[2][0]=v[2];	t[2][1]=v[0];	t[2][2]=v[8];	break;
		case 0x2b:	t = new float[4][3][3];	t[0][0]=v[3];	t[0][1]=v[7];	t[0][2]=v[2];	t[1][0]=v[2];	t[1][1]=v[7];	t[1][2]=v[5];	t[2][0]=v[5];	t[2][1]=v[7];	t[2][2]=v[8];	t[3][0]=v[5];	t[3][1]=v[8];	t[3][2]=v[9];	break;
		case 0x2c:	t = new float[3][3][3];	t[0][0]=v[5];	t[0][1]=v[6];	t[1][2]=v[1];	t[1][0]=v[6];	t[1][1]=v[3];	t[1][2]=v[1];	t[2][0]=v[9];	t[2][1]=v[4];	t[2][2]=v[8];	break;
		case 0x2d:	t = new float[4][3][3];	t[0][0]=v[9];	t[0][1]=v[8];	t[0][2]=v[7];	t[1][0]=v[9];	t[1][1]=v[7];	t[1][2]=v[5];	t[2][0]=v[5];	t[2][1]=v[7];	t[2][2]=v[6];	t[3][0]=v[1];	t[3][1]=v[4];	t[3][2]=v[0];	break;
		case 0x2f:	t = new float[3][3][3];	t[0][0]=v[7];	t[0][1]=v[8];	t[0][2]=v[9];	t[1][0]=v[5];	t[1][1]=v[7];	t[1][2]=v[9];	t[2][0]=v[6];	t[2][1]=v[7];	t[2][2]=v[5];	break;
		case 0x30:	t = new float[2][3][3];	t[0][0]=v[4];	t[0][1]=v[7];	t[0][2]=v[9];	t[1][0]=v[7];	t[1][1]=v[11];	t[1][2]=v[9];	break;
		case 0x31:	t = new float[3][3][3];	t[0][0]=v[0];	t[0][1]=v[3];	t[0][2]=v[4];	t[1][0]=v[3];	t[1][1]=v[9];	t[1][2]=v[4];	t[2][0]=v[3];	t[2][1]=v[11];	t[2][2]=v[9];	break;
		case 0x32:	t = new float[3][3][3];	t[0][0]=v[7];	t[0][1]=v[11];	t[0][2]=v[0];	t[1][0]=v[11];	t[1][1]=v[1];	t[1][2]=v[0];	t[2][0]=v[11];	t[2][1]=v[9];	t[2][2]=v[1];	break;
		case 0x33:	t = new float[3][3][3];	t[0][0]=v[9];	t[0][1]=v[1];	t[0][2]=v[11];	t[1][0]=v[11];	t[1][1]=v[1];	t[1][2]=v[3];	break;
		case 0x34:	t = new float[3][3][3];	t[0][0]=v[11];	t[0][1]=v[9];	t[1][2]=v[7];	t[1][0]=v[9];	t[1][1]=v[4];	t[1][2]=v[7];	t[2][0]=v[6];	t[2][1]=v[3];	t[2][2]=v[2];	break;
		case 0x36:	t = new float[4][3][3];	t[0][0]=v[6];	t[0][1]=v[2];	t[0][2]=v[1];	t[1][0]=v[6];	t[1][1]=v[1];	t[1][2]=v[11];	t[2][0]=v[11];	t[2][1]=v[1];	t[2][2]=v[9];	t[3][0]=v[7];	t[3][1]=v[3];	t[3][2]=v[0];	break;
		case 0x37:	t = new float[3][3][3];	t[0][0]=v[1];	t[0][1]=v[2];	t[0][2]=v[6];	t[1][0]=v[11];	t[1][1]=v[1];	t[1][2]=v[6];	t[2][0]=v[9];	t[2][1]=v[1];	t[2][2]=v[11];	break;
		case 0x38:	t = new float[3][3][3];	t[0][0]=v[4];	t[0][1]=v[7];	t[1][2]=v[9];	t[1][0]=v[7];	t[1][1]=v[11];	t[1][2]=v[9];	t[2][0]=v[1];	t[2][1]=v[5];	t[2][2]=v[2];	break;
		case 0x39:	t = new float[4][3][3];	t[0][0]=v[2];	t[0][1]=v[5];	t[0][2]=v[9];	t[1][0]=v[2];	t[1][1]=v[9];	t[1][2]=v[3];	t[2][0]=v[3];	t[2][1]=v[9];	t[2][2]=v[11];	t[3][0]=v[0];	t[3][1]=v[1];	t[3][2]=v[4];	break;
		case 0x3a:	t = new float[3][3][3];	t[0][0]=v[11];	t[0][1]=v[5];	t[0][2]=v[0];	t[1][0]=v[0];	t[1][1]=v[5];	t[1][2]=v[2];	t[2][0]=v[7];	t[2][1]=v[11];	t[2][2]=v[0];	break;
		case 0x3b:	t = new float[3][3][3];	t[0][0]=v[9];	t[0][1]=v[5];	t[0][2]=v[2];	t[1][0]=v[3];	t[1][1]=v[9];	t[1][2]=v[2];	t[2][0]=v[11];	t[2][1]=v[9];	t[2][2]=v[3];	break;
		case 0x3c:	t = new float[4][3][3];	t[0][0]=v[1];	t[0][1]=v[4];	t[0][2]=v[7];	t[1][0]=v[3];	t[1][1]=v[1];	t[1][2]=v[7];	t[2][0]=v[11];	t[2][1]=v[9];	t[2][2]=v[8];	t[3][0]=v[11];	t[3][1]=v[8];	t[3][2]=v[6];	break;
		case 0x3d:	t = new float[3][3][3];	t[0][0]=v[11];	t[0][1]=v[9];	t[1][2]=v[5];	t[1][0]=v[6];	t[1][1]=v[11];	t[1][2]=v[5];	t[2][0]=v[1];	t[2][1]=v[4];	t[2][2]=v[0];	break;
		case 0x3e:	t = new float[3][3][3];	t[0][0]=v[5];	t[0][1]=v[6];	t[1][2]=v[11];	t[1][0]=v[9];	t[1][1]=v[5];	t[1][2]=v[11];	t[2][0]=v[7];	t[2][1]=v[3];	t[2][2]=v[0];	break;
		case 0x3f:	t = new float[2][3][3];	t[0][0]=v[5];	t[0][1]=v[6];	t[0][2]=v[11];	t[1][0]=v[9];	t[1][1]=v[5];	t[1][2]=v[11];	break;
		case 0x40:	t = new float[1][3][3];	t[0][0]=v[11];	t[0][1]=v[6];	t[0][2]=v[10];	break;
		case 0x41:	t = new float[2][3][3];	t[0][0]=v[7];	t[0][1]=v[0];	t[0][2]=v[3];	t[1][0]=v[11];	t[1][1]=v[6];	t[1][2]=v[10];	break;
		case 0x42:	t = new float[2][3][3];	t[0][0]=v[4];	t[0][1]=v[1];	t[0][2]=v[0];	t[1][0]=v[10];	t[1][1]=v[11];	t[1][2]=v[6];	break;
		case 0x43:	t = new float[3][3][3];	t[0][0]=v[7];	t[0][1]=v[4];	t[1][2]=v[3];	t[1][0]=v[4];	t[1][1]=v[1];	t[1][2]=v[3];	t[2][0]=v[11];	t[2][1]=v[6];	t[2][2]=v[10];	break;
		case 0x44:	t = new float[2][3][3];	t[0][0]=v[11];	t[0][1]=v[3];	t[0][2]=v[10];	t[1][0]=v[3];	t[1][1]=v[2];	t[1][2]=v[10];	break;
		case 0x45:	t = new float[3][3][3];	t[0][0]=v[7];	t[0][1]=v[0];	t[0][2]=v[11];	t[1][0]=v[0];	t[1][1]=v[10];	t[1][2]=v[11];	t[2][0]=v[0];	t[2][1]=v[2];	t[2][2]=v[10];	break;
		case 0x46:	t = new float[3][3][3];	t[0][0]=v[2];	t[0][1]=v[10];	t[1][2]=v[3];	t[1][0]=v[10];	t[1][1]=v[11];	t[1][2]=v[3];	t[2][0]=v[1];	t[2][1]=v[0];	t[2][2]=v[4];	break;
		case 0x48:	t = new float[2][3][3];	t[0][0]=v[2];	t[0][1]=v[1];	t[0][2]=v[5];	t[1][0]=v[6];	t[1][1]=v[10];	t[1][2]=v[11];	break;
		case 0x49:	t = new float[3][3][3];	t[0][0]=v[5];	t[0][1]=v[1];	t[0][2]=v[2];	t[1][0]=v[10];	t[1][1]=v[11];	t[1][2]=v[6];	t[2][0]=v[0];	t[2][1]=v[3];	t[2][2]=v[7];	break;
		case 0x4a:	t = new float[3][3][3];	t[0][0]=v[2];	t[0][1]=v[0];	t[1][2]=v[5];	t[1][0]=v[0];	t[1][1]=v[4];	t[1][2]=v[5];	t[2][0]=v[6];	t[2][1]=v[10];	t[2][2]=v[11];	break;
		case 0x4b:	t = new float[4][3][3];	t[0][0]=v[11];	t[0][1]=v[10];	t[0][2]=v[5];	t[1][0]=v[11];	t[1][1]=v[5];	t[1][2]=v[7];	t[2][0]=v[7];	t[2][1]=v[5];	t[2][2]=v[4];	t[3][0]=v[3];	t[3][1]=v[6];	t[3][2]=v[2];	break;
		case 0x4c:	t = new float[3][3][3];	t[0][0]=v[10];	t[0][1]=v[11];	t[0][2]=v[5];	t[1][0]=v[11];	t[1][1]=v[1];	t[1][2]=v[5];	t[2][0]=v[11];	t[2][1]=v[3];	t[2][2]=v[1];	break;
		case 0x4d:	t = new float[4][3][3];	t[0][0]=v[1];	t[0][1]=v[5];	t[0][2]=v[0];	t[1][0]=v[0];	t[1][1]=v[5];	t[1][2]=v[7];	t[2][0]=v[7];	t[2][1]=v[5];	t[2][2]=v[10];	t[3][0]=v[7];	t[3][1]=v[10];	t[3][2]=v[11];	break;
		case 0x4e:	t = new float[3][3][3];	t[0][0]=v[11];	t[0][1]=v[0];	t[0][2]=v[5];	t[1][0]=v[5];	t[1][1]=v[0];	t[1][2]=v[4];	t[2][0]=v[10];	t[2][1]=v[11];	t[2][2]=v[5];	break;
		case 0x4f:	t = new float[3][3][3];	t[0][0]=v[5];	t[0][1]=v[10];	t[0][2]=v[11];	t[1][0]=v[7];	t[1][1]=v[5];	t[1][2]=v[11];	t[2][0]=v[4];	t[2][1]=v[5];	t[2][2]=v[7];	break;
		case 0x50:	t = new float[2][3][3];	t[0][0]=v[7];	t[0][1]=v[6];	t[0][2]=v[8];	t[1][0]=v[6];	t[1][1]=v[10];	t[1][2]=v[8];	break;
		case 0x51:	t = new float[3][3][3];	t[0][0]=v[6];	t[0][1]=v[10];	t[0][2]=v[3];	t[1][0]=v[10];	t[1][1]=v[0];	t[1][2]=v[3];	t[2][0]=v[10];	t[2][1]=v[8];	t[2][2]=v[0];	break;
		case 0x52:	t = new float[3][3][3];	t[0][0]=v[7];	t[0][1]=v[6];	t[1][2]=v[8];	t[1][0]=v[6];	t[1][1]=v[10];	t[1][2]=v[8];	t[2][0]=v[0];	t[2][1]=v[4];	t[2][2]=v[1];	break;
		case 0x53:	t = new float[3][3][3];	t[0][0]=v[10];	t[0][1]=v[4];	t[0][2]=v[3];	t[1][0]=v[3];	t[1][1]=v[4];	t[1][2]=v[1];	t[2][0]=v[6];	t[2][1]=v[10];	t[2][2]=v[3];	break;
		case 0x54:	t = new float[3][3][3];	t[0][0]=v[3];	t[0][1]=v[2];	t[0][2]=v[7];	t[1][0]=v[2];	t[1][1]=v[8];	t[1][2]=v[7];	t[2][0]=v[2];	t[2][1]=v[10];	t[2][2]=v[8];	break;
		case 0x55:	t = new float[3][3][3];	t[0][0]=v[8];	t[0][1]=v[0];	t[0][2]=v[10];	t[1][0]=v[10];	t[1][1]=v[0];	t[1][2]=v[2];	break;
		case 0x56:	t = new float[4][3][3];	t[0][0]=v[1];	t[0][1]=v[4];	t[0][2]=v[8];	t[1][0]=v[1];	t[1][1]=v[8];	t[1][2]=v[2];	t[2][0]=v[2];	t[2][1]=v[8];	t[2][2]=v[10];	t[3][0]=v[3];	t[3][1]=v[0];	t[3][2]=v[7];	break;
		case 0x57:	t = new float[3][3][3];	t[0][0]=v[8];	t[0][1]=v[4];	t[0][2]=v[1];	t[1][0]=v[2];	t[1][1]=v[8];	t[1][2]=v[1];	t[2][0]=v[10];	t[2][1]=v[8];	t[2][2]=v[2];	break;
		case 0x58:	t = new float[3][3][3];	t[0][0]=v[10];	t[0][1]=v[8];	t[1][2]=v[6];	t[1][0]=v[8];	t[1][1]=v[7];	t[1][2]=v[6];	t[2][0]=v[5];	t[2][1]=v[2];	t[2][2]=v[1];	break;
		case 0x59:	t = new float[4][3][3];	t[0][0]=v[5];	t[0][1]=v[1];	t[0][2]=v[0];	t[1][0]=v[5];	t[1][1]=v[0];	t[1][2]=v[10];	t[2][0]=v[10];	t[2][1]=v[0];	t[2][2]=v[8];	t[3][0]=v[6];	t[3][1]=v[2];	t[3][2]=v[3];	break;
		case 0x5a:	t = new float[4][3][3];	t[0][0]=v[0];	t[0][1]=v[7];	t[0][2]=v[6];	t[1][0]=v[2];	t[1][1]=v[0];	t[1][2]=v[6];	t[2][0]=v[10];	t[2][1]=v[8];	t[2][2]=v[11];	t[3][0]=v[10];	t[3][1]=v[11];	t[3][2]=v[5];	break;
		case 0x5b:	t = new float[3][3][3];	t[0][0]=v[4];	t[0][1]=v[5];	t[1][2]=v[10];	t[1][0]=v[8];	t[1][1]=v[4];	t[1][2]=v[10];	t[2][0]=v[6];	t[2][1]=v[2];	t[2][2]=v[3];	break;
		case 0x5d:	t = new float[3][3][3];	t[0][0]=v[0];	t[0][1]=v[1];	t[0][2]=v[5];	t[1][0]=v[10];	t[1][1]=v[0];	t[1][2]=v[5];	t[2][0]=v[8];	t[2][1]=v[0];	t[2][2]=v[10];	break;
		case 0x5e:	t = new float[3][3][3];	t[0][0]=v[10];	t[0][1]=v[8];	t[1][2]=v[4];	t[1][0]=v[5];	t[1][1]=v[10];	t[1][2]=v[4];	t[2][0]=v[0];	t[2][1]=v[7];	t[2][2]=v[3];	break;
		case 0x5f:	t = new float[2][3][3];	t[0][0]=v[4];	t[0][1]=v[5];	t[0][2]=v[10];	t[1][0]=v[8];	t[1][1]=v[4];	t[1][2]=v[10];	break;
		case 0x60:	t = new float[2][3][3];	t[0][0]=v[9];	t[0][1]=v[4];	t[0][2]=v[8];	t[1][0]=v[10];	t[1][1]=v[11];	t[1][2]=v[6];	break;
		case 0x61:	t = new float[3][3][3];	t[0][0]=v[4];	t[0][1]=v[9];	t[0][2]=v[8];	t[1][0]=v[0];	t[1][1]=v[3];	t[1][2]=v[7];	t[2][0]=v[10];	t[2][1]=v[11];	t[2][2]=v[6];	break;
		case 0x62:	t = new float[3][3][3];	t[0][0]=v[9];	t[0][1]=v[1];	t[1][2]=v[8];	t[1][0]=v[1];	t[1][1]=v[0];	t[1][2]=v[8];	t[2][0]=v[10];	t[2][1]=v[11];	t[2][2]=v[6];	break;
		case 0x63:	t = new float[4][3][3];	t[0][0]=v[10];	t[0][1]=v[6];	t[0][2]=v[3];	t[1][0]=v[10];	t[1][1]=v[3];	t[1][2]=v[9];	t[2][0]=v[9];	t[2][1]=v[3];	t[2][2]=v[1];	t[3][0]=v[8];	t[3][1]=v[11];	t[3][2]=v[7];	break;
		case 0x64:	t = new float[3][3][3];	t[0][0]=v[11];	t[0][1]=v[3];	t[1][2]=v[10];	t[1][0]=v[3];	t[1][1]=v[2];	t[1][2]=v[10];	t[2][0]=v[8];	t[2][1]=v[9];	t[2][2]=v[4];	break;
		case 0x65:	t = new float[4][3][3];	t[0][0]=v[4];	t[0][1]=v[9];	t[0][2]=v[10];	t[1][0]=v[4];	t[1][1]=v[10];	t[1][2]=v[0];	t[2][0]=v[0];	t[2][1]=v[10];	t[2][2]=v[2];	t[3][0]=v[7];	t[3][1]=v[8];	t[3][2]=v[11];	break;
		case 0x66:	t = new float[4][3][3];	t[0][0]=v[3];	t[0][1]=v[0];	t[0][2]=v[8];	t[1][0]=v[11];	t[1][1]=v[3];	t[1][2]=v[8];	t[2][0]=v[9];	t[2][1]=v[1];	t[2][2]=v[4];	t[3][0]=v[9];	t[3][1]=v[4];	t[3][2]=v[10];	break;
		case 0x67:	t = new float[3][3][3];	t[0][0]=v[2];	t[0][1]=v[10];	t[1][2]=v[9];	t[1][0]=v[1];	t[1][1]=v[2];	t[1][2]=v[9];	t[2][0]=v[8];	t[2][1]=v[11];	t[2][2]=v[7];	break;
		case 0x68:	t = new float[3][3][3];	t[0][0]=v[6];	t[0][1]=v[11];	t[0][2]=v[10];	t[1][0]=v[2];	t[1][1]=v[1];	t[1][2]=v[5];	t[2][0]=v[8];	t[2][1]=v[9];	t[2][2]=v[4];	break;
		case 0x69:	t = new float[4][3][3];	t[0][0]=v[1];	t[0][1]=v[4];	t[0][2]=v[0];	t[1][0]=v[10];	t[1][1]=v[9];	t[1][2]=v[8];	t[2][0]=v[7];	t[2][1]=v[8];	t[2][2]=v[11];	t[3][0]=v[6];	t[3][1]=v[2];	t[3][2]=v[3];	break;
		case 0x6a:	t = new float[4][3][3];	t[0][0]=v[6];	t[0][1]=v[11];	t[0][2]=v[8];	t[1][0]=v[6];	t[1][1]=v[8];	t[1][2]=v[2];	t[2][0]=v[2];	t[2][1]=v[8];	t[2][2]=v[0];	t[3][0]=v[5];	t[3][1]=v[10];	t[3][2]=v[9];	break;
		case 0x6b:	t = new float[3][3][3];	t[0][0]=v[8];	t[0][1]=v[7];	t[0][2]=v[11];	t[1][0]=v[2];	t[1][1]=v[3];	t[1][2]=v[6];	t[2][0]=v[10];	t[2][1]=v[9];	t[2][2]=v[5];	break;
		case 0x6c:	t = new float[4][3][3];	t[0][0]=v[8];	t[0][1]=v[4];	t[0][2]=v[1];	t[1][0]=v[8];	t[1][1]=v[1];	t[1][2]=v[11];	t[2][0]=v[11];	t[2][1]=v[1];	t[2][2]=v[3];	t[3][0]=v[10];	t[3][1]=v[9];	t[3][2]=v[5];	break;
		case 0x6d:	t = new float[3][3][3];	t[0][0]=v[10];	t[0][1]=v[5];	t[0][2]=v[9];	t[1][0]=v[0];	t[1][1]=v[1];	t[1][2]=v[4];	t[2][0]=v[8];	t[2][1]=v[11];	t[2][2]=v[7];	break;
		case 0x6e:	t = new float[3][3][3];	t[0][0]=v[0];	t[0][1]=v[8];	t[1][2]=v[11];	t[1][0]=v[3];	t[1][1]=v[0];	t[1][2]=v[11];	t[2][0]=v[10];	t[2][1]=v[9];	t[2][2]=v[5];	break;
		case 0x6f:	t = new float[2][3][3];	t[0][0]=v[7];	t[0][1]=v[8];	t[0][2]=v[11];	t[1][0]=v[10];	t[1][1]=v[9];	t[1][2]=v[5];	break;
		case 0x70:	t = new float[3][3][3];	t[0][0]=v[9];	t[0][1]=v[4];	t[0][2]=v[10];	t[1][0]=v[4];	t[1][1]=v[6];	t[1][2]=v[10];	t[2][0]=v[4];	t[2][1]=v[7];	t[2][2]=v[6];	break;
		case 0x71:	t = new float[4][3][3];	t[0][0]=v[9];	t[0][1]=v[4];	t[0][2]=v[10];	t[1][0]=v[10];	t[1][1]=v[4];	t[1][2]=v[6];	t[2][0]=v[6];	t[2][1]=v[4];	t[2][2]=v[0];	t[3][0]=v[6];	t[3][1]=v[0];	t[3][2]=v[3];	break;
		case 0x73:	t = new float[3][3][3];	t[0][0]=v[3];	t[0][1]=v[6];	t[0][2]=v[10];	t[1][0]=v[9];	t[1][1]=v[3];	t[1][2]=v[10];	t[2][0]=v[1];	t[2][1]=v[3];	t[2][2]=v[9];	break;
		case 0x74:	t = new float[3][3][3];	t[0][0]=v[2];	t[0][1]=v[9];	t[0][2]=v[7];	t[1][0]=v[7];	t[1][1]=v[9];	t[1][2]=v[4];	t[2][0]=v[3];	t[2][1]=v[2];	t[2][2]=v[7];	break;
		case 0x75:	t = new float[3][3][3];	t[0][0]=v[10];	t[0][1]=v[9];	t[0][2]=v[4];	t[1][0]=v[0];	t[1][1]=v[10];	t[1][2]=v[4];	t[2][0]=v[2];	t[2][1]=v[10];	t[2][2]=v[0];	break;
		case 0x76:	t = new float[3][3][3];	t[0][0]=v[9];	t[0][1]=v[1];	t[1][2]=v[2];	t[1][0]=v[10];	t[1][1]=v[9];	t[1][2]=v[2];	t[2][0]=v[3];	t[2][1]=v[0];	t[2][2]=v[7];	break;
		case 0x77:	t = new float[2][3][3];	t[0][0]=v[2];	t[0][1]=v[10];	t[0][2]=v[9];	t[1][0]=v[1];	t[1][1]=v[2];	t[1][2]=v[9];	break;
		case 0x78:	t = new float[4][3][3];	t[0][0]=v[1];	t[0][1]=v[2];	t[0][2]=v[6];	t[1][0]=v[1];	t[1][1]=v[6];	t[1][2]=v[4];	t[2][0]=v[4];	t[2][1]=v[6];	t[2][2]=v[7];	t[3][0]=v[9];	t[3][1]=v[5];	t[3][2]=v[10];	break;
		case 0x79:	t = new float[3][3][3];	t[0][0]=v[0];	t[0][1]=v[4];	t[0][2]=v[1];	t[1][0]=v[10];	t[1][1]=v[9];	t[1][2]=v[5];	t[2][0]=v[2];	t[2][1]=v[3];	t[2][2]=v[6];	break;
		case 0x7a:	t = new float[3][3][3];	t[0][0]=v[7];	t[0][1]=v[6];	t[1][2]=v[2];	t[1][0]=v[0];	t[1][1]=v[7];	t[1][2]=v[2];	t[2][0]=v[5];	t[2][1]=v[10];	t[2][2]=v[9];	break;
		case 0x7b:	t = new float[2][3][3];	t[0][0]=v[3];	t[0][1]=v[6];	t[0][2]=v[2];	t[1][0]=v[5];	t[1][1]=v[10];	t[1][2]=v[9];	break;
		case 0x7c:	t = new float[3][3][3];	t[0][0]=v[3];	t[0][1]=v[1];	t[1][2]=v[4];	t[1][0]=v[7];	t[1][1]=v[3];	t[1][2]=v[4];	t[2][0]=v[9];	t[2][1]=v[5];	t[2][2]=v[10];	break;
		case 0x7d:	t = new float[2][3][3];	t[0][0]=v[0];	t[0][1]=v[1];	t[0][2]=v[4];	t[1][0]=v[9];	t[1][1]=v[5];	t[1][2]=v[10];	break;
		case 0x7e:	t = new float[2][3][3];	t[0][0]=v[0];	t[0][1]=v[7];	t[0][2]=v[3];	t[1][0]=v[10];	t[1][1]=v[9];	t[1][2]=v[5];	break;
		case 0x7f:	t = new float[1][3][3];	t[0][0]=v[5];	t[0][1]=v[10];	t[0][2]=v[9];	break;
		case 0x80:	t = new float[1][3][3];	t[0][0]=v[10];	t[0][1]=v[5];	t[0][2]=v[9];	break;
		case 0x81:	t = new float[2][3][3];	t[0][0]=v[7];	t[0][1]=v[0];	t[0][2]=v[3];	t[1][0]=v[9];	t[1][1]=v[10];	t[1][2]=v[5];	break;
		case 0x82:	t = new float[2][3][3];	t[0][0]=v[1];	t[0][1]=v[0];	t[0][2]=v[4];	t[1][0]=v[5];	t[1][1]=v[9];	t[1][2]=v[10];	break;
		case 0x83:	t = new float[3][3][3];	t[0][0]=v[1];	t[0][1]=v[3];	t[1][2]=v[4];	t[1][0]=v[3];	t[1][1]=v[7];	t[1][2]=v[4];	t[2][0]=v[5];	t[2][1]=v[9];	t[2][2]=v[10];	break;
		case 0x84:	t = new float[2][3][3];	t[0][0]=v[6];	t[0][1]=v[3];	t[0][2]=v[2];	t[1][0]=v[10];	t[1][1]=v[5];	t[1][2]=v[9];	break;
		case 0x85:	t = new float[3][3][3];	t[0][0]=v[6];	t[0][1]=v[7];	t[1][2]=v[2];	t[1][0]=v[7];	t[1][1]=v[0];	t[1][2]=v[2];	t[2][0]=v[10];	t[2][1]=v[5];	t[2][2]=v[9];	break;
		case 0x86:	t = new float[3][3][3];	t[0][0]=v[4];	t[0][1]=v[0];	t[0][2]=v[1];	t[1][0]=v[9];	t[1][1]=v[10];	t[1][2]=v[5];	t[2][0]=v[3];	t[2][1]=v[2];	t[2][2]=v[6];	break;
		case 0x87:	t = new float[4][3][3];	t[0][0]=v[10];	t[0][1]=v[9];	t[0][2]=v[4];	t[1][0]=v[10];	t[1][1]=v[4];	t[1][2]=v[6];	t[2][0]=v[6];	t[2][1]=v[4];	t[2][2]=v[7];	t[3][0]=v[2];	t[3][1]=v[5];	t[3][2]=v[1];	break;
		case 0x88:	t = new float[2][3][3];	t[0][0]=v[10];	t[0][1]=v[2];	t[0][2]=v[9];	t[1][0]=v[2];	t[1][1]=v[1];	t[1][2]=v[9];	break;
		case 0x89:	t = new float[3][3][3];	t[0][0]=v[1];	t[0][1]=v[9];	t[1][2]=v[2];	t[1][0]=v[9];	t[1][1]=v[10];	t[1][2]=v[2];	t[2][0]=v[0];	t[2][1]=v[3];	t[2][2]=v[7];	break;
		case 0x8a:	t = new float[3][3][3];	t[0][0]=v[9];	t[0][1]=v[10];	t[0][2]=v[4];	t[1][0]=v[10];	t[1][1]=v[0];	t[1][2]=v[4];	t[2][0]=v[10];	t[2][1]=v[2];	t[2][2]=v[0];	break;
		case 0x8b:	t = new float[3][3][3];	t[0][0]=v[10];	t[0][1]=v[3];	t[0][2]=v[4];	t[1][0]=v[4];	t[1][1]=v[3];	t[1][2]=v[7];	t[2][0]=v[9];	t[2][1]=v[10];	t[2][2]=v[4];	break;
		case 0x8c:	t = new float[3][3][3];	t[0][0]=v[6];	t[0][1]=v[3];	t[0][2]=v[10];	t[1][0]=v[3];	t[1][1]=v[9];	t[1][2]=v[10];	t[2][0]=v[3];	t[2][1]=v[1];	t[2][2]=v[9];	break;
		case 0x8e:	t = new float[4][3][3];	t[0][0]=v[0];	t[0][1]=v[4];	t[0][2]=v[3];	t[1][0]=v[3];	t[1][1]=v[4];	t[1][2]=v[6];	t[2][0]=v[6];	t[2][1]=v[4];	t[2][2]=v[9];	t[3][0]=v[6];	t[3][1]=v[9];	t[3][2]=v[10];	break;
		case 0x8f:	t = new float[3][3][3];	t[0][0]=v[4];	t[0][1]=v[9];	t[0][2]=v[10];	t[1][0]=v[6];	t[1][1]=v[4];	t[1][2]=v[10];	t[2][0]=v[7];	t[2][1]=v[4];	t[2][2]=v[6];	break;
		case 0x90:	t = new float[2][3][3];	t[0][0]=v[8];	t[0][1]=v[7];	t[0][2]=v[11];	t[1][0]=v[9];	t[1][1]=v[10];	t[1][2]=v[5];	break;
		case 0x91:	t = new float[3][3][3];	t[0][0]=v[8];	t[0][1]=v[0];	t[1][2]=v[11];	t[1][0]=v[0];	t[1][1]=v[3];	t[1][2]=v[11];	t[2][0]=v[9];	t[2][1]=v[10];	t[2][2]=v[5];	break;
		case 0x92:	t = new float[3][3][3];	t[0][0]=v[5];	t[0][1]=v[10];	t[0][2]=v[9];	t[1][0]=v[1];	t[1][1]=v[0];	t[1][2]=v[4];	t[2][0]=v[11];	t[2][1]=v[8];	t[2][2]=v[7];	break;
		case 0x93:	t = new float[4][3][3];	t[0][0]=v[5];	t[0][1]=v[10];	t[0][2]=v[11];	t[1][0]=v[5];	t[1][1]=v[11];	t[1][2]=v[1];	t[2][0]=v[1];	t[2][1]=v[11];	t[2][2]=v[3];	t[3][0]=v[4];	t[3][1]=v[9];	t[3][2]=v[8];	break;
		case 0x94:	t = new float[3][3][3];	t[0][0]=v[7];	t[0][1]=v[8];	t[0][2]=v[11];	t[1][0]=v[3];	t[1][1]=v[2];	t[1][2]=v[6];	t[2][0]=v[9];	t[2][1]=v[10];	t[2][2]=v[5];	break;
		case 0x95:	t = new float[4][3][3];	t[0][0]=v[9];	t[0][1]=v[5];	t[0][2]=v[2];	t[1][0]=v[9];	t[1][1]=v[2];	t[1][2]=v[8];	t[2][0]=v[8];	t[2][1]=v[2];	t[2][2]=v[0];	t[3][0]=v[11];	t[3][1]=v[10];	t[3][2]=v[6];	break;
		case 0x96:	t = new float[4][3][3];	t[0][0]=v[0];	t[0][1]=v[7];	t[0][2]=v[3];	t[1][0]=v[9];	t[1][1]=v[8];	t[1][2]=v[11];	t[2][0]=v[6];	t[2][1]=v[11];	t[2][2]=v[10];	t[3][0]=v[5];	t[3][1]=v[1];	t[3][2]=v[2];	break;
		case 0x97:	t = new float[3][3][3];	t[0][0]=v[11];	t[0][1]=v[6];	t[0][2]=v[10];	t[1][0]=v[1];	t[1][1]=v[2];	t[1][2]=v[5];	t[2][0]=v[9];	t[2][1]=v[8];	t[2][2]=v[4];	break;
		case 0x98:	t = new float[3][3][3];	t[0][0]=v[10];	t[0][1]=v[2];	t[1][2]=v[9];	t[1][0]=v[2];	t[1][1]=v[1];	t[1][2]=v[9];	t[2][0]=v[11];	t[2][1]=v[8];	t[2][2]=v[7];	break;
		case 0x99:	t = new float[4][3][3];	t[0][0]=v[0];	t[0][1]=v[1];	t[0][2]=v[9];	t[1][0]=v[8];	t[1][1]=v[0];	t[1][2]=v[9];	t[2][0]=v[10];	t[2][1]=v[2];	t[2][2]=v[5];	t[3][0]=v[10];	t[3][1]=v[5];	t[3][2]=v[11];	break;
		case 0x9a:	t = new float[4][3][3];	t[0][0]=v[11];	t[0][1]=v[7];	t[0][2]=v[0];	t[1][0]=v[11];	t[1][1]=v[0];	t[1][2]=v[10];	t[2][0]=v[10];	t[2][1]=v[0];	t[2][2]=v[2];	t[3][0]=v[9];	t[3][1]=v[8];	t[3][2]=v[4];	break;
		case 0x9b:	t = new float[3][3][3];	t[0][0]=v[3];	t[0][1]=v[11];	t[1][2]=v[10];	t[1][0]=v[2];	t[1][1]=v[3];	t[1][2]=v[10];	t[2][0]=v[9];	t[2][1]=v[8];	t[2][2]=v[4];	break;
		case 0x9c:	t = new float[4][3][3];	t[0][0]=v[7];	t[0][1]=v[8];	t[0][2]=v[9];	t[1][0]=v[7];	t[1][1]=v[9];	t[1][2]=v[3];	t[2][0]=v[3];	t[2][1]=v[9];	t[2][2]=v[1];	t[3][0]=v[6];	t[3][1]=v[11];	t[3][2]=v[10];	break;
		case 0x9d:	t = new float[3][3][3];	t[0][0]=v[1];	t[0][1]=v[9];	t[1][2]=v[8];	t[1][0]=v[0];	t[1][1]=v[1];	t[1][2]=v[8];	t[2][0]=v[11];	t[2][1]=v[10];	t[2][2]=v[6];	break;
		case 0x9e:	t = new float[3][3][3];	t[0][0]=v[9];	t[0][1]=v[4];	t[0][2]=v[8];	t[1][0]=v[3];	t[1][1]=v[0];	t[1][2]=v[7];	t[2][0]=v[11];	t[2][1]=v[10];	t[2][2]=v[6];	break;
		case 0x9f:	t = new float[2][3][3];	t[0][0]=v[4];	t[0][1]=v[9];	t[0][2]=v[8];	t[1][0]=v[11];	t[1][1]=v[10];	t[1][2]=v[6];	break;
		case 0xa0:	t = new float[2][3][3];	t[0][0]=v[5];	t[0][1]=v[4];	t[0][2]=v[10];	t[1][0]=v[4];	t[1][1]=v[8];	t[1][2]=v[10];	break;
		case 0xa1:	t = new float[3][3][3];	t[0][0]=v[8];	t[0][1]=v[10];	t[1][2]=v[4];	t[1][0]=v[10];	t[1][1]=v[5];	t[1][2]=v[4];	t[2][0]=v[7];	t[2][1]=v[0];	t[2][2]=v[3];	break;
		case 0xa2:	t = new float[3][3][3];	t[0][0]=v[1];	t[0][1]=v[0];	t[0][2]=v[5];	t[1][0]=v[0];	t[1][1]=v[10];	t[1][2]=v[5];	t[2][0]=v[0];	t[2][1]=v[8];	t[2][2]=v[10];	break;
		case 0xa4:	t = new float[3][3][3];	t[0][0]=v[5];	t[0][1]=v[4];	t[1][2]=v[10];	t[1][0]=v[4];	t[1][1]=v[8];	t[1][2]=v[10];	t[2][0]=v[2];	t[2][1]=v[6];	t[2][2]=v[3];	break;
		case 0xa5:	t = new float[4][3][3];	t[0][0]=v[2];	t[0][1]=v[5];	t[0][2]=v[4];	t[1][0]=v[0];	t[1][1]=v[2];	t[1][2]=v[4];	t[2][0]=v[8];	t[2][1]=v[10];	t[2][2]=v[9];	t[3][0]=v[8];	t[3][1]=v[9];	t[3][2]=v[7];	break;
		case 0xa6:	t = new float[4][3][3];	t[0][0]=v[3];	t[0][1]=v[6];	t[0][2]=v[10];	t[1][0]=v[3];	t[1][1]=v[10];	t[1][2]=v[0];	t[2][0]=v[0];	t[2][1]=v[10];	t[2][2]=v[8];	t[3][0]=v[1];	t[3][1]=v[2];	t[3][2]=v[5];	break;
		case 0xa7:	t = new float[3][3][3];	t[0][0]=v[8];	t[0][1]=v[10];	t[1][2]=v[6];	t[1][0]=v[7];	t[1][1]=v[8];	t[1][2]=v[6];	t[2][0]=v[2];	t[2][1]=v[5];	t[2][2]=v[1];	break;
		case 0xa8:	t = new float[3][3][3];	t[0][0]=v[4];	t[0][1]=v[8];	t[0][2]=v[1];	t[1][0]=v[8];	t[1][1]=v[2];	t[1][2]=v[1];	t[2][0]=v[8];	t[2][1]=v[10];	t[2][2]=v[2];	break;
		case 0xa9:	t = new float[4][3][3];	t[0][0]=v[7];	t[0][1]=v[3];	t[0][2]=v[2];	t[1][0]=v[7];	t[1][1]=v[2];	t[1][2]=v[8];	t[2][0]=v[8];	t[2][1]=v[2];	t[2][2]=v[10];	t[3][0]=v[4];	t[3][1]=v[0];	t[3][2]=v[1];	break;
		case 0xaa:	t = new float[3][3][3];	t[0][0]=v[10];	t[0][1]=v[2];	t[0][2]=v[8];	t[1][0]=v[8];	t[1][1]=v[2];	t[1][2]=v[0];	break;
		case 0xab:	t = new float[3][3][3];	t[0][0]=v[2];	t[0][1]=v[3];	t[0][2]=v[7];	t[1][0]=v[8];	t[1][1]=v[2];	t[1][2]=v[7];	t[2][0]=v[10];	t[2][1]=v[2];	t[2][2]=v[8];	break;
		case 0xac:	t = new float[3][3][3];	t[0][0]=v[8];	t[0][1]=v[6];	t[0][2]=v[1];	t[1][0]=v[1];	t[1][1]=v[6];	t[1][2]=v[3];	t[2][0]=v[4];	t[2][1]=v[8];	t[2][2]=v[1];	break;
		case 0xad:	t = new float[3][3][3];	t[0][0]=v[6];	t[0][1]=v[7];	t[1][2]=v[8];	t[1][0]=v[10];	t[1][1]=v[6];	t[1][2]=v[8];	t[2][0]=v[4];	t[2][1]=v[0];	t[2][2]=v[1];	break;
		case 0xae:	t = new float[3][3][3];	t[0][0]=v[10];	t[0][1]=v[6];	t[0][2]=v[3];	t[1][0]=v[0];	t[1][1]=v[10];	t[1][2]=v[3];	t[2][0]=v[8];	t[2][1]=v[10];	t[2][2]=v[0];	break;
		case 0xaf:	t = new float[2][3][3];	t[0][0]=v[6];	t[0][1]=v[7];	t[0][2]=v[8];	t[1][0]=v[10];	t[1][1]=v[6];	t[1][2]=v[8];	break;
		case 0xb0:	t = new float[3][3][3];	t[0][0]=v[10];	t[0][1]=v[5];	t[0][2]=v[11];	t[1][0]=v[5];	t[1][1]=v[7];	t[1][2]=v[11];	t[2][0]=v[5];	t[2][1]=v[4];	t[2][2]=v[7];	break;
		case 0xb1:	t = new float[3][3][3];	t[0][0]=v[3];	t[0][1]=v[10];	t[0][2]=v[4];	t[1][0]=v[4];	t[1][1]=v[10];	t[1][2]=v[5];	t[2][0]=v[0];	t[2][1]=v[3];	t[2][2]=v[4];	break;
		case 0xb2:	t = new float[4][3][3];	t[0][0]=v[10];	t[0][1]=v[5];	t[0][2]=v[11];	t[1][0]=v[11];	t[1][1]=v[5];	t[1][2]=v[7];	t[2][0]=v[7];	t[2][1]=v[5];	t[2][2]=v[1];	t[3][0]=v[7];	t[3][1]=v[1];	t[3][2]=v[0];	break;
		case 0xb3:	t = new float[3][3][3];	t[0][0]=v[11];	t[0][1]=v[10];	t[0][2]=v[5];	t[1][0]=v[1];	t[1][1]=v[11];	t[1][2]=v[5];	t[2][0]=v[3];	t[2][1]=v[11];	t[2][2]=v[1];	break;
		case 0xb4:	t = new float[4][3][3];	t[0][0]=v[2];	t[0][1]=v[3];	t[0][2]=v[7];	t[1][0]=v[2];	t[1][1]=v[7];	t[1][2]=v[5];	t[2][0]=v[5];	t[2][1]=v[7];	t[2][2]=v[4];	t[3][0]=v[10];	t[3][1]=v[6];	t[3][2]=v[11];	break;
		case 0xb5:	t = new float[3][3][3];	t[0][0]=v[0];	t[0][1]=v[2];	t[1][2]=v[5];	t[1][0]=v[4];	t[1][1]=v[0];	t[1][2]=v[5];	t[2][0]=v[10];	t[2][1]=v[6];	t[2][2]=v[11];	break;
		case 0xb6:	t = new float[3][3][3];	t[0][0]=v[1];	t[0][1]=v[5];	t[0][2]=v[2];	t[1][0]=v[11];	t[1][1]=v[10];	t[1][2]=v[6];	t[2][0]=v[3];	t[2][1]=v[0];	t[2][2]=v[7];	break;
		case 0xb7:	t = new float[2][3][3];	t[0][0]=v[1];	t[0][1]=v[2];	t[0][2]=v[5];	t[1][0]=v[10];	t[1][1]=v[6];	t[1][2]=v[11];	break;
		case 0xb9:	t = new float[3][3][3];	t[0][0]=v[10];	t[0][1]=v[2];	t[1][2]=v[3];	t[1][0]=v[11];	t[1][1]=v[10];	t[1][2]=v[3];	t[2][0]=v[0];	t[2][1]=v[1];	t[2][2]=v[4];	break;
		case 0xba:	t = new float[3][3][3];	t[0][0]=v[0];	t[0][1]=v[7];	t[0][2]=v[11];	t[1][0]=v[10];	t[1][1]=v[0];	t[1][2]=v[11];	t[2][0]=v[2];	t[2][1]=v[0];	t[2][2]=v[10];	break;
		case 0xbb:	t = new float[2][3][3];	t[0][0]=v[3];	t[0][1]=v[11];	t[0][2]=v[10];	t[1][0]=v[2];	t[1][1]=v[3];	t[1][2]=v[10];	break;
		case 0xbc:	t = new float[3][3][3];	t[0][0]=v[4];	t[0][1]=v[7];	t[1][2]=v[3];	t[1][0]=v[1];	t[1][1]=v[4];	t[1][2]=v[3];	t[2][0]=v[6];	t[2][1]=v[11];	t[2][2]=v[10];	break;
		case 0xbd:	t = new float[2][3][3];	t[0][0]=v[1];	t[0][1]=v[4];	t[0][2]=v[0];	t[1][0]=v[11];	t[1][1]=v[10];	t[1][2]=v[6];	break;
		case 0xbe:	t = new float[2][3][3];	t[0][0]=v[0];	t[0][1]=v[7];	t[0][2]=v[3];	t[1][0]=v[6];	t[1][1]=v[11];	t[1][2]=v[10];	break;
		case 0xbf:	t = new float[1][3][3];	t[0][0]=v[6];	t[0][1]=v[11];	t[0][2]=v[10];	break;
		case 0xc0:	t = new float[2][3][3];	t[0][0]=v[6];	t[0][1]=v[5];	t[0][2]=v[11];	t[1][0]=v[5];	t[1][1]=v[9];	t[1][2]=v[11];	break;
		case 0xc1:	t = new float[3][3][3];	t[0][0]=v[6];	t[0][1]=v[5];	t[1][2]=v[11];	t[1][0]=v[5];	t[1][1]=v[9];	t[1][2]=v[11];	t[2][0]=v[3];	t[2][1]=v[7];	t[2][2]=v[0];	break;
		case 0xc2:	t = new float[3][3][3];	t[0][0]=v[9];	t[0][1]=v[11];	t[1][2]=v[5];	t[1][0]=v[11];	t[1][1]=v[6];	t[1][2]=v[5];	t[2][0]=v[4];	t[2][1]=v[1];	t[2][2]=v[0];	break;
		case 0xc3:	t = new float[4][3][3];	t[0][0]=v[3];	t[0][1]=v[6];	t[0][2]=v[5];	t[1][0]=v[1];	t[1][1]=v[3];	t[1][2]=v[5];	t[2][0]=v[9];	t[2][1]=v[11];	t[2][2]=v[10];	t[3][0]=v[9];	t[3][1]=v[10];	t[3][2]=v[4];	break;
		case 0xc4:	t = new float[3][3][3];	t[0][0]=v[5];	t[0][1]=v[9];	t[0][2]=v[2];	t[1][0]=v[9];	t[1][1]=v[3];	t[1][2]=v[2];	t[2][0]=v[9];	t[2][1]=v[11];	t[2][2]=v[3];	break;
		case 0xc5:	t = new float[3][3][3];	t[0][0]=v[9];	t[0][1]=v[7];	t[0][2]=v[2];	t[1][0]=v[2];	t[1][1]=v[7];	t[1][2]=v[0];	t[2][0]=v[5];	t[2][1]=v[9];	t[2][2]=v[2];	break;
		case 0xc6:	t = new float[4][3][3];	t[0][0]=v[4];	t[0][1]=v[0];	t[0][2]=v[3];	t[1][0]=v[4];	t[1][1]=v[3];	t[1][2]=v[9];	t[2][0]=v[9];	t[2][1]=v[3];	t[2][2]=v[11];	t[3][0]=v[5];	t[3][1]=v[1];	t[3][2]=v[2];	break;
		case 0xc7:	t = new float[3][3][3];	t[0][0]=v[7];	t[0][1]=v[4];	t[1][2]=v[9];	t[1][0]=v[11];	t[1][1]=v[7];	t[1][2]=v[9];	t[2][0]=v[5];	t[2][1]=v[1];	t[2][2]=v[2];	break;
		case 0xc8:	t = new float[3][3][3];	t[0][0]=v[2];	t[0][1]=v[1];	t[0][2]=v[6];	t[1][0]=v[1];	t[1][1]=v[11];	t[1][2]=v[6];	t[2][0]=v[1];	t[2][1]=v[9];	t[2][2]=v[11];	break;
		case 0xc9:	t = new float[4][3][3];	t[0][0]=v[0];	t[0][1]=v[7];	t[0][2]=v[11];	t[1][0]=v[0];	t[1][1]=v[11];	t[1][2]=v[1];	t[2][0]=v[1];	t[2][1]=v[11];	t[2][2]=v[9];	t[3][0]=v[2];	t[3][1]=v[3];	t[3][2]=v[6];	break;
		case 0xcb:	t = new float[3][3][3];	t[0][0]=v[9];	t[0][1]=v[11];	t[1][2]=v[7];	t[1][0]=v[4];	t[1][1]=v[9];	t[1][2]=v[7];	t[2][0]=v[3];	t[2][1]=v[6];	t[2][2]=v[2];	break;
		case 0xcc:	t = new float[3][3][3];	t[0][0]=v[11];	t[0][1]=v[3];	t[0][2]=v[9];	t[1][0]=v[9];	t[1][1]=v[3];	t[1][2]=v[1];	break;
		case 0xcd:	t = new float[3][3][3];	t[0][0]=v[11];	t[0][1]=v[7];	t[0][2]=v[0];	t[1][0]=v[1];	t[1][1]=v[11];	t[1][2]=v[0];	t[2][0]=v[9];	t[2][1]=v[11];	t[2][2]=v[1];	break;
		case 0xce:	t = new float[3][3][3];	t[0][0]=v[3];	t[0][1]=v[0];	t[0][2]=v[4];	t[1][0]=v[9];	t[1][1]=v[3];	t[1][2]=v[4];	t[2][0]=v[11];	t[2][1]=v[3];	t[2][2]=v[9];	break;
		case 0xcf:	t = new float[2][3][3];	t[0][0]=v[7];	t[0][1]=v[4];	t[0][2]=v[9];	t[1][0]=v[11];	t[1][1]=v[7];	t[1][2]=v[9];	break;
		case 0xd0:	t = new float[3][3][3];	t[0][0]=v[8];	t[0][1]=v[7];	t[0][2]=v[9];	t[1][0]=v[7];	t[1][1]=v[5];	t[1][2]=v[9];	t[2][0]=v[7];	t[2][1]=v[6];	t[2][2]=v[5];	break;
		case 0xd2:	t = new float[4][3][3];	t[0][0]=v[0];	t[0][1]=v[1];	t[0][2]=v[5];	t[1][0]=v[0];	t[1][1]=v[5];	t[1][2]=v[7];	t[2][0]=v[7];	t[2][1]=v[5];	t[2][2]=v[6];	t[3][0]=v[8];	t[3][1]=v[4];	t[3][2]=v[9];	break;
		case 0xd3:	t = new float[3][3][3];	t[0][0]=v[6];	t[0][1]=v[5];	t[1][2]=v[1];	t[1][0]=v[3];	t[1][1]=v[6];	t[1][2]=v[1];	t[2][0]=v[4];	t[2][1]=v[9];	t[2][2]=v[8];	break;
		case 0xd4:	t = new float[4][3][3];	t[0][0]=v[8];	t[0][1]=v[7];	t[0][2]=v[9];	t[1][0]=v[9];	t[1][1]=v[7];	t[1][2]=v[5];	t[2][0]=v[5];	t[2][1]=v[7];	t[2][2]=v[3];	t[3][0]=v[5];	t[3][1]=v[3];	t[3][2]=v[2];	break;
		case 0xd5:	t = new float[3][3][3];	t[0][0]=v[2];	t[0][1]=v[5];	t[0][2]=v[9];	t[1][0]=v[8];	t[1][1]=v[2];	t[1][2]=v[9];	t[2][0]=v[0];	t[2][1]=v[2];	t[2][2]=v[8];	break;
		case 0xd6:	t = new float[3][3][3];	t[0][0]=v[3];	t[0][1]=v[7];	t[0][2]=v[0];	t[1][0]=v[9];	t[1][1]=v[8];	t[1][2]=v[4];	t[2][0]=v[1];	t[2][1]=v[2];	t[2][2]=v[5];	break;
		case 0xd7:	t = new float[2][3][3];	t[0][0]=v[2];	t[0][1]=v[5];	t[0][2]=v[1];	t[1][0]=v[4];	t[1][1]=v[9];	t[1][2]=v[8];	break;
		case 0xd8:	t = new float[3][3][3];	t[0][0]=v[1];	t[0][1]=v[8];	t[0][2]=v[6];	t[1][0]=v[6];	t[1][1]=v[8];	t[1][2]=v[7];	t[2][0]=v[2];	t[2][1]=v[1];	t[2][2]=v[6];	break;
		case 0xd9:	t = new float[3][3][3];	t[0][0]=v[8];	t[0][1]=v[0];	t[1][2]=v[1];	t[1][0]=v[9];	t[1][1]=v[8];	t[1][2]=v[1];	t[2][0]=v[2];	t[2][1]=v[3];	t[2][2]=v[6];	break;
		case 0xda:	t = new float[3][3][3];	t[0][0]=v[2];	t[0][1]=v[0];	t[1][2]=v[7];	t[1][0]=v[6];	t[1][1]=v[2];	t[1][2]=v[7];	t[2][0]=v[8];	t[2][1]=v[4];	t[2][2]=v[9];	break;
		case 0xdb:	t = new float[2][3][3];	t[0][0]=v[3];	t[0][1]=v[6];	t[0][2]=v[2];	t[1][0]=v[9];	t[1][1]=v[8];	t[1][2]=v[4];	break;
		case 0xdc:	t = new float[3][3][3];	t[0][0]=v[9];	t[0][1]=v[8];	t[0][2]=v[7];	t[1][0]=v[3];	t[1][1]=v[9];	t[1][2]=v[7];	t[2][0]=v[1];	t[2][1]=v[9];	t[2][2]=v[3];	break;
		case 0xdd:	t = new float[2][3][3];	t[0][0]=v[1];	t[0][1]=v[9];	t[0][2]=v[8];	t[1][0]=v[0];	t[1][1]=v[1];	t[1][2]=v[8];	break;
		case 0xde:	t = new float[2][3][3];	t[0][0]=v[3];	t[0][1]=v[0];	t[0][2]=v[7];	t[1][0]=v[8];	t[1][1]=v[4];	t[1][2]=v[9];	break;
		case 0xdf:	t = new float[1][3][3];	t[0][0]=v[4];	t[0][1]=v[9];	t[0][2]=v[8];	break;
		case 0xe0:	t = new float[3][3][3];	t[0][0]=v[11];	t[0][1]=v[6];	t[0][2]=v[8];	t[1][0]=v[6];	t[1][1]=v[4];	t[1][2]=v[8];	t[2][0]=v[6];	t[2][1]=v[5];	t[2][2]=v[4];	break;
		case 0xe1:	t = new float[4][3][3];	t[0][0]=v[3];	t[0][1]=v[0];	t[0][2]=v[4];	t[1][0]=v[3];	t[1][1]=v[4];	t[1][2]=v[6];	t[2][0]=v[6];	t[2][1]=v[4];	t[2][2]=v[5];	t[3][0]=v[11];	t[3][1]=v[7];	t[3][2]=v[8];	break;
		case 0xe2:	t = new float[3][3][3];	t[0][0]=v[0];	t[0][1]=v[11];	t[0][2]=v[5];	t[1][0]=v[5];	t[1][1]=v[11];	t[1][2]=v[6];	t[2][0]=v[1];	t[2][1]=v[0];	t[2][2]=v[5];	break;
		case 0xe3:	t = new float[3][3][3];	t[0][0]=v[1];	t[0][1]=v[3];	t[1][2]=v[6];	t[1][0]=v[5];	t[1][1]=v[1];	t[1][2]=v[6];	t[2][0]=v[11];	t[2][1]=v[7];	t[2][2]=v[8];	break;
		case 0xe5:	t = new float[3][3][3];	t[0][0]=v[5];	t[0][1]=v[4];	t[1][2]=v[0];	t[1][0]=v[2];	t[1][1]=v[5];	t[1][2]=v[0];	t[2][0]=v[7];	t[2][1]=v[8];	t[2][2]=v[11];	break;
		case 0xe6:	t = new float[3][3][3];	t[0][0]=v[11];	t[0][1]=v[3];	t[1][2]=v[0];	t[1][0]=v[8];	t[1][1]=v[11];	t[1][2]=v[0];	t[2][0]=v[1];	t[2][1]=v[2];	t[2][2]=v[5];	break;
		case 0xe7:	t = new float[2][3][3];	t[0][0]=v[2];	t[0][1]=v[5];	t[0][2]=v[1];	t[1][0]=v[8];	t[1][1]=v[11];	t[1][2]=v[7];	break;
		case 0xe8:	t = new float[4][3][3];	t[0][0]=v[11];	t[0][1]=v[6];	t[0][2]=v[8];	t[1][0]=v[8];	t[1][1]=v[6];	t[1][2]=v[4];	t[2][0]=v[4];	t[2][1]=v[6];	t[2][2]=v[2];	t[3][0]=v[4];	t[3][1]=v[2];	t[3][2]=v[1];	break;
		case 0xe9:	t = new float[3][3][3];	t[0][0]=v[2];	t[0][1]=v[6];	t[0][2]=v[3];	t[1][0]=v[8];	t[1][1]=v[11];	t[1][2]=v[7];	t[2][0]=v[0];	t[2][1]=v[1];	t[2][2]=v[4];	break;
		case 0xea:	t = new float[3][3][3];	t[0][0]=v[8];	t[0][1]=v[11];	t[0][2]=v[6];	t[1][0]=v[2];	t[1][1]=v[8];	t[1][2]=v[6];	t[2][0]=v[0];	t[2][1]=v[8];	t[2][2]=v[2];	break;
		case 0xeb:	t = new float[2][3][3];	t[0][0]=v[2];	t[0][1]=v[3];	t[0][2]=v[6];	t[1][0]=v[11];	t[1][1]=v[7];	t[1][2]=v[8];	break;
		case 0xec:	t = new float[3][3][3];	t[0][0]=v[1];	t[0][1]=v[4];	t[0][2]=v[8];	t[1][0]=v[11];	t[1][1]=v[1];	t[1][2]=v[8];	t[2][0]=v[3];	t[2][1]=v[1];	t[2][2]=v[11];	break;
		case 0xed:	t = new float[2][3][3];	t[0][0]=v[1];	t[0][1]=v[4];	t[0][2]=v[0];	t[1][0]=v[7];	t[1][1]=v[8];	t[1][2]=v[11];	break;
		case 0xee:	t = new float[2][3][3];	t[0][0]=v[0];	t[0][1]=v[8];	t[0][2]=v[11];	t[1][0]=v[3];	t[1][1]=v[0];	t[1][2]=v[11];	break;
		case 0xef:	t = new float[1][3][3];	t[0][0]=v[7];	t[0][1]=v[8];	t[0][2]=v[11];	break;
		case 0xf0:	t = new float[3][3][3];	t[0][0]=v[5];	t[0][1]=v[4];	t[0][2]=v[6];	t[1][0]=v[6];	t[1][1]=v[4];	t[1][2]=v[7];	break;
		case 0xf1:	t = new float[3][3][3];	t[0][0]=v[4];	t[0][1]=v[0];	t[0][2]=v[3];	t[1][0]=v[6];	t[1][1]=v[4];	t[1][2]=v[3];	t[2][0]=v[5];	t[2][1]=v[4];	t[2][2]=v[6];	break;
		case 0xf2:	t = new float[3][3][3];	t[0][0]=v[5];	t[0][1]=v[1];	t[0][2]=v[0];	t[1][0]=v[7];	t[1][1]=v[5];	t[1][2]=v[0];	t[2][0]=v[6];	t[2][1]=v[5];	t[2][2]=v[7];	break;
		case 0xf3:	t = new float[2][3][3];	t[0][0]=v[6];	t[0][1]=v[5];	t[0][2]=v[1];	t[1][0]=v[3];	t[1][1]=v[6];	t[1][2]=v[1];	break;
		case 0xf4:	t = new float[3][3][3];	t[0][0]=v[7];	t[0][1]=v[3];	t[0][2]=v[2];	t[1][0]=v[5];	t[1][1]=v[7];	t[1][2]=v[2];	t[2][0]=v[4];	t[2][1]=v[7];	t[2][2]=v[5];	break;
		case 0xf5:	t = new float[2][3][3];	t[0][0]=v[5];	t[0][1]=v[4];	t[0][2]=v[0];	t[1][0]=v[2];	t[1][1]=v[5];	t[1][2]=v[0];	break;
		case 0xf6:	t = new float[2][3][3];	t[0][0]=v[5];	t[0][1]=v[1];	t[0][2]=v[2];	t[1][0]=v[3];	t[1][1]=v[0];	t[1][2]=v[7];	break;
		case 0xf7:	t = new float[1][3][3];	t[0][0]=v[2];	t[0][1]=v[5];	t[0][2]=v[1];	break;
		case 0xf8:	t = new float[3][3][3];	t[0][0]=v[6];	t[0][1]=v[2];	t[0][2]=v[1];	t[1][0]=v[4];	t[1][1]=v[6];	t[1][2]=v[1];	t[2][0]=v[7];	t[2][1]=v[6];	t[2][2]=v[4];	break;
		case 0xf9:	t = new float[2][3][3];	t[0][0]=v[4];	t[0][1]=v[0];	t[0][2]=v[1];	t[1][0]=v[2];	t[1][1]=v[3];	t[1][2]=v[6];	break;
		case 0xfa:	t = new float[2][3][3];	t[0][0]=v[7];	t[0][1]=v[6];	t[0][2]=v[2];	t[1][0]=v[0];	t[1][1]=v[7];	t[1][2]=v[2];	break;
		case 0xfb:	t = new float[1][3][3];	t[0][0]=v[3];	t[0][1]=v[6];	t[0][2]=v[2];	break;
		case 0xfc:	t = new float[2][3][3];	t[0][0]=v[4];	t[0][1]=v[7];	t[0][2]=v[3];	t[1][0]=v[1];	t[1][1]=v[4];	t[1][2]=v[3];	break;
		case 0xfd:	t = new float[1][3][3];	t[0][0]=v[1];	t[0][1]=v[4];	t[0][2]=v[0];	break;
		case 0xfe:	t = new float[1][3][3];	t[0][0]=v[0];	t[0][1]=v[7];	t[0][2]=v[3];	break;
		case 0xff:	break;
		default:
			System.err.println("ERROR");
		}
		return t;
	}
	
	
}

/**
 * @author Andr� Eriksson Tree representing a parametric curve
 */
public class MarchingCubes {
	private int nElems = 20;
	
	/** masks corresponding to the corners */
	private final int C0 = 0x01;
	private final int C1 = 0x02;
	private final int C2 = 0x04;
	private final int C3 = 0x08;
	private final int C4 = 0x10;
	private final int C5 = 0x20;
	private final int C6 = 0x40;
	private final int C7 = 0x80;
	
	/** elements */
	LinkedList<MCElement> elems = new LinkedList<MCElement>();
	
	GeoFunctionNVar f;
	
	/** list of traingles, used for drawing */
	MCTriList drawList;
	
	/** viewing volume radius */
	double rad;

	
	/**
	 * @param fcn
	 * @param rad
	 */

	public MarchingCubes(GeoFunctionNVar fcn, double rad) {

		this.rad=rad;
		drawList = new MCTriList(fcn,10000,100);
		f=fcn;
		init();
		
		refine();
		refine();
		
		render();
	}

	private void render() {
		Iterator<MCElement> it = elems.iterator();
		while(it.hasNext()){
			drawList.add(it.next());
		}
	}

	private void refine() {
		Iterator<MCElement> it = elems.iterator();
		
		boolean[][][] t = new boolean[3][3][3];
		float[][] c = new float[3][2];
		int b, be;
		MCElement temp, elem;
		
		LinkedList<MCElement> tl = new LinkedList<MCElement>();
		
		while(it.hasNext()){
			elem = it.next();
			
			be = elem.signs;
			if(be==0x0 || be==0xff)
				continue;
			
			c = elem.cornerVals;
			
			float minX = c[0][0];
			float maxX = c[0][1];
			float minY = c[1][0];
			float maxY = c[1][1];
			float minZ = c[2][0];
			float maxZ = c[2][1];
			float midX = 0.5f*(minX+maxX);
			float midY = 0.5f*(minY+maxY);
			float midZ = 0.5f*(minZ+maxZ);

			t[0][0][0] = (be&C0)!=0;
			t[0][0][1] = f.evaluate(new double[] {minX,minY,midZ})<0;
			t[0][0][2] = (be&C4)!=0;
			t[0][1][0] = f.evaluate(new double[] {minX,midY,minZ})<0;
			t[0][1][1] = f.evaluate(new double[] {minX,midY,midZ})<0;
			t[0][1][2] = f.evaluate(new double[] {minX,midY,maxZ})<0;
			t[0][2][0] = (be&C2)!=0;
			t[0][2][1] = f.evaluate(new double[] {minX,maxY,midZ})<0;
			t[0][2][2] = (be&C6)!=0;
			t[1][0][0] = f.evaluate(new double[] {midX,minY,minZ})<0;
			t[1][0][1] = f.evaluate(new double[] {midX,minY,midZ})<0;
			t[1][0][2] = f.evaluate(new double[] {midX,minY,maxZ})<0;
			t[1][1][0] = f.evaluate(new double[] {midX,midY,minZ})<0;
			t[1][1][1] = f.evaluate(new double[] {midX,midY,midZ})<0;
			t[1][1][2] = f.evaluate(new double[] {midX,midY,maxZ})<0;
			t[1][2][0] = f.evaluate(new double[] {midX,maxY,minZ})<0;
			t[1][2][1] = f.evaluate(new double[] {midX,maxY,midZ})<0;
			t[1][2][2] = f.evaluate(new double[] {midX,maxY,maxZ})<0;
			t[2][0][0] = (be&C1)!=0;
			t[2][0][1] = f.evaluate(new double[] {maxX,minY,midZ})<0;
			t[2][0][2] = (be&C5)!=0;
			t[2][1][0] = f.evaluate(new double[] {maxX,midY,minZ})<0;
			t[2][1][1] = f.evaluate(new double[] {maxX,midY,midZ})<0;
			t[2][1][2] = f.evaluate(new double[] {maxX,midY,maxZ})<0;
			t[2][2][0] = (be&C3)!=0;
			t[2][2][1] = f.evaluate(new double[] {maxX,maxY,midZ})<0;
			t[2][2][2] = (be&C7)!=0;

			//create subcubes in order corresponding to cube corners
			
			//corner 0
			c[0][0]=minX;c[0][1]=midX;
			c[1][0]=minY;c[1][1]=midY;
			c[2][0]=minZ;c[2][1]=midZ;
			
			b=0;
			if(t[0][0][0])	b|=C0;
			if(t[1][0][0])	b|=C1;
			if(t[0][1][0])	b|=C2;
			if(t[1][1][0])	b|=C3;
			if(t[0][0][1])	b|=C4;
			if(t[1][0][1])	b|=C5;
			if(t[0][1][1])	b|=C6;
			if(t[1][1][1])	b|=C7;
			
			if(b!=0&&b!=0xff)
				tl.add(new MCElement(b,c));
			
			//corner 1
			c[0][0]=midX;c[0][1]=maxX;
			c[1][0]=minY;c[1][1]=midY;
			c[2][0]=minZ;c[2][1]=midZ;
			
			b=0;
			if(t[1][0][0])	b|=C0;
			if(t[2][0][0])	b|=C1;
			if(t[1][1][0])	b|=C2;
			if(t[2][1][0])	b|=C3;
			if(t[1][0][1])	b|=C4;
			if(t[2][0][1])	b|=C5;
			if(t[1][1][1])	b|=C6;
			if(t[2][1][1])	b|=C7;
			
			if(b!=0&&b!=0xff)
				tl.add(new MCElement(b,c));
			
			//corner 2
			c[0][0]=minX;c[0][1]=midX;
			c[1][0]=midY;c[1][1]=maxY;
			c[2][0]=minZ;c[2][1]=midZ;
			
			b=0;
			if(t[0][1][0])	b|=C0;
			if(t[1][1][0])	b|=C1;
			if(t[0][2][0])	b|=C2;
			if(t[1][2][0])	b|=C3;
			if(t[0][1][1])	b|=C4;
			if(t[1][1][1])	b|=C5;
			if(t[0][2][1])	b|=C6;
			if(t[1][2][1])	b|=C7;
			
			if(b!=0&&b!=0xff)
				tl.add(new MCElement(b,c));
			
			//corner 3
			c[0][0]=midX;c[0][1]=maxX;
			c[1][0]=midY;c[1][1]=maxY;
			c[2][0]=minZ;c[2][1]=midZ;
			
			b=0;
			if(t[1][1][0])	b|=C0;
			if(t[2][1][0])	b|=C1;
			if(t[1][2][0])	b|=C2;
			if(t[2][2][0])	b|=C3;
			if(t[1][1][1])	b|=C4;
			if(t[2][1][1])	b|=C5;
			if(t[1][2][1])	b|=C6;
			if(t[2][2][1])	b|=C7;
			
			if(b!=0&&b!=0xff)
				tl.add(new MCElement(b,c));
			
			//corner 4
			c[0][0]=minX;c[0][1]=midX;
			c[1][0]=minY;c[1][1]=midY;
			c[2][0]=midZ;c[2][1]=maxZ;
			
			b=0;
			if(t[0][0][1])	b|=C0;
			if(t[1][0][1])	b|=C1;
			if(t[0][1][1])	b|=C2;
			if(t[1][1][1])	b|=C3;
			if(t[0][0][2])	b|=C4;
			if(t[1][0][2])	b|=C5;
			if(t[0][1][2])	b|=C6;
			if(t[1][1][2])	b|=C7;
			
			if(b!=0&&b!=0xff)
				tl.add(new MCElement(b,c));
			
			//corner 5
			c[0][0]=midX;c[0][1]=maxX;
			c[1][0]=minY;c[1][1]=midY;
			c[2][0]=midZ;c[2][1]=maxZ;
			
			b=0;
			if(t[1][0][1])	b|=C0;
			if(t[2][0][1])	b|=C1;
			if(t[1][1][1])	b|=C2;
			if(t[2][1][1])	b|=C3;
			if(t[1][0][2])	b|=C4;
			if(t[2][0][2])	b|=C5;
			if(t[1][1][2])	b|=C6;
			if(t[2][1][2])	b|=C7;
			
			if(b!=0&&b!=0xff)
				tl.add(new MCElement(b,c));
			
			//corner 6
			c[0][0]=minX;c[0][1]=midX;
			c[1][0]=midY;c[1][1]=maxY;
			c[2][0]=midZ;c[2][1]=maxZ;
			
			b=0;
			if(t[0][1][1])	b|=C0;
			if(t[1][1][1])	b|=C1;
			if(t[0][2][1])	b|=C2;
			if(t[1][2][1])	b|=C3;
			if(t[0][1][2])	b|=C4;
			if(t[1][1][2])	b|=C5;
			if(t[0][2][2])	b|=C6;
			if(t[1][2][2])	b|=C7;
			
			if(b!=0&&b!=0xff)
				tl.add(new MCElement(b,c));
			
			//corner 7
			c[0][0]=midX;c[0][1]=maxX;
			c[1][0]=midY;c[1][1]=maxY;
			c[2][0]=midZ;c[2][1]=maxZ;
			
			b=0;
			if(t[1][1][1])	b|=C0;
			if(t[2][1][1])	b|=C1;
			if(t[1][2][1])	b|=C2;
			if(t[2][2][1])	b|=C3;
			if(t[1][1][2])	b|=C4;
			if(t[2][1][2])	b|=C5;
			if(t[1][2][2])	b|=C6;
			if(t[2][2][2])	b|=C7;
			
			if(b!=0&&b!=0xff)
				tl.add(new MCElement(b,c));
		}
		
		elems.clear();
		elems.addAll(tl);
	}

	/**
	 * generates the first few segments
	 */
	private void init() {
		float d = (float) (2*rad/nElems);
		float[][] c = new float[3][2];
		float x,y,z;
		float r = (float)rad;
		
		//precalc a 2d array representing the bottom
		boolean[][][] bottom = new boolean[nElems+1][nElems+1][2];
		x = -r;
		for(int xi = 0; xi <= nElems; xi++, x+=d){
			y = -r;
			for(int yi = 0; yi <= nElems; yi++, x+=d)
				bottom[xi][yi][0]=f.evaluate(new double[] {x,y,-r})<0;
		}
		
		//calculate the initial division of squares
		z = -r;
		for(int zi = 0; zi < nElems; zi++,z+=d){
			int s1 = zi%2;
			int s2 = (zi+1)%2;

			//precalc first rows in x/y dirs
			x = -r;
			for(int xi = 0; xi <= nElems; xi++, x+=d){
				bottom[xi][0][s2]=f.evaluate(new double[] {x,-r,z+d})<0;
				bottom[0][xi][s2]=f.evaluate(new double[] {-r,x,z+d})<0;
			}
			
			c[2][0]=z;c[2][1]=z+d;
			y = -r;
			for(int yi = 0; yi < nElems; yi++,y+=d){
				c[1][0]=y;c[1][1]=y+d;
				x = -r;
				for(int xi = 0; xi < nElems; xi++,x+=d){
					bottom[xi+1][yi+1][s2]=f.evaluate(new double[] {x+d,y+d,z+d})<0;
					
					c[0][0]=x;c[0][1]=x+d;
					int b = 0;
					if(bottom[xi]  [yi]  [s1])	b|=C0;
					if(bottom[xi+1][yi]  [s1])	b|=C1;
					if(bottom[xi]  [yi+1][s1])	b|=C2;
					if(bottom[xi+1][yi+1][s1])	b|=C3;
					if(bottom[xi]  [yi]  [s2])	b|=C4;
					if(bottom[xi+1][yi]  [s2])	b|=C5;
					if(bottom[xi]  [yi+1][s2])	b|=C6;
					if(bottom[xi+1][yi+1][s2])	b|=C7;
					
					if(b!=0&&b!=0xff){
						MCElement temp = new MCElement(b,c);
						elems.add(temp);
					}
				}
			}
		}
	}

	/**
	 * @return the amount of visible segments
	 */
	public int getVisibleChunks() {
		return drawList.getChunkAmt();
	}

	/**
	 * @return the amount of vertices per segment
	 */
	public int getVerticesPerChunk() {
		return 3;
	}

	public FloatBuffer getVertices() {
		return drawList.getTriangleBuffer();
	}

	public FloatBuffer getNormals() {
		return drawList.getNormalBuffer();
	}
}
